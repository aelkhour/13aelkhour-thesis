%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: Formulaire_CouvertureThese_2012-2013-9.pdf
%%Creator: Adobe Acrobat 9.5.3
%%For: aelkhour
%%CreationDate: 05/28/2013, 11:10:15 PM
%%BoundingBox: 8 -25 604 817
%%HiResBoundingBox: 8.3901 -25 603.6100 817
%%CropBox: 8.3901 -25 603.6100 817
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%TargetDevice: (hp LaserJet 4250) (3010.107) 0
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq{pop}{setblackgeneration}ifelse
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq{pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
false Adobe_AGM_Core/begin_feature gx false {
%%BeginFeature: *PageSize Letter

    <</DeferredMediaSelection true /PageSize [612 792] /ImagingBBox null /MediaClass null >> setpagedevice
%%EndFeature
} Adobe_AGM_Core/end_feature gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 16894 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-13:18:53        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="Adobe PDF library 6.66"
   xmp:CreatorTool="Illustrator"
   xmp:ModifyDate="2013-04-15T11:02:06+02:00"
   xmp:CreateDate="2011-07-28T12:24:09+02:00"
   xmp:MetadataDate="2013-04-15T11:02:06+02:00"
   xmpMM:DocumentID="uuid:f5a9a97a-883b-4b47-bd33-d61ebc3d00b3"
   xmpMM:InstanceID="uuid:d8458fa3-7249-48bc-bcca-4e2c787a5182"
   dc:format="application/pdf">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:format="JPEG"
      xmpGImg:width="176"
      xmpGImg:height="256"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACwAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Madp2nnT7Um1hJMMdT6&#xA;a/yj2yEYim7JklxHc80T+jdO/wCWWH/kWv8ATJcIYeLLvLv0bp3/ACyw/wDItf6Y8IXxZd5d+jdO&#xA;/wCWWH/kWv8ATHhC+LLvLv0bp3/LLD/yLX+mPCF8WXeXfo3Tv+WWH/kWv9MeEL4su8u/Runf8ssP&#xA;/Itf6Y8IXxZd5d+jdO/5ZYf+Ra/0x4Qviy7y79G6d/yyw/8AItf6Y8IXxZd5d+jdO/5ZYf8AkWv9&#xA;MeEL4su8u/Runf8ALLD/AMi1/pjwhfFl3l36N07/AJZYf+Ra/wBMeEL4su8u/Runf8ssP/Itf6Y8&#xA;IXxZd5d+jdO/5ZYf+Ra/0x4Qviy7y79G6d/yyw/8i1/pjwhfFl3l36N07/llh/5Fr/THhC+LLvLv&#xA;0bp3/LLD/wAi1/pjwhfFl3l36N07/llh/wCRa/0x4Qviy7y79G6d/wAssP8AyLX+mPCF8WXeXfo3&#xA;Tv8Allh/5Fr/AEx4Qviy7y79G6d/yyw/8i1/pjwhfFl3lD6jp2njT7oi1iBETkEIv8p9sjKIpnjy&#xA;S4hueaI03/jnWv8Axhj/AOIjJR5MMv1H3qOs63pmjWf13UpvQtuSp6gR3+Jum0YY/TTK82aOOPFI&#xA;0GzT6aeaXDAWfgPvY6v5qfl8oQ/pVgFBReUN1udvh3j+J9qfzVqPHMb+U8H877D+pz/5D1f8z/ZR&#xA;/WhNQ/Ob8u7B4Flv5nR5CGlWG44RkmhMjOq7UeoG+1KD7NbMWtxZPpN/Ash2FqiLMQP84frWn87v&#xA;ys3rrTirBjW2vhSlP+KvhG2/br75b40e9j/Ier/mfbH9bI9L8xafrEVjqmkTm50u8jnIl9OUchA3&#xA;Cqoyhh8dRWnxe/w5YCCLDrs+CeKZhMVIJ1hanYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUPqX/&#xA;ABzrr/jDJ/xE4JcmeL6h73ab/wAc61/4wx/8RGMeS5fqPvYH+edP8I2la/8AHQipSvX05fD8O9en&#xA;xUzU9s/3Q/rfoLv/AGZ/xg/1D98Xzvr+vQaNYfWWhaUuOCIHVUBKrQyPTisZYqnIrwqU5fAycdFp&#xA;9PLLKga/HIefX5vWa7VeBDi5n7Pieg5C+VkXXNggu9Yu9Ivbz65NBeK1pdwPPdqkaxyxTyypDbOZ&#xA;VuBxlBeYsvpMyoVQNnSaaEIxMQBzrbnt37CuX7TbzOPJqMmXijKUTwcW9cPKJkBxEx5G7Nb1tABG&#xA;6NqH16yjmYIkqOySqjKQjqQC3SorsfuH8tDONHn+Px9/vel0Op8aAJ+oSo+8Vt+nf731f+TZU+Qf&#xA;K/L4q/X/AIlIrX64++wqd+tN6V5bcsysP0h4nt3/AByfw+4PS8tdQ7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYqh9S/4511/wAYZP8AiJwS5M8X1D3u03/jnWv/ABhj/wCIjGPJcv1H3sG/PD6qvktJ&#xA;rmV44obyJiI0V2bkroRR2QUo5Y79twRUZgdpYePHzqjf6P0u99mrOpoVZiefw8i+XvPGpaKfMHlk&#xA;WNxfzwtc0umnhjtzHwmt35LH9Zl9dgqyqiF0PPdW5VJwdNpoiE6O3u8pefn9lO+7SxZxmwgiIuW1&#xA;T2u4n1XEedDc3yFijBPKN5cfpez03U5ZZNPmKTqwEK3BazhlgWFLl1uWiiTm68aUYAfCtQRtMs4w&#xA;gZAbdfx37vOaDHnjqIXLhlR4SaPK4kc+XpI+7nbMvKKeU4bjXIry1vruaO8aONo7yCGaKENJ6K3L&#xA;i2mWSQJ1YBf214jiQcXNqQBE8OxF/jb8c3c9nSyRMhGUOMc/TvsfTykBy/0osdH1z5C06007yt5Y&#xA;ttN9YW0ljJcReu3rsv1oLcEO6CBWCtJQfAO2w7bDCQYAjq8x2jllk1EzKuK625bbfoZlljhOxVjP&#xA;nXzN5h0C0kvtO0IarY21vLc307XaW3pLEpY0RkkZ/hBO2QnIjo52i0uPMeGU+CRIA9N3fxCQWX5n&#xA;+Y5fKd15puvLKW2kRWhu7aT9ILI0x5hQnAQhkrUmp8OmQ8U1dbOZPsvEMwwjJc+Kj6eX2ph5k/Mj&#xA;9C/l9Yeb/wBHfWPrsVrL9R9bhx+tIHp6nBq8a/y75KWSogtOm7N8XUyw8VcJlvXd5WknmvXtTm/M&#xA;yHTdD0e4vNZ0q0S6aaLUhZxSWzOvOGWGSKWN1LOP8ruDtlcj6thuHK0mCA0pnkmBCcq+jiIPeCCD&#xA;+hOdV/MPVINdtvLmmaF+kvMJs1vr+0+txwRQKaAoJpF/ekM3ZRtv40mchugN3GxdnQOM5Zz4cfFw&#xA;g8JJPw6NeZ/zD1jRZPLtnH5fNxq/mAyqthJdxxei8IQlWlVJUavqdcZZCK25rpezoZRkkclQx1vw&#xA;k3d9Nu5lOh3esXenJPq+nrpl6xYNZpOLnioNFJkVUXfrQDJxJPNwM8IRlUJcUe+q+xH5JpdirsVd&#xA;irsVdiqH1L/jnXX/ABhk/wCInBLkzxfUPe7Tf+Oda/8AGGP/AIiMY8ly/Ufew787Qp/LDWg2wb6s&#xA;N6dTdxAdf7PmOuY+r/uz8Pvdz7N/49j/AM7/AHMnyNrGlx6hFE6pE1xbN60PqpzjAVSAZAFVilHV&#xA;qdOmxHwrqsOTh76P4/H4r0TtDQDURG0eKB4o8W45cj5eQ8udUlNqr22nx2UcSRa27zpbu08UsgmC&#xA;1MrIjyTE0nPxlFRhUj7LoL5Rs8ZNx93u/FfDfm8nnkYGOAQMc4BNmVm5cW5IJ9W+568yIgcIPdJ0&#xA;5LG0EPKOSRiZXeOJIFMpFBxSNAF249PvH7GFmy8Zvu5dfx97l6XTHFGhRPuru6D4ef6PX/lJeXlr&#xA;yijhavpUIKuOQP8Ao8XIbg/s17j6eh3+D6I+4PE62/Hnf8+X3ssy1xnYqkPn/wD5QTzJ/wBsu9/6&#xA;h3yM/pLl9n/4xj/rx+8MC/8AXb/+3X/zMyj/ACf473b/APOz/wA9iXnjynJZ/k1pGqnW9UuhNBp7&#xA;fo24nV7RPViU8UiEasAnRfi2yM41EG3Y6HViWunDggKMvUB6tj3380185XOi2v50X0ms65eeXrVt&#xA;KjEd7YuY5HfmlIiRHN8JAJO3UDfDKuM2acfRxnLQxEIRyHjO0vjvzCI/MuT8u7+K0vk1e903zNaW&#xA;Ucmj6okVz6l2hQmIFgg5lj+1VSK+GOQxPXdh2YNTAmPBGWIy9UbHp7+qU+b7/U57D8sr/wA23dxp&#xA;VyTenUNQiBiuIl5RCOTZW4u0YUn4fHbBM7RtydHjgJaiOECY9NDmDzv4W9i8jX2j3fl+J9I1W51q&#xA;0jd0/SN4XaZ3ryILMkVePKgotMyMZFbG3mtdCccnriIHuHL9Kf5Nw3Yq7FXYq7FXYqh9S/4511/x&#xA;hk/4icEuTPF9Q97tN/451r/xhj/4iMY8ly/Ufel3m/RdM1zy9c6TqcssFleNDE8kBAkDGZPTA5LI&#xA;u8nEGq0p1yGXGJx4S36LWS02UZYUZRvny3FeXe80t/yP/LS8svrttqOrz28d7JZloiHYXEN49nKp&#xA;UWxk4xzhg0n2VAL8gtWzG/IQ7z9n6nf/AOi7Vfzcfyl/xSe3P5DeTJ9Ht9K+sX8cFvJNN6iSx83k&#xA;nWFXL1iK0pbJRVUKPDpRloYGIG+347nAy9vZ8mQzkI2QBy7r8/MpW35C/l8t79SfUNVScxqE5yIq&#xA;P6omIWKRoAjyBY3ZkRiwXdhRviiezsfefs/Up7dzG9o7+/8AWzzRbK2tNO0K1sxcT2dtZUtxdRmK&#xA;49JEj9ISxuLco4+EFXQEHqAdxmwjwgDudTlyccjI7Wn+Sa3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FUPqX/HOuv8AjDJ/xE4JcmeL6h73ab/xzrX/AIwx/wDERjHkuX6j72N/mrc21r5D1a6muZ7W&#xA;WxhbUrRrSSKKd59LB1FI43miuY/i+qfFyiYca7HCwYvqHkby/oNjq+qp6xtrC8fXddvr1vqzG6tT&#xA;p2oSTRCCxlEsdw2mJJN6OwYuqjl8MSqHttB/LKx0u0kfVL+307R7R7tLK4VLh7ePyhq3rykztBPc&#xA;H6lNM1qESYqYmIjDfbxVANL+V9v5f136x5t1aC1Edx5f8yXc8EUojGnfWpJ7STlYy20Sq2r+nGIV&#xA;EbERRQ1+y6r0Ty9ZrbWenQxtdyScr5p5bu3t7a69eW4LTySR28EFvX1XY+oiBZB8YaTlV1WT4q7F&#xA;WLa7+Z/kbQdft9A1bUja6rcvbRwxGC4dC967pbq0yRtCpkaJ6BnGwJ6Yqklz/wA5Cfk9bXz2Nx5i&#xA;SK7RgjRPbXYPL1PSK1MNCVfZh2oa9DRVZZ/85A/lrfXF/bWV5Pc3NhPbQmFIHBlju57a2iuYS/FW&#xA;h9S9T4qgkAsoZeJKqEf/AJyV/KeC8mtL2/uLOW29FLxpbaVo4LmWR42tZZIhIoliMZL78KfYZqGi&#xA;q6T/AJyW/J2h+ray95wWGWf0rW5VYop5ooRLK8scSIqmdS1Wr7cqAqoq7/5yC/KuDStV1CLVJLpt&#xA;HKpeWMdrcJdeqyyOIVinjhPPjbyFgacApLlRirLfKvnHy55r099Q0C8F7ZxusbyhJI6O8MdwopKq&#xA;NvFOjdO9OtcVTnFXYq7FXYq7FXYqh9S/4511/wAYZP8AiJwS5M8X1D3u03/jnWv/ABhj/wCIjGPJ&#xA;cv1H3rdRtxcRJG9pDeRiSOX05yKLJDIskUgBVxyjkUOD1BAI3wsFC2he0ScWemw24lkedljZI/Uk&#xA;k+N3fitPUdjud6mtT0qqo2ek2dlcRzWWi2lrNDax2EE8QjjZLWIkpbqUTksKGpRBsKj4RvRVQh8u&#xA;6Ol3YXieXLCO7063W1sLlY4BJawqKJDA4j5RxqGpxWgG9B05Koq0sHgNlDb2sdhZ2MZght7fiIki&#xA;UKsaIqhFVAsdOPHYEU3+yqmmKuxVKb/yh5T1HU4tV1DRbC81SDh6F/cWsMtwnpsWThK6l14sarQ7&#xA;HFVO58k+TLu4FzdaDp09yGLiaW0gdwzSmctyZCamZjJX+b4uuKtWvkfyVaSSSWnl/TbeSYq0zxWc&#xA;CF2SVZlLFUFSssauK/tAHqMVW3HkLyNc3E1zceXdMmubli9xNJZW7PIzOJGZ2KEsS6hjXvviqkn5&#xA;cfl4jBk8r6QrDhQrYWwI9Kgj6R/sUHHwxVuP8uvy+jtpbaPyxpKW0xjM0C2NsEcw1EZZQlDw5HjX&#xA;p2xVNNK0TRdIhkh0mwttPhmkM00VrDHArysAGkZYwoLGgqTviqNxV2KuxV2KuxV2KofUv+Oddf8A&#xA;GGT/AIicEuTPF9Q97tN/451r/wAYY/8AiIxjyXL9R96IwsHYqkEf5heQZdNm1SLzLpT6ZbyLDcXy&#xA;31sYI5H+yjyh+Cs3YE4qq6j528maZLFFqWvadZSzRfWIY7m7giZ4QC3qqHdSUoK8htiqHi/Mf8vJ&#xA;Qpi80aRIHiknQrf2x5QwhjLIKSbogRuTdBQ16Yqi7Lzh5Sv4Leex1uwu4LuSSG1lguoZElkhQySp&#xA;GysQzIilmA6Dc4qh4fzB8hT6bcapD5l0qXTLRkjur5L23aCJ5DRFklD8FLdgTviqsfOvk0Semde0&#xA;4SG1OocPrcFfqaqWa5pz/uQqkmT7NO+Kq1z5p8s2tzJa3Or2UF1FatqEsElxEki2aV5XLKzAiFaG&#xA;sn2ffFVC587eTLWF57rXtOghjeWOSWW7gRVe3kSGZSzOADHLKiOP2WZQdyMVbn86eTre7gs59e06&#xA;K8uiotrZ7uBZZCyK6hEL8mqkisKdiD3xVQg/MT8v7hVa38zaTMrRzTKY762YGO3UvO4o/wBmJFLO&#xA;eijc4qg9U/Nj8ttMSU3PmXTmlgnS0ltobqGWZZ5H9NY2jRmZW5A1qNqEmgBxVM7rzp5OtNQutOu9&#xA;e0631CxjM97Zy3cCTQxBBIZJY2cMiBGDcmFKGuKrJfPfkeL6j6vmHTI/0oA2mcry3X6yrNwUwVf9&#xA;4C2w413xVVsvOHlK/m9Gx1uwu5vWe29OC6hkb140aV4qKxPNY42Yr1ABPQYqtk86eTo9LfVpNe05&#xA;NKjdI5NQa7gFuryxrLGplL8AXjkR1Fd1YHoRiq6584+ULW2a6utc0+C2ST0HnluoUjEohFx6ZZmA&#xA;D+gfU49eHxdMVVNP80eWdSvXsNO1eyvb6OGO5ktbe4illWCZVeOVkRmYI6yKytShBBHXFUzxVD6l&#xA;/wAc66/4wyf8ROCXJni+oe92m/8AHOtf+MMf/ERjHkuX6j70RhYOxV45of8Azj/faTHpl1H5igm1&#xA;zRY7a10y6k02tqLa2huoOE9r9Z5Su4v5CX9ZaELQUFCqnnlH8oJPKn1q10zWBLpOo2NtZahDd2xl&#xA;uS9pZm0jkguFmjWJaUZo2icdeJWuKsc1b/nHBtQ8uyeXv8RCPT7qz06G7Y2XOb61pVgLGCaF/rCi&#xA;OJgqu8RVidwHHI4qq2X/ADjrNY6tZ6hbebLo/oi/GpaRHNAszLLIYBci7leT1LkSRWwiQhkZE25M&#xA;Niqya7/K24by/NptnqyQ3jeY28z291NbGWJJTqBv0geFZomdB9gkSKT126YqkGmfkA+mW+tWtrr5&#xA;+ra7os+j3ivBN8M1wbl2uESO6jgKrJesVjkiYqo4q61YlVM/Mn5PXOuWOmh9WtrXVbfTbzRdUv4L&#xA;CgurK/iSCQKhuC8cqRxD03aR1Uk/Ca0CqTS/843aU3mFNWXV2EDXs19eac8HOGZ5tYi1M1Bl+FjB&#xA;bpaud+QVWoKcSqrab/zj9+jRoRtdfkaXSjfreTTQzc7qG9jt7eKOsNzBx+r2tlHEBJ6iNSrJ2xVK&#xA;9J/5xnn0yzuLK18z+nFdabPplzcJZyC5nS4082fC4c3ZilgjlPrRRtFySgRZABXFWRat+Ss93cNc&#xA;2eufVrgavp+rxs0E1B+jtL/RohLW91ay/vP7zksi0+zQjcqofzp+RU/mnV9eu5deW1stZkNzFbLZ&#xA;B5Ybn9FfooM05mHqR+mzP6aohLU+LbFWT3H5fzXg8rNf6kZJvLjXJmkjWcm5F1ZTWZpJcXFzOjKJ&#xA;+XJ5ZG296hVilj+ROoWMmn3tt5hhXVtGt7bT9IuTp37pbK1tru0VbiFblTNM0d+xModBVV+ClQVX&#xA;aR+ROoaJFbQ6T5hhWLTbxL/S1u9Pa44yDTE0qVbgC6iSZWgj5LRUKt3I2xVCSf8AOOMS6VBo1vrU&#xA;TaPayxXttbXdnJK/16PT4tNMzzQ3Vs/H0ofURU4MklG50HHFWW+RPy31Pyx5h1TV7rX5NY/SttZR&#xA;XAnjmSYz2dpDamd2Fw0DmT0CxPoc/ipzIG6rOsVQ+pf8c66/4wyf8ROCXJni+oe92m/8c61/4wx/&#xA;8RGMeS5fqPvRGFg7FXYq7FXYq7FXYq7FXYq8p8wf844+UNbmvpJdX1i0/SF1cXtzHZz28KtLcXP1&#xA;urAW55GOQkI71cLRSxVUCqo3/lSoha9ls/OXmRbq+S2tzPdag9w8NvBdQ3Eq27kJLG8yQtGWLkDm&#xA;x4npirIvJ3kQeWEI/wAQ61rjH1avrN59bNJBCAKcI1/d+h8O1fjeta7KsnxV2KuxV2KuxV2KuxV2&#xA;KofUv+Oddf8AGGT/AIicEuTPF9Q97tN/451r/wAYY/8AiIxjyXL9R96IwsHYq7FXYq7FXYq7FWF+&#xA;c/zD1LyzqZt4/Kuq65afVo5kn0qCS5dppZJE9IKEEQEYjDSM0oYB14ow5FVWPa/+eWrWMWoJpn5c&#xA;eatQvLOVYbdHsHignPqMrus0f1g+mFTkrcDyqBQVriqJ1P8AOu5sTZuvkDzZdwX1ql1GbbTGeSJj&#xA;PLDJDcxlh6UirCsijkeSuPs4qut/zsa4u0tU8hecI2e5itvWm0kxxASOVMxf1DSNAKk/LFUDL+fV&#xA;+umLMv5b+cG1J7cyJanS5PRE4VqRNMCzqpdac/SrQhuPbFU3v/zg+pyon+CfNdwjW1tdPNBpfNU+&#xA;tRrIISPVDmWLnxlVVPFgR2xVmWjav+lLX6x9SurHaI+lexejJ+9gjn+zU/Y9X038HVl7Yqj8Vdir&#xA;sVdirsVdiqH1L/jnXX/GGT/iJwS5M8X1D3u03/jnWv8Axhj/AOIjGPJcv1H3ojCwdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdiqH1L/AI511/xhk/4icEuTPF9Q97tN/wCOda/8YY/+&#xA;IjGPJcv1H3ojCwdirsVdirsVdirsVdirya1/Kb80rOFoLX80Lxbeay+qXCTWX1pzMI3QXMU1zdSz&#xA;ROWcSMFf7X2eK8FRVZpX5afnjDcHULn80yt1eR27ahZfoq3ubZJoolSQW5keJUUsDukScurLXFUf&#xA;qHkj87hDcy2H5lRvcehMLS2m0azjiM5LGIvKvqsqiqqSEbpWh6YqhLz8rfzfuFukT81Z4VuY54qp&#xA;pUQZPrDqWZGW4XgyogVClClSU4k4qn/kPyR588vyu2ved5vMsRMCpHPZpAVihjuFZOQklq0kk8bl&#xA;/tfuwpJB2VZzirsVdirsVdirsVdiqH1L/jnXX/GGT/iJwS5M8X1D3u03/jnWv/GGP/iIxjyXL9R9&#xA;668vrKyhM95cR20AIBlmdY0qeg5MQMLBAf4s8q/9Xmx/6SYf+asVd/izyr/1ebH/AKSYf+asVd/i&#xA;zyr/ANXmx/6SYf8AmrFXf4s8q/8AV5sf+kmH/mrFXf4s8q/9Xmx/6SYf+asVd/izyr/1ebH/AKSY&#xA;f+asVd/izyr/ANXmx/6SYf8AmrFXf4s8q/8AV5sf+kmH/mrFXf4s8q/9Xmx/6SYf+asVd/izyr/1&#xA;ebH/AKSYf+asVd/izyr/ANXmx/6SYf8AmrFXf4s8q/8AV5sf+kmH/mrFXf4s8q/9Xmx/6SYf+asV&#xA;d/izyr/1ebH/AKSYf+asVd/izyr/ANXmx/6SYf8AmrFXf4s8q/8AV5sf+kmH/mrFXf4s8q/9Xmx/&#xA;6SYf+asVd/izyr/1ebH/AKSYf+asVRdjqul6gHNheQXYjoJDBIkgUnpXgTStMVXal/xzrr/jDJ/x&#xA;E4JcmeL6h73ab/xzrX/jDH/xEYx5Ll+o+9EYWDsVdirsVdirsVdirxi71r/nKj9ELKugaF+kQ9rL&#xA;9XtpNij+s08TtPccQ0fpxI3E786o+xoq7/E//OUfLUDJ5Q0jhCiyaekNxGHmYXUStEzvdlV5W/qt&#xA;yKgA077FVAad5h/5y4XQFiufK+jvqis6G5lnh5siQFkdo4boQ8nlotQQB3SnxBVOtY8yf85JxzXo&#xA;0jyppU8KSOLB7mVI3kiDIA0iLesFYjlRQ2/crxAkVQF/5n/5ypS5vYtP8oaNLbxXLR2dxPOgMsDS&#xA;SlZSiXq8QsYjBU/FXffsqib/AM4f85HW8dskXlDTZLq6ks40UOXRa2Uk18ZGS5KRhLhBHGXcA1A+&#xA;IkHFWU/l3rP5s3tgsnnrQLTTbyS7aAw2UqFYrZLf1BcsRPc8/Un/AHQjFGX7RqMVZzirsVdirsVd&#xA;irsVQ+pf8c66/wCMMn/ETglyZ4vqHvdpv/HOtf8AjDH/AMRGMeS5fqPvRGFg7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUPqX/ABzrr/jDJ/xE4JcmeL6h73ab/wAc61/4wx/8RGMe&#xA;S5fqPvRGFg7FXYq7FXYq7FXYq7FXYqlHmfzXonliwivtYllitp547WJooJ7gmaY8YkKwJIV5t8IL&#xA;UFSBWpGKvKbX8zPyi81eb9B1e0826to+r6wtgtvo8cclvFdrZT3XpQ3L/V5FZDLdTRyAThGI8Vri&#xA;r2qCeC4gjuLeRZoJlWSKWNgyOjCqsrCoIINQRiq/FXYq7FXYq7FXYq7FXYqh9S/4511/xhk/4icE&#xA;uTPF9Q97tN/451r/AMYY/wDiIxjyXL9R96IwsHYq7FXYq7FXYq7FXYq7FVC8sLG+iWG9t4rqJXSV&#xA;Y5kWRRJEweNwGBHJHUMp7HfFUptPIXkazmintPLumW88BVoZYrO3R0ZAyqVZUBUqHYCnifHFU5t7&#xA;e3treK2tokht4UWOGGNQiIiCiqqigAAFABiqpirsVdirsVdirsVdirsVQ+pf8c66/wCMMn/ETgly&#xA;Z4vqHvdpv/HOtf8AjDH/AMRGMeS5fqPvRGFg7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FUPqX/ABzrr/jDJ/xE4JcmeL6h73ab/wAc61/4wx/8RGMeS5fqPvXXiXrwkWcscM9RR5o2&#xA;mSnf4VeI/wDDYWCA+reav+rjY/8ASDN/2V4q76t5q/6uNj/0gzf9leKu+reav+rjY/8ASDN/2V4q&#xA;76t5q/6uNj/0gzf9leKu+reav+rjY/8ASDN/2V4q76t5q/6uNj/0gzf9leKu+reav+rjY/8ASDN/&#xA;2V4qlfmbWdb8u6LPq9/fW8lvC0UYhttMuJ55JbiVYIYookuizvJLIqqB3OKpdH+YWjyX0djF518v&#xA;y3MsM9yixx819K1RZJmZ1vSi8I5A9GNeNWHwqxCqjbfmd5cuLO3vI/PXl1be6VXiMiekwDResBIk&#xA;l6rxn0/iKuAR3xVXh/MHSJ9Si02Dzp5fnvZoJbqOKKMyD0YESWRiy3pVaRyCShNSlWFVViFWSfVv&#xA;NX/Vxsf+kGb/ALK8Vd9W81f9XGx/6QZv+yvFXfVvNX/Vxsf+kGb/ALK8Vd9W81f9XGx/6QZv+yvF&#xA;XfVvNX/Vxsf+kGb/ALK8Vd9W81f9XGx/6QZv+yvFXfVvNX/Vxsf+kGb/ALK8VRdjHqiB/r9xBOTT&#xA;0zBC8AA715yz1/DFV2pf8c66/wCMMn/ETglyZ4vqHvdpv/HOtf8AjDH/AMRGMeS5fqPvRGFg7FXY&#xA;q7FXYq7FXYq7FUNqWmabqdm9lqVpDfWUhUyW1zGs0TGNg6FkcMp4uoYbbEVxVJ4vy6/L6Fg0XljS&#xA;Y2EckIZLG2UiOaL0JU2T7Lxfu2HQrsdsVU/+VY/ltw4f4T0bh/L+j7Wn2eHT0/5Ph+W2Kq8fkDyJ&#xA;HeLex+XNLS9SEWyXK2VuJRAIfqwiDhOXD0P3XGtOHw9NsVT7FXYq7FXYq7FXYq7FXYqh9S/4511/&#xA;xhk/4icEuTPF9Q97tN/451r/AMYY/wDiIxjyXL9R96IwsHYq7FXYq7FXYq7FXYqwrzpr35n6Xqif&#xA;4Y8sw+YdM4QPIhuobOUkm4S5jEs0oCsCbV4/3RUqJQSGKYqkMHnL8+/0I9zP+X1v+lUlskWxTUrX&#xA;i8bPOb2QOZuK0jiiWME1DScvjClcVRWv+dfznt3Mei/lwt5QWbieTV7JVYSJHLdxcCUYNGxkhV6k&#xA;cgHoy/DiqnP54/O0y2/ofloqxC7KXQfWbJma14MBJGQV4NzKtQhtgVpUhlVZ5oN9rF7YrNq2mfom&#xA;6KxFrT10uaM8Eckq84wF/dzO8X+Vw5DZhiqY4q7FXYq7FXYq7FXYqh9S/wCOddf8YZP+InBLkzxf&#xA;UPe7Tf8AjnWv/GGP/iIxjyXL9R96IwsHYq7FXYq7FXYq7FXYql9j5h0DULyeysNTtLu8tXkjuraC&#xA;eOSWJ4WCyLIiMWUozAMCNiRXFUeroxYKwJQ0cA1oaA0P0EHFUE2vaGkcsr6hbLFBC9zNKZUCJBEx&#xA;WSVmJoERlIZui98VU5PM3lyPU5NKk1WzTVIUSWawa4iFwkcjrGjtEW5hWeRFUkblgO4xVMsVdirs&#xA;VdirsVdirsVdiqH1L/jnXX/GGT/iJwS5M8X1D3u03/jnWv8Axhj/AOIjGPJcv1H3ojCwdirsVdir&#xA;sVdirsVdirAdc/Ib8qNduzd6tof1u5MtxMJHu7wcXvJWnm4hZgFVpZHkCr8KszMoBJxVAz/842fk&#xA;tPX1fLpavp1/02/H9zH6aHafqE2r1PU74qmF1+R/5b3tibG/06S7tvhoklzcLx4xRW44mKSMj9za&#xA;wpt19NSfiqSq3rP5G/ldrMumTaloxmk0eyg0zTmF3eRmO0tSTDF+7mXnx5H4nqx7k4qnHlP8vPJ/&#xA;lKMR+X7A2aL6lAZp5v75IEk3mkk6rZxD/Y+5qqyPFXYq7FXYq7FXYq7FUPqX/HOuv+MMn/ETglyZ&#xA;4vqHvdpv/HOtf+MMf/ERjHkuX6j70RhYOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxVD6l/xzrr/jDJ/wAROCXJni+oe92m/wDHOtf+MMf/ABEYx5Ll+o+9EYWDsVdirsVdirsVdirs&#xA;Vdirxy3/AOhq9MtrKyb/AAzrkvE/WdUl9dX5NcKv7xY/qKUSKbmPTi+zE37ZQOqnFwv/ADkj65Nu&#xA;3k8RBGCq/wCk/tmX4Wag7RDsR8XtiqeeUf8Albnqf87gNAEfOP8A45H13lw4T+r/AL0ftep9X4+3&#xA;qV344qy/FXYq7FXYq7FXYq7FXYqh9S/4511/xhk/4icEuTPF9Q97tN/451r/AMYY/wDiIxjyXL9R&#xA;96IwsHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqh9S/wCOddf8YZP+InBLkzxf&#xA;UPe7Tf8AjnWv/GGP/iIxjyXL9R96IwsHYq7FXYq7FXYq7FWMec/Olz5an05YtB1LWoLwXT3T6Zby&#xA;XDwJbW7SqCqKwLzScYo1ZlqTWvwnFWM2/wCd8k6Bm8jeaLNqzEi909oAVgXmEjIZ+c0w+GGP9t/h&#xA;5D7WKrpvzqntbi5tbjyL5puZLWv+l6fprXNpOvMKj20peNnDqwfdQQK13GKrn/Oa5j+qTP5D81G0&#xA;vYI5Yimms9xFI1xcwSRXMPICLiLZJAQ7VWRSQu1VULa/ndqlx5fk1iPyJr83G4sbdbOC1d5mF0jS&#xA;zyKOI5JBGlQ9ArMyKSlSVVdP+flnb3lzBJ5N8yvDbi35XcNkjRI9zaw3It53eWNYrlGn9Joqn46A&#xA;ElgMVemWV19ahaX0ZYOMssXCZeDH0ZWi5gVPwPw5Ie6kHFVfFXYq7FXYq7FXYqh9S/4511/xhk/4&#xA;icEuTPF9Q97tN/451r/xhj/4iMY8ly/UfeiMLB2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KofUv+Oddf8AGGT/AIicEuTPF9Q97tN/451r/wAYY/8AiIxjyXL9R96IwsHYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqh9S/4511/xhk/4icEuTPF9Q96G07UdPGn2oN1C&#xA;CIY6j1F/lHvkYyFM8mOXEdjzRP6S07/lqh/5GL/XJcQYeFLuLv0lp3/LVD/yMX+uPEF8KXcXfpLT&#xA;v+WqH/kYv9ceIL4Uu4u/SWnf8tUP/Ixf648QXwpdxd+ktO/5aof+Ri/1x4gvhS7i79Jad/y1Q/8A&#xA;Ixf648QXwpdxd+ktO/5aof8AkYv9ceIL4Uu4u/SWnf8ALVD/AMjF/rjxBfCl3F36S07/AJaof+Ri&#xA;/wBceIL4Uu4u/SWnf8tUP/Ixf648QXwpdxd+ktO/5aof+Ri/1x4gvhS7i79Jad/y1Q/8jF/rjxBf&#xA;Cl3F36S07/lqh/5GL/XHiC+FLuLv0lp3/LVD/wAjF/rjxBfCl3F36S07/lqh/wCRi/1x4gvhS7i7&#xA;9Jad/wAtUP8AyMX+uPEF8KXcXfpLTv8Alqh/5GL/AFx4gvhS7i79Jad/y1Q/8jF/rjxBfCl3F36S&#xA;07/lqh/5GL/XHiC+FLuLv0lp3/LVD/yMX+uPEF8KXcUPqOo6edPugLqIkxOAA6/yn3yMpCmePHLi&#xA;Gx5v/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft Word - CouvThèse-vierge.doc</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Hélène</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [8.3900146484375 0 603.60998535156 792]]
[/BleedBox [8.3900146484375 0 603.60998535156 792]]
[/ArtBox [34.89 .5 576.89 789.5 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_CoolType_Core/ps get exec
true set_gvm
%ADOBeginSubsetFont: RRNBAA+CronosPro-Bold-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (RRNBAA+CronosPro-Bold)
%%Title: (RRNBAA+CronosPro-Bold Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /RRNBAA+CronosPro-Bold def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-187 -295 1137 885} def
/FontInfo 5 dict dup begin
/Notice (Copyright 1996, 2001 , 2002Adobe Systems Incorporated. All Rights Reserved. Cronos is a trademark of Adobe Systems Incorporated.) def
/FSType 12 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 703 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 15 dict dup begin
/BlueValues [-17 -0 625 642 438 458 590 607 678 688 468 488] def
/OtherBlues [272 279 -213 -201 -41 -30] def
/FamilyBlues [-17 -0 624 641 436 456 590 607 678 688 465 485] def
/FamilyOtherBlues [272 279 -217 -205 -41 -30] def
/BlueScale 0.0479583 def
/BlueShift 8.1 def
/StdHW [96] def
/StdVW [139] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1F
C7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6
C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B1719
2> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /RRNBAA+CronosPro-Bold-Identity-H /Identity-H 0 [/RRNBAA+CronosPro-Bold] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/VQWDIY+CronosPro-Bold /RRNBAA+CronosPro-Bold-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: XWBAAA+CronosPro-Italic-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (XWBAAA+CronosPro-Italic)
%%Title: (XWBAAA+CronosPro-Italic Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /XWBAAA+CronosPro-Italic def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-191 -281 1129 880} def
/FontInfo 5 dict dup begin
/Notice (Copyright 1996, 2001 , 2002Adobe Systems Incorporated. All Rights Reserved. Cronos is a trademark of Adobe Systems Incorporated.) def
/FSType 12 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 2 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 14 dict dup begin
/BlueValues [-17 -0 625 642 436 456 590 607 680 690 465 485] def
/OtherBlues [272 279 -221 -208 -42 -28] def
/FamilyBlues [-17 -0 624 641 436 456 590 607 678 688 465 485] def
/FamilyOtherBlues [272 279 -217 -205 -41 -30] def
/BlueScale 0.0479583 def
/BlueShift 8.1 def
/StdHW [58] def
/StdVW [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1F
C7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6
C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B1719
2> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /XWBAAA+CronosPro-Italic-Identity-H /Identity-H 0 [/XWBAAA+CronosPro-Italic] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/VQWDIZ+CronosPro-Italic /XWBAAA+CronosPro-Italic-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: FPNAAA+CronosPro-Bold Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /FPNAAA+CronosPro-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1996, 2001 , 2002Adobe Systems Incorporated. All Rights Reserved. Cronos is a trademark of Adobe Systems Incorporated.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 12 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 45841 def
/FontBBox {-187 -295 1137 885} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 625 642 438 458 590 607 678 688 468 488] def
/OtherBlues [272 279 -213 -201 -41 -30] def
/FamilyBlues [-17 -0 624 641 436 456 590 607 678 688 465 485] def
/FamilyOtherBlues [272 279 -217 -205 -41 -30] def
/BlueScale 0.0479583 def
/BlueShift 8.1 def
/StdHW [96] def
/StdVW [139] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/VQWDJA+CronosPro-Bold /FPNAAA+CronosPro-Bold findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: VYRAAA+CronosPro-Bold Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /VYRAAA+CronosPro-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1996, 2001 , 2002Adobe Systems Incorporated. All Rights Reserved. Cronos is a trademark of Adobe Systems Incorporated.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 12 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 45841 def
/FontBBox {-187 -295 1137 885} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 625 642 438 458 590 607 678 688 468 488] def
/OtherBlues [272 279 -213 -201 -41 -30] def
/FamilyBlues [-17 -0 624 641 436 456 590 607 678 688 465 485] def
/FamilyOtherBlues [272 279 -217 -205 -41 -30] def
/BlueScale 0.0479583 def
/BlueShift 8.1 def
/StdHW [96] def
/StdVW [139] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/VQWDJB+CronosPro-Bold /VYRAAA+CronosPro-Bold findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: JRNAAA+CronosPro-Bold Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /JRNAAA+CronosPro-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1996, 2001 , 2002Adobe Systems Incorporated. All Rights Reserved. Cronos is a trademark of Adobe Systems Incorporated.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 12 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 45841 def
/FontBBox {-187 -295 1137 885} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 625 642 438 458 590 607 678 688 468 488] def
/OtherBlues [272 279 -213 -201 -41 -30] def
/FamilyBlues [-17 -0 624 641 436 456 590 607 678 688 465 485] def
/FamilyOtherBlues [272 279 -217 -205 -41 -30] def
/BlueScale 0.0479583 def
/BlueShift 8.1 def
/StdHW [96] def
/StdVW [139] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/VQWDJC+CronosPro-Bold /JRNAAA+CronosPro-Bold findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: MGCBAA+CronosPro-Bold Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /MGCBAA+CronosPro-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1996, 2001 , 2002Adobe Systems Incorporated. All Rights Reserved. Cronos is a trademark of Adobe Systems Incorporated.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 12 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 45841 def
/FontBBox {-187 -295 1137 885} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 625 642 438 458 590 607 678 688 468 488] def
/OtherBlues [272 279 -213 -201 -41 -30] def
/FamilyBlues [-17 -0 624 641 436 456 590 607 678 688 465 485] def
/FamilyOtherBlues [272 279 -217 -205 -41 -30] def
/BlueScale 0.0479583 def
/BlueShift 8.1 def
/StdHW [96] def
/StdVW [139] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/VQWDJD+CronosPro-Bold /MGCBAA+CronosPro-Bold findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MyriadPro-Regular def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/VQWDJE+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Bold Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MyriadPro-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-163 -250 1256 989} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 489 500 650 661 711 721 242 248] def
/OtherBlues [438 443 260 266 -209 -198 -153 -147 -127 -120] def
/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [112] def
/StdVW [152] def
/StemSnapV [152 161] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/VQWDJF+MyriadPro-Bold /MyriadPro-Bold findfont ct_VMDictPut
Adobe_CoolType_Core/pt get exec
%%EndPageSetup
1 -1 scale 0 currentpagedevice/PageSize get 1  get neg translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
8.39001 -25 mo
8.39001 817 li
603.61 817 li
603.61 -25 li
cp
clp
[1 0 0 1 8.39001 -25 ]ct
set_def_flat
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: RRNBAA+CronosPro-Bold-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/RRNBAA+CronosPro-Bold 39 GetGlyphDirectory
38 <001C60D8A8C9B7594606578507C0518A4ADA8C64CD55AB13042E31A41B47
1E53B0813C5C547256354E27B375DF410FA4889AA80F2615711D356915427D04
99B7B2315CFE332AE7611C386DD12680D556773E72FC95D197EC361D65FD5770
940794420E6E5CA06D967C2282003CB7408952B1529F090C298BC019588AA166
CF> |
79 <001C60D8A8C9B79C5F8CB5531F09E2883CD7193F36597CA81B5C22AE6AF4
AA2EF7DA85199DC3F8A0475C8FF58DB585B4389319A6DFE493FE08A6C43F1B2A
F108C38289BF5F844F94A4F9E35323821129139714612A5F7AD67FF8ACBD98D7
BFC1401E44747DA5B36B1689AEEA37B537559F8976B39EAB2D058B9C10B85A4F
93BA14> |
1 <001C60D8A8C9B89A42B5> |
87 <001C60D8A8C9B771A89701C94AB61509CE2A59E165BC82D4C2BC21CBDCBD
495329309FDE48D6743A5C7A6E3FAAB30CF9C0F55858EF07E7E4501D83932FAA
668DB2B981EE4549C3C901DD3941253C55DAC7816E53D51098BC5F0D2F6F5956
69C685227CC86944AA20C8F23570E1> |
86 <001C60D8A8C9B780B37A33A877D2F9590BBFA03D07A8EB075EB05170C291
490A8813DC6B753B5054996EA323A15229D19581579A447C853F387326254186
5ACE1845787882BF2A2579481BE10951F93FB6073E762773020AA065C0AB8B00
90E6AA4A3098365C3897321691A29FA806D0F552401F14F01A55CA1356CBF5F4
58E541E40488FF4242F3EA6264A153B2A54E2B8A064076CEE8224BB3B8DD5A68
AC66DE0B74FFE1F537D4E05A5E9DA406B1> |
70 <001C60D8A8C9B7791400A5D35C3C94736791D0797366D07908FA173389EE
FE260692C1420562CDD5E8376F49424B90AF4213129B0A5A4985C67B771942C2
4A5046CBCF3F6B4ECA5DB5D8AE020F3A9B8D7797A3C24A53F74D73A1CCD8B65D
B8612D5CC3E7CC7E3DB26D2E6F2928BD16595C43592D65425015C821D0E28A07
9BD6FD48A23B687E9920> |
69 <001C60D8A8C9B782565A286F3F22FC852664AB02B9833466B61708A4DE63
A6ADDBB96B3EF97C3E034D135E035C039FDCAF3A558CC78304E9343CE074E492
8074440530DF78B1F5762F79296270D08FC9C7DC89F96114D0120FAED9898C57
23963B4A57238A9E1B2893CBD8E920C01B7AE1DB135B60DB4C43632B6D46C018
17EFAC3F35F359CAB29DD0BF799F6B101286B17F4214B6439880FEABBE9644D1
9BDA> |
77 <001C60D8A8C9B869C10DA8F3F6940AAE852EE294A2BAA8938E93FAFC5002
9D651523B2FD52F8EB157BECB94FCDD0DAE42642C21F33190ECFB800D109998E
69BFD782> |
8 <001C60D8A8C9B8812AB466F8B4388704AC80DC02AD82C00B529D23D3EE4F7
675E2CA825F554AAA5F7883582E47142677B2BB72D0E1DD6EAB48D952AFBD90A
9DD> |
80 <001C60D8A8C9B7BA8F9D570CB014B50E606B40D7DF9DB2B3C839EC13B395
4DA4D0157D20D0B46622A2AE645E94A19DF453A71A295B7571978DD75196F705
3FECFBEA7139438E5B16E54817CF35BBBF196496FD24D6> |
67 <001C60D8A8C9B78D342215BBFB344FA23A9217A167BF41707F7A9FCD9C26
ACBA57BE7E22A0E7D58BC8D0D2CA07FCFA427F27F03F647E0E4D224E5C352FB2
938B076C5359794DA7CBB40B93B54E76DDA52EE03C72DDC4238897AAB94B5338
52EA3AB38E644294DDFF74270E1955724AE1131C131F75E4F3ED10> |
85 <001C60D8A8C9B804561DAB83C9EEB467BCF7B8B4D420D4A9199E3AB30E93
A2CCBE3DED2CF726B2C2A1D416F3DFC0E99DCD54C1264050C374AD858253B9D7
E67D6EB259C18D1CCF93E410AF991FB0B0D9D6862F3D3F349C933EBB5BCC0E8A
F1523046CBFF558FF89BF89BE9019BF9DAB107E6855796E709E79B> |
74 <001C60D8A8C9B869C10F0C5D8543E3389149FDA8BFA7580B8AB36AA5F057
BC3D859B33CF43C39EBA5EDF84132F85DB0E04701336439E808811E9661C462A
2F6322A6703F5B27FFA72D7D739E6405814C3664EDBB2ABBDF2894AB74477A2F
BCCE1806A8BD4C241318C4E7254E212195A2236F80F7DEEC> |
37 <001C60D8A8C9B6513037747DEB6439A6ED1C4FBA788D64E2FEAF8DE3D97F
7E1CA4C749FEE0C3797BCCB7F29C8D120CD85B585D17280334770D77F97D86E0
7CCB33E52EDC24A79DD5CE194A002819F76DCA996D17295E6345CEB4FE191BC4
294BB01126A88C> |
48 <001C60D8A8C9B63FB7CAAB959CB4DE438F0423F37FB797DFAD68D9520E78
D3CE9887CE5F3B78B4E5CE9D31836FC410799EC814866AD0C60B28733FCB755B
AA3E2DB85E345BB3630660E90DDB102D1198F1BFA3A0A74711B9FFA58B78F328
791AF7> |
36 <001C60D8A8C9B7C8C1D9950B262D6355CEA43AA058E6DDE8E2A77759214F
313B90C3CFC1BB33BBACD7E99263149DB49BCBAC9AD3CBF1D9527B7FE4242741
CB7BF6262960F19E7B306755E71F31DB2848826CD3AEE7A0EE9DC7F21929A7F2
BE8B4456F59DB1> |
53 <001C60D8A8C9B7E6F03EA9B622C28BA766DC1D364FFC1EB2920DBC5D9C0D
E1BE8284A4087DD68D325053CC95ABEEEC0FD5D4A6ADA653A81180DE7499C1C7
D6D1B8B12363E503CAF0387D775A451B21E1721BE565B2F4> |
51 <001C60D8A8C9B7EDAFED06E4A00C2EC311C3216D242A64BA2B97D8CE5419
0C4089002B83A40D7DEB70FA4482B8903DDC8E7378F3A9BDE39823CCD205A19E
7FF5BCE23E18E3D45A92AFE68FF01A00B75BA25B5761DDDF470628BD2AE3E467
55AE745FECEEA1E802075AFBB36BDDA71AE83B15CFFBBBD7503E663BE31088B3
D1F53304078370A7B73AD89A4EF97D261E13CBC1D2B8D16889A04EA1BD455E94
4CF2604890FF3471EC7625829E954CA414DB95F9CC5723589A0D55F662572E0E
3C5721B45E100FFB19C4317579BAF2CC1653585ACC53315B049E71754C4CAC85
F69F643E> |
34 <001C60D8A8C9B675485D487C27F10EDB5D7E1818B11A88051961E87441BB
A0BFA630721F526F238EC3AC8731A2F44E333A5170B95DE71065DA614F13741A
C1AC1205B0DA72ED4D10522A0F7A313966CA83E53C5087CD108B71CE13ED1A67
5ACB475AC8721B7D7B69D9AA8293ACA3920DD2DB9BCA85136E266EAE2230D042
2D77DA5E866130FB686C58280F7E9F> |
45 <001C60D8A8C9B775D2CEF16C8265DD4A36CA9A9C6EC031B1B55B36A7E2A8
2202823C9C6906040CC82EACE255F4BB18DAA589ABA06824E07FF15A5C715A50
E458B880A00273E5C88AEDC67891C17FFBAB2EDCC8DD13D9ED60> |
54 <001C60D8A8C9B64EDF7F8C4632CF11EA27735C5098953158208A05F06C7B
09CB02A910E7A01D634EB420C8494C4163F5B627D72B2B55407EDA5E32130AA0
B544DF88603F3BD35C7304D4D0D4ADBD74757D4EAC97B6A59F77F2E047DD9A89
19C0DEBE17449EF1D59B9F43241410F332D5DC84121F3EA60AB54CA67A4CB32E> |
47 <001C60D8A8C9B64FADD7F16E3526700CF3CDA9E584F84AB82FD4EE18A84E
4CB7ABE665AD6DFA8C4EB020F6C15C6DB65FE3ABB827966AE4020D90E8C38AFA
C932A3238368009054F55B4ADE5BE6876D4827CC2F9A7903DD0012DF95B03379
B9F81CA93D37631D7AA78E21AEFC9521001F0EDE9045EE94B36694FA093EF1F4
B0F264EF90E428F90201ECDB8AB309CB55BD5DA87360EADFD6444B5C0EA4042B
A44B7AE781BD05CA6E0E5C42FB4119BB63A5A758D55C703936AF1C9F1DFCF5BC
AAB1F96A653D0A0171DC3EAD96758BC12CE0F884F71C0D> |
42 <001C60D8A8C9B8517F7902AADEA2EB95F877D1309AA4FDDF660E3E0725F3
77655B70CAB92DD1E85AA38271DB743CCFAB5D102AA1DCE43504CD833DE3DB47
8331D8A3> |
55 <001C60D8A8C9B665536B1649321BEDB76ACBAFAAB24CB71A22345B6DBBB0
A878E2BA2B0E8F230D1BEBFF9E0A53CE5300666538A1ED976A6A6A6C584FA641
C473A76FE3A931929B45EA14369B8CA2DE12BB8CF58FFDEFEB210FC18CE798CD
29D5EE8413555763F45FF9E9A4E6EFE99C252044B3A9D0E537B8E9CF894A02AA
F7DD7A020DB0D889> |
52 <001C60D8A8C9B74F36E932D99355AD3FCD58C5F5DA46055C8669D304A4B0
B40D6EC30E8B84666E335B2A3C7625EDAD0D1860C7C1B3835979651447B3A50A
6D8635888A28182A45249480432ADA98D5C4CDDD7E324BF94BA3DEE6E0A05DCD
0470CEF846DAF0155F8F622F63D9BB7AF39EB9C423F12BE703DAD856C3D4003F
BC43055EA41EFE5E56> |
178 <001C60D8A8C9B7594606578507C0518A4ADA8C64CD55AB13042E31A41B4
71E53B0813C5C547256354E27B375DF410FA4889AA80F2615711D356915427D0
499B7B2315CFE332AE7611C386DD12680D556773E72FC95D197EC361D65FD577
0940794420E6E5CA06D967C2282003CB7408952B1529F090C298BC019588AA16
636765E59923B94B0F5BD891DACE50FB938B4D920A0D252093E1FF230CF8FB62
2C7724C061C6FC65048B3558D49FDA4E419> |
207 <001C60D8A8C9B7791400A5D35C3C94736791D0792D5BC127DE6F4CE2776
6B2AF89B016EBBE33AF4326CD70573041F903CFAC5584AFDA205425BBAF230CC
3529E3D6284160A7D36F60A6402E251E300964B0957112C6B16DF2FD2894CE6F
935FCBAA97153E56D57DB690DD0963EA9FC128646C6BCA2A6B7C3F1EF592113B
89F874C0BBF25B983501181733BCCB9F88BF4CEF05A8B2C92919EFE75BB47CB0
C60DFF9D98EF128AA3696DEB802BBDB18EF408240C4DF2520BFCFDAFF9A> |
83 <001C60D8A8C9B7255096F8C0F7451F935A7317596A29D4A94F26C95F68D0
1C677C3A9FAA5781E4D3039AA7DB7F0F98F1E308DCA74F5C37E02503F4E3E483
C858004FE2C76AB3FD333F208B83F42B09C8BBE3568564681EE31B82D3704D02
EF92B110296092023BC77FDE34E1488F09DE9BB8168F1CE567ECC88BD1F4CA77
C8CBF88FE25BC50DEF1E0FA7512DCB1EB8E3E9F35827FC40CC235C4B8E0C224E
501A37AD4F4682137C> |
81 <001C60D8A8C9B79FB0CEC0C5AA3212C391D5EC01061467EF62EC893A0B2C
EAB99BF8CCCEBEDB6E4DDE59F1D60C4F2141C09FA3088E35331DF47FAC3B336F
5FD85D31D9BFEFD215A3F3FD4E2025DE2C0341A8F9639C39D9FA6C6516A9B57A
A7BD96A15219A97633157CB509E9B3430123614A348138C8DDE9599152D345F6
F5BE12321A4F054F3F0702D7B438033C062AF31FBF55312F3E56BA3513BBAB93
E4646CE286E6B44733B89181BF56B7E9AC9F24990BE0153488> |
66 <001C60D8A8C9B74A3E7B588CCDDA5A3A5C2BBAC6E82334CF58B4B63A22FB
B7CFD38917CB96FA61DF97F214D05D4851E9529C19BEA3A5C9393AF83EC8F1E6
BD8B837A7D058A289AA2131DBE5D6B8B3749F1D452471B2AA2B40BFF883AD5F7
E4D8968C5A426D88403013C7D1ACB668B605FA14DE3948FD72FAAE1D9E777A17
A776114C6F72EEFFAE6A0C43AEDE96D71E4C143FBD4E1E8AD5A8FC9A4439374E
CDF840FAD0B93EC9199CCC5B22CFE038EF6D1CEC513BC53E68A0A3763B2C4DD4
9DA0> |
27 <001C60D8A8C9B888C1C8F6321293740C403458FB03BF08A73A3868A49C43
DCAC700DC7EF789FE9F752572F9A7A9E0A2866CEB96162BA5A96DAB9306D4636
93C01D92B3F37971CE5F7A> |
49 <001C60D8A8C9B7876E196FA7DC93B5CB750439A21FEC07E75C47B80F9FA4
5B9794F6E821E9CFBB729C717199C0277C3A04F1D3C3B804ACD7114C6736115D
9FC89A261138DAA328380D966D3F47C35FE4D9693D5AE0F8B0E07C23A082A879
EE9C98620AEE7E7D512DB7101DDAE81E4ACE647F886F917BD8F79E3836D160> |
84 <001C60D8A8C9B72A68EA13F09642A21B79FC429991AE7A74E7EE1E66848D
6712186D6B4272A98FB73345FFF485B64DA71138DB63CBDEC50FDF9964EA70AD
A346BD348D2AAB0A885B7A3418FAABB54C382A0A8FC116674730F4F8F0B333CE
A8E913C03BB71D93D32FA813AE1E71116669FBDB4D8842418874B337F1D101D4
B43400BE924885062BF39008C199D8A71B> |
68 <001C60D8A8C9B76E3769704022E098C226557303DD38720490F50158CA35
EFEADCA4093FDF3DCCF137F6362DE8853D2526E77EFF53D39A3C263DBC5F474C
28C2A1E99DE5331219B3C947F31A644042C7A1DC58DDDCDA7BC28969C3CC3646> |
73 <001C60D8A8C9B7825685F30FF535B7695B4CA59658C146518B12ED47CE25
8D1C1C555012472B7BEF386869AD4D4AC731947F627C911311C36B37A8AC8993
9ADBBD4C287B03634562A105513435A07256AA86BC291927E4337745D96E4FF9
DCA592144AAF56FAB8E7BFCD36BB3F69CC0863EEB4BEC7A8B1BF1AB542138279
C39C3F8FAC3B7E58C3364F3DA3FA749921D9D629EEF5AF783888A6C0324C99AF
5E7DE21A0D7203786FBAEC1D0A55032B37EF53407CF4A52E0AE1D1851EAB445C
37F72B999FC7DA421E40E8F6> |
9 <001C60D8A8C9B8096E3B6D334F2437E25B704BD8AB3B9559E916B74A3C04D
6B01C6B8754ADD4BF91F45AF2AD0F9E42400E3AFEAF5A947E24366CE0EA26A5F
D40C8461493BFBDE45F1DDB191F> |
10 <001C60D8A8C9B8096E3983269630E6A1548787821FF5408ABB5328EDE890
7342132176EFC3FA1361CF6707AF926F97E95E23A5A430CB92FC2300D634731D
C0F279CCE9FD0287676A9D448C5662> |
702 <001C60D8A8C9B507FA1944123269DD87093A78930087113F3C18B0C0527
A109A0AAB65196DDC984966EE41577529E011E844154E8E4E3198916D04FF546
D74065120A9A6E06787005FD68F351BCA519D4A3F618B3313ECD8DD54DA2439E
A1870AF0BDA8472E48A8FF594AA52E985631BCA28B7C70C0E5AA0718F13EEF7A
339B468A70EEF1E6966E891818CFAC5F58E42F7D8AF24BF8881E1BF79B78B4C0
3E69FBC6FAAC947183E29186F85A6C23822A7B4AA1A80757A879E97494D0D3B0
1CB1E9C636C7E30BB6E47F6236E0FFB69B846139BABD81BE6A56192528B341C2
8A32047CF996967B63E055D38852E41326D0A6978417A9FA273B93A2B97D213C
CD50B80F86EED6199B2E6CF15077019DED902346B4772F1DE7733F9D5D21A48C
14130DFAABC73B5A5D7FE09D39930B7DFF9> |
210 <001C60D8A8C9B7791400A5D35C3C94736791D0792D5A9F20B170B512FF4
F1030835A9BCAAF7B1BED3B2AB3C43F5BC6A2AC183FCD3D55F94FC786A3A6C87
2963722A834A68CA574A58E2C8C26CEF154E33E049CCD539B36EFB25B7B10C31
AC908A185DD497B0C8A7D42E384588A25B69574D29A9101E654D374EE54E3C64
F6138AD964852F0C061F7F96F36BEC254AB261207775643E99B12F007A896F43
BD62C839464877BF1F24A06559EFD5100DC5600F255BD4C796392E91ED1> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
VQWDIY+CronosPro-Bold [15 0 0 -15 0 0 ]msf
231.2 204.06 mo
(\000&\000O\000\001\000W\000V\000F\000\001\000E\000F\000\001\000M\000\010\000P\000C\000U\000F\000O\000U\000J\000P\000O\000\001\000E\000V\000\001)
[7.22992 8.1601 3.11989 6.86989 8.10013 6.74994 3.1199 8.07016 6.74994 3.11987 3.90015 3.54013 
7.71011 7.90512 5.38513 6.74997 8.1601 5.38513 3.90015 7.63501 8.1601 3.1199 8.07016 8.1001 
0 ]xsh
VQWDIY+CronosPro-Bold [22.02 0 0 -22.02 0 0 ]msf
99.7598 261.16 mo
(\000%\0000\000$\0005\0000\0003\000"\0005\000\001\000%\000&\000\001\000-\000\010\0006\000/\000*\0007\000&\0003\0004\000*\0005\000\262\000\001\000%\000&\000\001\0005\0000\0006\000-\0000\0006\0004\000&\000\001)
[14.7093 15.7224 13.1019 12.4413 15.7224 12.2871 14.0928 12.4414 4.58 14.7094 10.6135 4.57999 
9.99695 5.17471 14.6875 14.6653 6.23178 13.7403 10.6135 12.2871 10.1294 6.23175 12.4413 10.6135 
4.57999 14.7094 10.6135 4.57999 12.4414 15.7224 14.6875 9.99695 15.7224 14.6875 10.1294 10.6135 
0 ]xsh
VQWDIY+CronosPro-Bold [12 0 0 -12 0 0 ]msf
277.19 283.479 mo
(\000%\000\317\000M\000J\000W\000S\000\317\000\001\000Q\000B\000S\000\001\000\033)
[8.02808 5.41205 3.12012 3.12012 5.508 4.5 5.35199 2.5199 6.492 5.59204 4.48792 2.49591 
0 ]xsh
true set_gvm
%ADOBeginSubsetFont: FPNAAA+CronosPro-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJA+CronosPro-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B89A42B5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJA+CronosPro-Bold /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJA+CronosPro-Bold*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
VQWDJA+CronosPro-Bold nf
VQWDJA+CronosPro-Bold*1 [12 0 0 -12 0 0 ]msf
233.054 321.484 mo
( )sh
VQWDIY+CronosPro-Bold [15 0 0 -15 0 0 ]msf
224.496 378.48 mo
(\0001\000S\000\317\000T\000F\000O\000U\000\317\000F\000\001\000F\000U\000\001\000T\000P\000V\000U\000F\000O\000V\000F\000\001\000Q\000B\000S\000\001\000\033)
[7.97997 5.60989 6.74995 5.53505 6.74995 8.14499 5.37003 6.74994 6.74997 3.1199 6.74994 5.37003 
3.1199 5.53503 7.69501 8.08502 5.37003 6.74997 8.14496 8.08502 6.74997 3.1199 8.09988 6.97495 
5.60989 3.1199 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: VYRAAA+CronosPro-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJB+CronosPro-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B89A42B5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJB+CronosPro-Bold /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJB+CronosPro-Bold*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
VQWDJB+CronosPro-Bold nf
VQWDJB+CronosPro-Bold*1 [15 0 0 -15 0 0 ]msf
389.225 378.48 mo
( )sh
VQWDIY+CronosPro-Bold [15 0 0 -15 0 0 ]msf
288.516 434.475 mo
(\0005\000J\000U\000S\000F\000\001\000\033)
[8.49014 3.90015 5.38513 5.625 6.76508 3.11987 0 ]xsh
VQWDIY+CronosPro-Bold [12 0 0 -12 0 0 ]msf
203.799 549.479 mo
(\000\262\000D\000P\000M\000F)
[5.78394 5.14801 6.15601 3.10803 0 ]xsh
292.395 549.479 mo
(\000\001)sh
231.915 549.479 mo
(\000E\000P\000D\000U\000P\000S\000B\000M\000F)
[6.44403 6.15601 5.14801 4.29602 6.15599 4.48792 5.57996 3.10803 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: JRNAAA+CronosPro-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJC+CronosPro-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B89A42B5> |-
/eacute <1C60D8A8C9B7791400A5D35C3C94736791D0792D5BC127DE6F4CE27
766B2AF89B016EBBE33AF4326CD70573041F903CFAC5584AFDA205425BBAF230
CC3529E3D6284160A7D36F60A6402E251E300964B0957112C6B16DF2FD2894CE
6F935FCBAA97153E56D57DB690DD0963EA9FC128646C6BCA2A6B7C3F1EF59211
3B89F874C0BBF25B983501181733BCCB9F88BF4CEF05A8B2C92919EFE75BB47C
B0C60DFF9D98EF128AA3696DEB802BBDB18EF408240C4DF2520BFCFDAFF9A> |-
/colon <1C60D8A8C9B888C1C8F6321293740C403458FB03BF08A73A3868A49C
43DCAC700DC7EF789FE9F752572F9A7A9E0A2866CEB96162BA5A96DAB9306D46
3693C01D92B3F37971CE5F7A> |-
/J <1C60D8A8C9B8517F1AD00D46CB440A4C313E2B5F2541E78224288D4DD83A
8EAC7DF56F881F83EF21984D24AEF139E97AB5C64AEDDC983CE6462EA0CE8C71
EAC54D2B94FC2A3E369527E15F54DA> |-
/a <1C60D8A8C9B74A3E7B588CCDDA5A3A5C2BBAC6E82334CF58B4B63A22FBB7
CFD38917CB96FA61DF97F214D05D4851E9529C19BEA3A5C9393AF83EC8F1E6BD
8B837A7D058A289AA2131DBE5D6B8B3749F1D452471B2AA2B40BFF883AD5F7E4
D8968C5A426D88403013C7D1ACB668B605FA14DE3948FD72FAAE1D9E777A17A7
76114C6F72EEFFAE6A0C43AEDE96D71E4C143FBD4E1E8AD5A8FC9A4439374ECD
F840FAD0B93EC9199CCC5B22CFE038EF6D1CEC513BC53E68A0A3763B2C4DD49D
A0> |-
/c <1C60D8A8C9B76E3769704022E098C226557303DD38720490F50158CA35EF
EADCA4093FDF3DCCF137F6362DE8853D2526E77EFF53D39A3C263DBC5F474C28
C2A1E99DE5331219B3C947F31A644042C7A1DC58DDDCDA7BC28969C3CC3646> |-
/d <1C60D8A8C9B782565A286F3F22FC852664AB02B9833466B61708A4DE63A6
ADDBB96B3EF97C3E034D135E035C039FDCAF3A558CC78304E9343CE074E49280
74440530DF78B1F5762F79296270D08FC9C7DC89F96114D0120FAED9898C5723
963B4A57238A9E1B2893CBD8E920C01B7AE1DB135B60DB4C43632B6D46C01817
EFAC3F35F359CAB29DD0BF799F6B101286B17F4214B6439880FEABBE9644D19B
DA> |-
/e <1C60D8A8C9B7791400A5D35C3C94736791D0797366D07908FA173389EEFE
260692C1420562CDD5E8376F49424B90AF4213129B0A5A4985C67B771942C24A
5046CBCF3F6B4ECA5DB5D8AE020F3A9B8D7797A3C24A53F74D73A1CCD8B65DB8
612D5CC3E7CC7E3DB26D2E6F2928BD16595C43592D65425015C821D0E28A079B
D6FD48A23B687E9920> |-
/i <1C60D8A8C9B869C10F0C5D8543E3389149FDA8BFA7580B8AB36AA5F057BC
3D859B33CF43C39EBA5EDF84132F85DB0E04701336439E808811E9661C462A2F
6322A6703F5B27FFA72D7D739E6405814C3664EDBB2ABBDF2894AB74477A2FBC
CE1806A8BD4C241318C4E7254E212195A2236F80F7DEEC> |-
/l <1C60D8A8C9B869C10DA8F3F6940AAE852EE294A2BAA8938E93FAFC50029D
651523B2FD52F8EB157BECB94FCDD0DAE42642C21F33190ECFB800D109998E69
BFD782> |-
/n <1C60D8A8C9B79C5F8CB5531F09E2883CD7193F36597CA81B5C22AE6AF4AA
2EF7DA85199DC3F8A0475C8FF58DB585B4389319A6DFE493FE08A6C43F1B2AF1
08C38289BF5F844F94A4F9E35323821129139714612A5F7AD67FF8ACBD98D7BF
C1401E44747DA5B36B1689AEEA37B537559F8976B39EAB2D058B9C10B85A4F93
BA14> |-
/o <1C60D8A8C9B7BA8F9D570CB014B50E606B40D7DF9DB2B3C839EC13B3954D
A4D0157D20D0B46622A2AE645E94A19DF453A71A295B7571978DD75196F7053F
ECFBEA7139438E5B16E54817CF35BBBF196496FD24D6> |-
/p <1C60D8A8C9B79FB0CEC0C5AA3212C391D5EC01061467EF62EC893A0B2CEA
B99BF8CCCEBEDB6E4DDE59F1D60C4F2141C09FA3088E35331DF47FAC3B336F5F
D85D31D9BFEFD215A3F3FD4E2025DE2C0341A8F9639C39D9FA6C6516A9B57AA7
BD96A15219A97633157CB509E9B3430123614A348138C8DDE9599152D345F6F5
BE12321A4F054F3F0702D7B438033C062AF31FBF55312F3E56BA3513BBAB93E4
646CE286E6B44733B89181BF56B7E9AC9F24990BE0153488> |-
/r <1C60D8A8C9B7255096F8C0F7451F935A7317596A29D4A94F26C95F68D01C
677C3A9FAA5781E4D3039AA7DB7F0F98F1E308DCA74F5C37E02503F4E3E483C8
58004FE2C76AB3FD333F208B83F42B09C8BBE3568564681EE31B82D3704D02EF
92B110296092023BC77FDE34E1488F09DE9BB8168F1CE567ECC88BD1F4CA77C8
CBF88FE25BC50DEF1E0FA7512DCB1EB8E3E9F35827FC40CC235C4B8E0C224E50
1A37AD4F4682137C> |-
/s <1C60D8A8C9B72A68EA13F09642A21B79FC429991AE7A74E7EE1E66848D67
12186D6B4272A98FB73345FFF485B64DA71138DB63CBDEC50FDF9964EA70ADA3
46BD348D2AAB0A885B7A3418FAABB54C382A0A8FC116674730F4F8F0B333CEA8
E913C03BB71D93D32FA813AE1E71116669FBDB4D8842418874B337F1D101D4B4
3400BE924885062BF39008C199D8A71B> |-
/t <1C60D8A8C9B804561DAB83C9EEB467BCF7B8B4D420D4A9199E3AB30E93A2
CCBE3DED2CF726B2C2A1D416F3DFC0E99DCD54C1264050C374AD858253B9D7E6
7D6EB259C18D1CCF93E410AF991FB0B0D9D6862F3D3F349C933EBB5BCC0E8AF1
523046CBFF558FF89BF89BE9019BF9DAB107E6855796E709E79B> |-
/u <1C60D8A8C9B780B37A33A877D2F9590BBFA03D07A8EB075EB05170C29149
0A8813DC6B753B5054996EA323A15229D19581579A447C853F3873262541865A
CE1845787882BF2A2579481BE10951F93FB6073E762773020AA065C0AB8B0090
E6AA4A3098365C3897321691A29FA806D0F552401F14F01A55CA1356CBF5F458
E541E40488FF4242F3EA6264A153B2A54E2B8A064076CEE8224BB3B8DD5A68AC
66DE0B74FFE1F537D4E05A5E9DA406B1> |-
/y <1C60D8A8C9B77D5F9851FC778EF36D09D7E759B80FC61B3189335D720EC7
5364BDF1F4A2D87A623DD3A05ECDFA576895501BD1A98AB0BA08A7917419449C
2CDA7EE77D4247E9B336075D0B55909520CD541155C675E19E1D961C9149DC8E
674BBC7C06193F9B94A006E55744A8B145EA703739CD40> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJC+CronosPro-Bold /Encoding get
dup 32 /space put
dup 34 /eacute put
dup 58 /colon put
dup 74 /J put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJC+CronosPro-Bold*1 
[32{/.notdef}rp /space /.notdef /eacute 23{/.notdef}rp /colon 15{/.notdef}rp /J 
22{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r 
/s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
VQWDJC+CronosPro-Bold nf
VQWDJC+CronosPro-Bold*1 [12 0 0 -12 0 0 ]msf
278.691 549.479 mo
( et discipline ou sp"cialit")
[2.49591 5.39996 4.29602 2.49591 6.44403 3.10803 4.42804 5.14801 3.10803 6.47992 3.10803 3.10803 
6.51599 5.39996 2.49591 6.15601 6.46802 2.49591 4.42804 6.47992 5.39996 5.14801 3.10803 5.57996 
3.10803 3.10803 4.29602 0 ]xsh
VQWDIY+CronosPro-Bold [12 0 0 -12 0 0 ]msf
466.899 549.479 mo
(\000\001)sh
406.419 549.479 mo
(\000\033)sh
257.967 587.483 mo
(\0006\000O\000J\000U\000\317\000\001\000E\000F\000\001\000S\000F\000D\000I\000F\000S\000D\000I\000F\000\001\000\033)
[8.00409 6.51599 3.10803 4.29602 5.39996 2.5199 6.44403 5.39996 2.5199 4.48792 5.39996 5.14801 
6.44403 5.39996 4.48792 5.14801 6.44403 5.39996 2.5199 0 ]xsh
252.111 625.487 mo
(\000%\000J\000S\000F\000D\000U\000F\000V\000S\000\011\000T\000\012\000\001\000E\000F\000\001\002\276\000\322\000T\000F\000\001\000\033)
[8.02806 3.12012 4.5 5.41205 5.1601 4.30811 5.35199 6.4801 4.5 4.27203 4.44012 4.21198 
2.5199 6.45612 5.41205 2.5199 12.312 5.41205 4.44012 5.41205 2.5199 0 ]xsh
VQWDJC+CronosPro-Bold*1 [12 0 0 -12 0 0 ]msf
273.747 682.487 mo
(       )
[2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: MGCBAA+CronosPro-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJD+CronosPro-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B89A42B5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJD+CronosPro-Bold /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJD+CronosPro-Bold*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
VQWDJD+CronosPro-Bold nf
VQWDJD+CronosPro-Bold*1 [12 0 0 -12 0 0 ]msf
197.223 682.487 mo
(                                      )
[2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 
2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.4959 
2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 2.49591 
2.49591 0 ]xsh
VQWDJC+CronosPro-Bold*1 [12 0 0 -12 0 0 ]msf
292.067 682.487 mo
(Jury)
[3.39606 6.46802 4.48792 0 ]xsh
405.771 682.487 mo
( )sh
314.271 682.487 mo
(:)sh
1.5 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
68.8047 360.71 mo
530.96 360.71 li
0 0 0 1 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: XWBAAA+CronosPro-Italic-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/XWBAAA+CronosPro-Italic 1 GetGlyphDirectory
1 <001C60D8A8C9B88A6543> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
VQWDIZ+CronosPro-Italic [15 0 0 -15 0 0 ]msf
325.96 445.14 mo
(\000\001)sh
68.8047 531.269 mo
530.96 531.269 li
0 0 0 1 cmyk
@
1 lw
4 ml
568 816 mo
27 816 li
27 28 li
568 28 li
568 816 li
cp
.208 .906 .647 .078 cmyk
@
gsave
54 53.5137 mo
177.018 53.5137 li
177.018 205.503 li
54 205.503 li
cp
clp
gsave
53.682 53.3209 mo
53.682 100.853 li
177.261 100.853 li
177.261 53.3209 li
cp
clp
53.682 100.92 mo
177.261 100.92 li
177.261 53.3208 li
53.682 53.3208 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 -8.39001 817 ]ct
[123.578 0 0 47.599 62.0721 716.08 ]ct
snap_to_device
<<
/T 1
/W 814 
/H 314 
/M[814 0 0 -314 0 314 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup<</Predictor 15 /Columns 814 /Colors 4 /BitsPerComponent 8 >>/FlateDecode fl]
/O 3
>>
%%BeginBinary: 1
img
8;Z]bbECnq&O=`]5Q:\84_$Pf=ssHCX@t`IJ^QP?O9q)Mg>Mu0"TSP,\_llT!!!"LN,Sdt!4F7[!!%Q:
#o<RA@!f`o!!(ZCDufq=[O5;[!.aGC(B=GCHbopd!8*l^!<<,.-X6WOJF*XZ!!$DR_?Bo>fUd&MkALV+
5fNc[r;h-)coo_4&-.4fiA/6CH_.tq!!!bNAV*;D4F]]u!%NZFKPrqoJ(sDq!8t239alI)62oVf0)u!E
9t5SLDu73J!.6]`ntEebpAt?afn@OCm.gN@IM2\]f@r#0G5S5#]-">&r;I_O#loMAm2--kIT+AE&(s$n
s,Pt>!5S8NN.`4dWT<K&llEija);"Zi-IIS_N*MQEjnF0lL2FGpYY@V$in)1/#$GE4)P]eG<8b3(B=GY
-!X2e[mRQB!<?M/_W=104&cS(!!%0g>Y_ZTU&'^d)0oi_St5k8!!)Ad2\JTSif"H%,&VQbF:/lb!'Zfi
RBY/6>IXY5nB$@,KUiV/_?Bpi:F9<n]^sL`in\687Q)K-!!%hV%[5',Y)&c-T$^9BoZmdZ!!"4[j[?t^
In$pJ!"]_p-PA'11Vs:qJ;A/)O`9QW&M=%`7"ia?mM7F];:46]k#]<m6JMP@lttgf4rYirrV"q_n&Pd$
"abn1!!$XC/ouB:$((8@;'B0E!;7aEk4VI^0'C!E6F[!qlqP"6m?r.ZJ[tM\Q2)t!HIj\(OmO6]!<D&+
.Ym]R8Ec%pO_:b?a6NID_I`[-ZMgOS!!'ZmE*5+a7(B=J8%*nh"os2J&MED3LBs7>n&Y3`c2[k65/Lme
r/`]Fb]a>XIpDK'aR%eikPtV,R6>B$.l.*N_)kh)KT'k1ruD^1!W_^r_WCP5/`AH=03m)p#6=OB_WCP5
/`AH=03m)p#6=OB_WCP5/`Dl:8,Hr:A0bEcB8hMf),UV=^pk,7o@[fuU80P#)`H67T*Ue#N,Sdt@"`L`
S,%n[.Ei&6!!#IoQbJl[#a`DeDufrHKQ-1Fq8p[2bK0Y=&/be@ll!,Q;k<.rC]FHa2LCftET#.e,?m[i
HCpVM7l.47%hUGi4+mtA_#4S+g3b``qYh&bP.sAo!!(fHE2h)P1TTsT&MEl@KF7dqr<\hEHo/2+rfEBM
hVMn)*;F0aje'Znatm):d;7=7+Eda8]/o%]h"cuorbPPmKZi8DcPQtT9!nP-ao>#DjR3X4!!%?X/hb*'
JnGCVA&8BLi0\J/&M=k^9=PrT/cYmlKZf9m\_pW-jd9uf!&u<1?A-K.cg&2n7T?bRd]P*IAj[oV<f&^7
!3S+uGb5G1/4-)!hJa?hUQLAu\R-Ocnok?U!.aM_>[E(VEaQ<V!:VVXj[H[)pOrtT!:M+:?G8U.Z?6j6
m7\91=f=aId^uD9A0-%a7E>H/S?)DR*R2ob9"#eoPJ+<n4%:EskC/8,q3,au!;Japj`li*8_1bTINJQ?
3Psm&O)R\A_PM]'!.[)Hj`li*8_2:?Il:!SotQ*&bW^):\-NrPJ9/tib"0&77Rn.FIk?+]qi/u\iKC9r
b;%rW!&-pQ4:.@kIGn(2BDV]0kTa?(KM1:<E2g%Ir;Zii&M?krV/SX,Pni9+L.N[rZ9>N;o,q9<!8d%!
E1)]C2H$8bfq&r;dMjqniUTXO!!"]B\3((a_L:B@?YB6:!9bY4SqKbq^2U'TZi'k(oFW]O+!3*[qm'&?
mQ^>56Q73%\h\=r\7C)IN0"&?pf[(E\Xh%Vn'T?qW)UV[>PETa6hX_7Iu@"p*oZZ;i;s#KH%\h-r?,@6
[;\-t&M=%`CC-?]qE_VJCZ0:r,?t3Kee0UCou#C89/_tSf%U1\p1.$_7EE5rGP&mM(+R`#Qjjk*!WXo%
4#i9@f%UJO6Dc\.*raX!-[TM'NR=?aDpbRQM/Z&S$PrdC*e__#E%0!:QfC6G"T[Ic_W=A!'P<$AnK-Wj
!,sRLng%HI1W&6uO)P+"31"T0&h_!o[VcWEmJ<N9JD!b5moO,,E61En]%6bfWXq)h^piSm'F/ujF`_lS
6DZVGg.83eoS-&OIV=4$(2__c,$^;=Duft6I)=ui/R/W=_WCQ]Dufr@8%9PBKhGiD\/\ih/cYn;#aaSZ
E%0#$&M@3cljtf:qE_Uk!1`4XiK?XG%cNS)b_'k+f#"8tXq32c^paq/osJ`FAq\?cDufquO)V)%KhF*E
>[E'k!5Nl5978BsJskJ7M%9Gd'_I,PHbZka2e8W_Rgg02!WXpPp[DGpQhFU$W)UV[$^L(-(/rU<iR4f]
bP2tUJ3Lgr?:WV#9=#Bdj(eVpq?WF4*F0=2c!%W9Y5nXe,@'5NFA98%lRTgu>?@C>>Q=clDoZh=U*H,K
f"u!+7^sFF'.s7bf+K_+3k?YCR^I)P?NU;T8%?M'kaHI)f"u!G%0/X8i=`>hCVloNY6^IG1+M82)_,"#
7)*4i>ZsGu!8qMC6$Yo/A5SGB9,9;1[4G;2qnf0`,@"Q.$NRuMKM25;_BkQ]/hb'F!8q%t-2o7M'$LWJ
(Z>DqE%U#]J!4gXB$L[KhP_7tQRl[QDeac'F=dlgQ;@S^R+!!0mGU28QhFT%&R!1c;,WhHN?dBpbQsQq
CVg5Ti**uDrhenJE,!n?j[HZZ!1Z]l`8;87'/%O5\@`(`!.]+sQh[&ECVloN$^V[g!W[0li=^W=FA98%
lSHC(MiJP2P(h,;E*3c&@Kuo.<8E>f_D>5G9,9!-_BjP`E#G#T0#uRs$NRt%iDRED>RE:(jnP9`!<<ra
>jD';94?u_m+9'G,68KI_>jQ$=^DA(NBnXAWS5%16PJ8I&M>/T-<pNN?70!Ls1<5q@e6b];SV8(U%6A+
8Z2Uhn*61"q<lFNL!/Ka^Ms"9E-\sI$NS!>&MDBo;n0b8\;YA-!;J^ojnWNrQe2S1&M=%`^IPdrs%MAa
)rWP:*A/N>!8qp*]dO8TO$=:1&%?M'rdH+t!!#21>l#3gYn8T5>Q=bA$(&A[95K:)#T!Jk>Jd4Ti=_Wp
&2%<Ya=H-[/cYm$hu=<Ahu/RSH!qq&7^rEug_)5f$^]KOQOthM!4RVShngZt_I\B.!5L2Fd^O1PNGoco
!W[14\F_@X@O#,I\,ZNa&h\S?Qe2S1&M=%`[tIE3_Bh+WAV:Ek^b+Nn[r@1`E#IU9!,tT@oIX<W,@!^J
!!(de/q"+ofEdfU/cYm\KM14>,rWVOKF7dq/`G-eE/BQn);tVsE(d_5/R2a0>Xl4'!8J2>I1)Co#aZ,U
!!'K]9AdT42Ss$Y$NRsoiR52SM2cHli;s!u9=XUG>[ep_7^rEug_)5f$^]KOQOthM!4RVShngZt_I\B.
!5L2Fd^O1PNGoco!W[14\F_@X@O#,I\,ZNa&h\S?Qe2S1&M=%`[tIE3_Bh+WAV:Ek^b+Nn[r@1`E#IU9
!,tT@oIX<W,@!^J!!(de/q"+ofEdfU/cYm\KM14>,rWVOKF7dq/`G-eE/BQn);tVsE(d_5/R2a0>Xl4'
!8J2>I1)Co#aZ,U!!'K]9AdT42Ss$Y$NRsoiR52SM2cHli;s!u9=XUG>[ep_7^rEug_)5f$^]KOQOthM
!4RVShngZt_I\B.!5L2Fd^O1PNGoco!W[14\F_@X@O#,I\,ZNa&h\S?Qe2S1&M=%`[tIE3_Bh+WAV:Ek
^b+Nn[r@1`E#IU9!,tT@oIX<W,@!^J!!(de/q"+ofEdfU/cYm\KM14>,rWVOKF7dq/`G-eE/BQn);tVs
E(d_5/R2a0>Xl4'!8J2>I1)Co#aZ,U!!'K]9AdT42Ss$Y$NRsoiR52SM2cHli;s!u9=XUG>[ep_7^rEu
g_)5f$^]KOQOthM!4RVShngZt_I\B.!5L2Fd^O1PNGoco!W[14\F_@X@O#,I\,ZNa&h\S?Qe2S1&M=%`
[tIE3_Bh+WAV:Ek^b+Nn[r@1`E#IU9!,tT@oIX<W,@!^J!!(de/q"+ofEdfU/cYm\KM14>,rWVOKF7dq
/`G-eE/BQn);tVsE(d_5/R2a0>Xl4'!8J2>I1)Co#aZ,U!!'K]9AdT42Ss$Y$NRsoiR52SM2cHli;s!u
9=XUG>[ep_7^rEug_)5f$^]KOQOthM!4RVShngZt_I\B.!5L2Fd^O1PNGoco!W[14\F_@X@O#,I\,ZNa
&h\S?Qe2S1&M=%`[tIE3_Bh+WAV:Ek^b+Nn[r@1`E#IU9!,tT@oIX<W,@!^J!!(de/q"+ofEdfU/cYm\
KM14>,rWVOKF7dq/`G-eE/BQn);tVsE(d_5/R2a0>Xl4'!8J2>I1)Co#aZ,U!!'K]9AdT42Ss$Y$NRso
iR52SM2cHli;s!u9=XUG>[ep_7^rEug_)5f$^]KOQOthM!4RVShngZt_I\B.!5L2Fd^O1PNGoco!W[14
\F_@X@O#,I\,ZNa&h\S?Qe2S1&M=%`[tIE3_Bh+WAV:Ek^b+Nn[r@1`E#IU9!,tT@oIX<W,@!^J!!(de
/q"+ofEdfU/cYm\KM14>,rWVOKF7dq/`G-eE/BQn);tVsE(d_5/R2a0>Xl4'!8J2>I1)Co#aZ,U!!'K]
9AdT42Ss$Y$NRsoiR52SM2cHli;s!u9=XUG>[ep_7^rEug_)5f$^]KOQOthM!4RVShngZt_I\B.!5L2F
d^O1PNGoco!W[14\F_@X@O#,I\,ZNa&h\S?Qe2S1&M=%`[tIE3_Bh+WAV:Ek^b+Nn[r@1`E#IU9!,tT@
oIX<W,@!^J!!(de/q"+ofEdfU/cYm\KM14>,rWVOKF7dq/`G-eE/BQn);tVsE(d_5/R2a0>Xl4'!8J2>
I1)Co#aZ,U!!'K]9AdT42Ss$Y$NRsoiR52SM2cHli;s!u9=XUG>[ep_7^rEug_)5f$^]KOQOthM!4RVS
hngZt_I\B.!5L2Fd^O1PNGoco!W[14\F_@X@O#,I\,ZNa&h\S?Qe2S1&M=(]A&"$u!.]V;M!_s"b&=F@
"Jj?$"V0/t0"ls3I"]ZT/cYlU_PO_\M2uU9_?BpI9=XU00(BN+8%8O!C^HHb_BhC_jTlY&J1]a.>I_UA
\/aH/!3dbSH4-)7#aZc@!!'H\95ic%+5q6n$NRu.E9SrZiZh]gDufsk&h^kO972E9&M=%`>Jd5GE/BWp
3Pkq"?q\$%(,#+h/k<DO!,Mt.hSLR&_W;%>!.ZZ[dTa6"8%9Pt!W]GN>^?dEp^!32>Q=c4KM-7B&g-(Q
KF7dqQ>l(?>iHu5Nc5"!fFfgMKhHfHb7Q?,!*d=:[r@1bE&kc=!+8I0oG0(L&M?S`!!$gAQeoS*5/QCe
(BAt;iR1r?`(.<Wi;s"`-!Ya(QhUiQ,?t3K[Y.:li=[6kEeFf#^m8s(/R79[>`Nb(!8%o:]nK+,KZar[
!!$6?V71E#O)R+r"TVq'\F^OhnI[BD\,ZMF$('Mc,sK3-#T!Jk/`G,^\AUnI*8pr!YU*P#$^^VoQQo`8
!4IPRDrD<NiGsSZ!5On>kq-0",@$7J!<Cab0"ls3I"]ZT/cYlU_PO_\M2uU9_?BpI9=XU00(BN+8%8O!
C^HHb_BhC_jTlY&J1]a.>I_UA\/aH/!3dbSH4-)7#aZc@!!'H\95ic%+5q6n$NRu.E9SrZiZh]gDufsk
&h^kO972E9&M=%`>Jd5GE/BWp3Pkq"?q\$%(,#+h/k<DO!,Mt.hSLR&_W;%>!.ZZ[dTa6"8%9Pt!W]GN
>^?dEp^!32>Q=c4KM-7B&g-(QKF7dqQ>l(?>iHu5Nc5"!fFfgMKhHfHb7Q?,!*d=:[r@1bE&kc=!+8I0
oG0(L&M?S`!!$gAQeoS*5/QCe(BAt;iR1r?`(.<Wi;s"`-!Ya(QhUiQ,?t3K[Y.:li=[6kEeFf#^m8s(
/R79[>`Nb(!8%o:]nK+,KZar[!!$6?V71E#O)R+r"TVq'\F^OhnI[BD\,ZMF$('Mc,sK3-#T!Jk/`G,^
\AUnI*8pr!YU*P#$^^VoQQo`8!4IPRDrD<NiGsSZ!5On>kq-0",@$7J!<Cab0"ls3I"]ZT/cYlU_PO_\
M2uU9_?BpI9=XU00(BN+8%8O!C^HHb_BhC_jTlY&J1]a.>I_UA\/aH/!3dbSH@HS\:OiHGr2BIV~>
%%EndBinary
grestore
np
grestore
53.682 148.519 mo
177.261 148.519 li
177.261 100.92 li
53.682 100.92 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 -8.39001 817 ]ct
[123.578 0 0 47.599 62.0721 668.481 ]ct
snap_to_device
<<
/T 1
/W 814 
/H 314 
/M[814 0 0 -314 0 314 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup<</Predictor 15 /Columns 814 /Colors 4 /BitsPerComponent 8 >>/FlateDecode fl]
/O 3
>>
%%BeginBinary: 1
img
8;Z]b95[r='Eh9_P5R$nM4J'"%qSSsi5.b)R5K+YOjlelouh]r^2`aZIs^PNnX@eErck^JI'K=<ml]dD
TC9$Ka7HWdp:GYIaPR("i;`0,-\),1s+o;%kJdGt`W#2BIci_pIcp;cemm%PqUt>;I,sEShYi42\GUX\
(BB!CO)X>8>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JHE9SrZi^UG:
DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><
>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mCQeoS*DM61=
(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh
"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr
!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5
!!$mCQeoS*DM61=(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;
!.\:jV71E#)rWQh"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R
!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-
!4X=[H4-(L&M>;5!!$mCQeoS*DM61=(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$
!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6Sma
J6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1p
i0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mCQeoS*DM61=(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt
\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3K
D@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk
>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mCQeoS*DM61=(BAti_PO_\M&YD/_?Bqt
Q>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JHE9SrZi^UG:DufsK
-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA
$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mCQeoS*DM61=(BAti
_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JH
E9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU
>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mC
QeoS*DM61=(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:j
V71E#)rWQh"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^
kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1praihSD#aQD(l&"hp#&A[
Oj,BKJ\[Rjkq-0",@$gZ!<Cab0"ls3I"]ZV/cYlU_PO_\M2uV$_?BpI9=XU00(BN+:UgB)C^HHb_BhC_
jTu_'J1]a.>I_UA\3/^O!3dbSH4-)7#aZoD!!'H\95ic%+5udD$NRu.E9SrZiZh^"Dufsk&h^kO972E9
'.s7b>Jd5GE/BWpH,9^b?q\$%(,#+h/l/tW!,Mt.hSLR&_W;(?!.ZZ[dTa6"8%:\?!W]GN>^?dEp^!36
>Q=c4KM-7B&g-*'KF7dqQ>l(?>iHu5So=]1fFfgMKhHfHb7cK.!*d=:[r@1bE-];(!+8I0oG0(L&M?kh
!!$gAQeoS*5/QCf(BAt;iR1r?`(.="i;s"`-!Ya(QhUiQ-X6WO[Y.:li=[6knq7AN^m8s(/R79[>b5m8
!8%o:]nK+,KZb#]!!$6?V71E#O)TB]"TVq'\F^OhnI[BL\,ZMF$('Mc,sK3-#o<Sl/`G,^\AUnI4Q->A
YU*P#$^^VoQR?#<!4IPRDrD<NiUVX0!5On>kq-0",@$gZ!<Cab0"ls3I"]ZV/cYlU_PO_\M2uV$_?BpI
9=XU00(BN+:UgB)C^HHb_BhC_jTu_'J1]a.>I_UA\3/^O!3dbSH4-)7#aZoD!!'H\95ic%+5udD$NRu.
E9SrZiZh^"Dufsk&h^kO972E9'.s7b>Jd5GE/BWpH,9^b?q\$%(,#+h/l/tW!,Mt.hSLR&_W;(?!.ZZ[
dTa6"8%:\?!W]GN>^?dEp^!36>Q=c4KM-7B&g-*'KF7dqQ>l(?>iHu5So=]1fFfgMKhHfHb7cK.!*d=:
[r@1bE-];(!+8I0oG0(L&M?kh!!$gAQeoS*5/QCf(BAt;iR1r?`(.="i;s"`-!Ya(QhUiQ-X6WO[Y.:l
i=[6knq7AN^m8s(/R79[>b5m8!8%o:]nK+,KZb#]!!$6?V71E#O)TB]"TVq'\F^OhnI[BL\,ZMF$('Mc
,sK3-#o<Sl/`G,^\AUnI4Q->AYU*P#$^^VoQR?#<!4IPRDrD<NiUVX0!5On>kq-0",@$gZ!<Cab0"ls3
I"]ZV/cYlU_PO_\M2uV$_?BpI9=XU00(BN+:UgB)C^HHb_BhC_jTu_'J1]a.>I_UA\3/^O!3dbSH4-)7
#aZoD!!'H\95ic%+5udD$NRu.E9SrZiZh^"Dufsk&h^kO972E9'.s7b>Jd5GE/BWpH,9^b?q\$%(,#+h
/l/tW!,Mt.hSLR&_W;(?!.ZZ[dTa6"8%:\?!W]GN>^?dEp^!36>Q=c4KM-7B&g-*'KF7dqQ>l(?>iHu5
So=]1fFfgMKhHfHb7cK.!*d=:[r@1bE-];(!+8I0oG0(L&M?kh!!$gAQeoS*5/QCf(BAt;iR1r?`(.="
i;s"`-!Ya(QhUiQ-X6WO[Y.:li=[6knq7AN^m8s(/R79[>b5m8!8%o:]nK+,KZb#]!!$6?V71E#O)TB]
"TVq'\F^OhnI[BL\,ZMF$('Mc,sK3-#o<Sl/`G,^\AUnI4Q->AYU*P#$^^VoQR?#<!4IPRDrD<NiUVX0
!5On>kq-0",@$gZ!<Cab0"ls3I"]ZV/cYlU_PO_\M2uV$_?BpI9=XU00(BN+:UgB)C^HHb_BhC_jTu_'
J1]a.>I_UA\3/^O!3dbSH4-)7#aZoD!!'H\95ic%+5udD$NRu.E9SrZiZh^"Dufsk&h^kO972E9'.s7b
>Jd5GE/BWpH,9^b?q\$%(,#+h/l/tW!,Mt.hSLR&_W;(?!.ZZ[dTa6"8%:\?!W]GN>^?dEp^!36>Q=c4
KM-7B&g-*'KF7dqQ>l(?>iHu5So=]1fFfgMKhHfHb7cK.!*d=:[r@1bE-];(!+8I0oG0(L&M?kh!!$gA
QeoS*5/QCf(BAt;iR1r?`(.="i;s"`-!Ya(QhUiQ-X6WO[Y.:li=[6knq7AN^m8s(/R79[>b5m8!8%o:
]nK+,KZb#]!!$6?V71E#O)TB]"TVq'\F^OhnI[BL\,ZMF$('Mc,sK3-#o<Sl/`G,^\AUnI4Q->AYU*P#
$^^VoQR?#<!4IPRDrD<NiUVX0!69O/RfEEj0bE)hl]g:3D$W\'_$_6e-!Ya(QhUiQ,?t3K[Y.:li=[6k
EeFf#^m8s(/R79[>`Nb(!8%o:]nK+,KZar[!!$6?V71E#O)R+r"TVq'\F^OhnI[BD\,ZMF$('Mc,sK3-
#T!Jk/`G,^\AUnI*8pr!YU*P#$^^VoQQo`8!4IPRDrD<NiGsSZ!5On>kq-0",@$7J!<Cab0"ls3I"]ZT
/cYlU_PO_\M2uU9_?BpI9=XU00(BN+8%8O!C^HHb_BhC_jTlY&J1]a.>I_UA\/aH/!3dbSH4-)7#aZc@
!!'H\95ic%+5q6n$NRu.E9SrZiZh]gDufsk&h^kO972E9&M=%`>Jd5GE/BWp3Pkq"?q\$%(,#+h/k<DO
!,Mt.hSLR&_W;%>!.ZZ[dTa6"8%9Pt!W]GN>^?dEp^!32>Q=c4KM-7B&g-(QKF7dqQ>l(?>iHu5Nc5"!
fFfgMKhHfHb7Q?,!*d=:[r@1bE&kc=!+8I0oG0(L&M?S`!!$gAQeoS*5/QCe(BAt;iR1r?`(.<Wi;s"`
-!Ya(QhUiQ,?t3K[Y.:li=[6kEeFf#^m8s(/R79[>`Nb(!8%o:]nK+,KZar[!!$6?V71E#O)R+r"TVq'
\F^OhnI[BD\,ZMF$('Mc,sK3-#T!Jk/`G,^\AUnI*8pr!YU*P#$^^VoQQo`8!4IPRDrD<NiGsSZ!5On>
kq-0",@$7J!<Cab0"ls3I"]ZT/cYlU_PO_\M2uU9_?BpI9=XU00(BN+8%8O!C^HHb_BhC_jTlY&J1]a.
>I_UA\/aH/!3dbSH4-)7#aZc@!!'H\95ic%+5q6n$NRu.E9SrZiZh]gDufsk&h^kO972E9&M=%`>Jd5G
E/BWp3Pkq"?q\$%(,#+h/k<DO!,Mt.hSLR&_W;%>!.ZZ[dTa6"8%9Pt!W]GN>^?dEp^!32>Q=c4KM-7B
&g-(QKF7dqQ>l(?>iHu5Nc5"!fFfgMKhHfHb7Q?,!*d=:pG_(%";h,mAN8Q~>
%%EndBinary
grestore
np
gsave
53.682 148.537 mo
53.682 196.069 li
177.261 196.069 li
177.261 148.537 li
cp
clp
53.682 196.118 mo
177.261 196.118 li
177.261 148.519 li
53.682 148.519 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 -8.39001 817 ]ct
[123.578 0 0 47.599 62.0721 620.882 ]ct
snap_to_device
<<
/T 1
/W 814 
/H 314 
/M[814 0 0 -314 0 314 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup<</Predictor 15 /Columns 814 /Colors 4 /BitsPerComponent 8 >>/FlateDecode fl]
/O 3
>>
%%BeginBinary: 1
img
8;Z]b95[r='Eh9_P5R$nM4J'"%qSSsi5.b)R5K+YOjlelouh]r^2`aZIs^PNnX@eErck^JI'K=<ml]dD
TC9$Ka7HWdp:GYIaPR("i;`0,-\),1s+o;%kJdGt`W#2BIci_pIcp;cemm%PqUt>;I,sEShYi42\GUX\
(BB!CO)X>8>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JHE9SrZi^UG:
DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><
>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mCQeoS*DM61=
(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh
"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr
!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5
!!$mCQeoS*DM61=(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;
!.\:jV71E#)rWQh"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R
!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-
!4X=[H4-(L&M>;5!!$mCQeoS*DM61=(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$
!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6Sma
J6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1p
i0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mCQeoS*DM61=(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt
\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3K
D@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk
>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mCQeoS*DM61=(BAti_PO_\M&YD/_?Bqt
Q>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JHE9SrZi^UG:DufsK
-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA
$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mCQeoS*DM61=(BAti
_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:jV71E#)rWQh"T[JH
E9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^kq-0"7_"Cr!<BVU
>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1pi0J?H/R7:)\;YA-!4X=[H4-(L&M>;5!!$mC
QeoS*DM61=(BAti_PO_\M&YD/_?BqtQ>l(?>iJ5_N,Sdt\0YC+$^\@8/gFU$!,`+0hSLRVKZaW;!.\:j
V71E#)rWQh"T[JHE9SrZi^UG:DufsK-!Ya(QadV[,?t3KD@)Zd_Bj)Qb6SmaJ6Tme[r@0CiA/7R!8s/^
kq-0"7_"Cr!<BVU>^?dE\.L><>Q=bA$('Mc-#SCZ#T!Jk>Jd5GE/>Om1;X1praihSD#aQD(l&"hp#&A[
Oj,BKJ\[Rjkq-0",@$gZ!<Cab0"ls3I"]ZV/cYlU_PO_\M2uV$_?BpI9=XU00(BN+:UgB)C^HHb_BhC_
jTu_'J1]a.>I_UA\3/^O!3dbSH4-)7#aZoD!!'H\95ic%+5udD$NRu.E9SrZiZh^"Dufsk&h^kO972E9
'.s7b>Jd5GE/BWpH,9^b?q\$%(,#+h/l/tW!,Mt.hSLR&_W;(?!.ZZ[dTa6"8%:\?!W]GN>^?dEp^!36
>Q=c4KM-7B&g-*'KF7dqQ>l(?>iHu5So=]1fFfgMKhHfHb7cK.!*d=:[r@1bE-];(!+8I0oG0(L&M?kh
!!$gAQeoS*5/QCf(BAt;iR1r?`(.="i;s"`-!Ya(QhUiQ-X6WO[Y.:li=[6knq7AN^m8s(/R79[>b5m8
!8%o:]nK+,KZb#]!!$6?V71E#O)TB]"TVq'\F^OhnI[BL\,ZMF$('Mc,sK3-#o<Sl/`G,^\AUnI4Q->A
YU*P#$^^VoQR?#<!4IPRDrD<NiUVX0!5On>kq-0",@$gZ!<Cab0"ls3I"]ZV/cYlU_PO_\M2uV$_?BpI
9=XU00(BN+:UgB)C^HHb_BhC_jTu_'J1]a.>I_UA\3/^O!3dbSH4-)7#aZoD!!'H\95ic%+5udD$NRu.
E9SrZiZh^"Dufsk&h^kO972E9'.s7b>Jd5GE/BWpH,9^b?q\$%(,#+h/l/tW!,Mt.hSLR&_W;(?!.ZZ[
dTa6"8%:\?!W]GN>^?dEp^!36>Q=c4KM-7B&g-*'KF7dqQ>l(?>iHu5So=]1fFfgMKhHfHb7cK.!*d=:
[r@1bE-];(!+8I0oG0(L&M?kh!!$gAQeoS*5/QCf(BAt;iR1r?`(.="i;s"`-!Ya(QhUiQ-X6WO[Y.:l
i=[6knq7AN^m8s(/R79[>b5m8!8%o:]nK+,KZb#]!!$6?V71E#O)TB]"TVq'\F^OhnI[BL\,ZMF$('Mc
,sK3-#o<Sl/`G,^\AUnI4Q->AYU*P#$^^VoQR?#<!4IPRDrD<NiUVX0!5On>kq-0",@$gZ!<Cab0"ls3
I"]ZV/cYlU_PO_\M2uV$_?BpI9=XU00(BN+:UgB)C^HHb_BhC_jTu_'J1]a.>I_UA\3/^O!3dbSH4-)7
#aZoD!!'H\95ic%+5udD$NRu.E9SrZiZh^"Dufsk&h^kO972E9'.s7b>Jd5GE/BWpH,9^b?q\$%(,#+h
/l/tW!,Mt.hSLR&_W;(?!.ZZ[dTa6"8%:\?!W]GN>^?dEp^!36>Q=c4KM-7B&g-*'KF7dqQ>l(?>iHu5
So=]1fFfgMKhHfHb7cK.!*d=:[r@1bE-];(!+8I0oG0(L&M?kh!!$gAQeoS*5/QCf(BAt;iR1r?`(.="
i;s"`-!Ya(QhUiQ-X6WO[Y.:li=[6knq7AN^m8s(/R79[>b5m8!8%o:]nK+,KZb#]!!$6?V71E#O)TB]
"TVq'\F^OhnI[BL\,ZMF$('Mc,sK3-#o<Sl/`G,^\AUnI4Q->AYU*P#$^^VoQR?#<!4IPRDrD<NiUVX0
!5On>kq-0",@$gZ!<Cab0"ls3I"]ZV/cYlU_PO_\M2uV$_?BpI9=XU00(BN+:UgB)C^HHb_BhC_jTu_'
J1]a.>I_UA\3/^O!3dbSH4-)7#aZoD!!'H\95ic%+5udD$NRu.E9SrZiZh^"Dufsk&h^kO972E9'.s7b
>Jd5GE/BWpH,9^b?q\$%(,#+h/l/tW!,Mt.hSLR&_W;(?!.ZZ[dTa6"8%:\?!W]GN>^?dEp^!36>Q=c4
KM-7B&g-*'KF7dqQ>l(?>iHu5So=]1fFfgMKhHfHb7cK.!*d=:[r@1bE-];(!+8I0oG0(L&M?kh!!$gA
QeoS*5/QCf(BAt;iR1r?`(.="i;s"`-!Ya(QhUiQ-X6WO[Y.:li=[6knq7AN^m8s(/R79[>b5m8!8%o:
]nK+,KZb#]!!$6?V71E#O)TB]"TVq'\F^OhnI[BL\,ZMF$('Mc,sK3-#o<Sl/`G,^\AUnI4Q->AYU*P#
$^^VoQR?#<!4IPRDrD<NiUVX0!69O/RfEEj0bE)hl]g:3D$W\'_$_6e-!Ya(QhUiQ,?t3K[Y.:li=[6k
EeFf#^m8s(/R79[>`Nb(!8%o:]nK+,KZar[!!$6?V71E#O)R+r"TVq'\F^OhnI[BD\,ZMF$('Mc,sK3-
#T!Jk/`G,^\AUnI*8pr!YU*P#$^^VoQQo`8!4IPRDrD<NiGsSZ!5On>kq-0",@$7J!<Cab0"ls3I"]ZT
/cYlU_PO_\M2uU9_?BpI9=XU00(BN+8%8O!C^HHb_BhC_jTlY&J1]a.>I_UA\/aH/!3dbSH4-)7#aZc@
!!'H\95ic%+5q6n$NRu.E9SrZiZh]gDufsk&h^kO972E9&M=%`>Jd5GE/BWp3Pkq"?q\$%(,#+h/k<DO
!,Mt.hSLR&_W;%>!.ZZ[dTa6"8%9Pt!W]GN>^?dEp^!32>Q=c4KM-7B&g-(QKF7dqQ>l(?>iHu5Nc5"!
fFfgMKhHfHb7Q?,!*d=:[r@1bE&kc=!+8I0oG0(L&M?S`!!$gAQeoS*5/QCe(BAt;iR1r?`(.<Wi;s"`
-!Ya(QhUiQ,?t3K[Y.:li=[6kEeFf#^m8s(/R79[>`Nb(!8%o:]nK+,KZar[!!$6?V71E#O)R+r"TVq'
\F^OhnI[BD\,ZMF$('Mc,sK3-#T!Jk/`G,^\AUnI*8pr!YU*P#$^^VoQQo`8!4IPRDrD<NiGsSZ!5On>
kq-0",@$7J!<Cab0"ls3I"]ZT/cYlU_PO_\M2uU9_?BpI9=XU00(BN+8%8O!C^HHb_BhC_jTlY&J1]a.
>I_UA\/aH/!3dbSH4-)7#aZc@!!'H\95ic%+5q6n$NRu.E9SrZiZh]gDufsk&h^kO972E9&M=%`>Jd5G
E/BWp3Pkq"?q\$%(,#+h/k<DO!,Mt.hSLR&_W;%>!.ZZ[dTa6"8%9Pt!W]GN>^?dEp^!32>Q=c4KM-7B
&g-(QKF7dqQ>l(?>iHu5Nc5"!fFfgMKhHfHb7Q?,!*d=:pG_(%";h,mAN8Q~>
%%EndBinary
grestore
np
grestore
53.682 205.667 mo
177.261 205.667 li
177.261 196.118 li
53.682 196.118 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 -8.39001 817 ]ct
[123.578 0 0 9.54904 62.0721 611.333 ]ct
snap_to_device
<<
/T 1
/W 814 
/H 63 
/M[814 0 0 -63 0 63 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup<</Predictor 15 /Columns 814 /Colors 4 /BitsPerComponent 8 >>/FlateDecode fl]
/O 3
>>
%%BeginBinary: 1
img
8;Z]b95[r='Eh9_P5R$n[ZfZ=*m1.p6,Q"6R5K+YOjlelq9s[S^N&j[IsLCanX@eErck^JI'K=<ml]dD
TC9$Ka7HWdoXfGGQ+mP(_#N*F+8kr8r?GY/qhtF?`W#2BIci_pIcp;cemm%PqU+c3r6!:!]_`5CE;B;F
/cYmd+5tXP\AXAG3Pkq"?q\$%(+sSO>`Nb(!8%o:]nK,7#aZc@!!'H\95ic%2o=Y^(BAt;iR1r?`/S^r
_?BpI9=XU0/o`+@Nc5"!fFfgMKhL2,QQo`8!4IPRDrD<f_W;%>!.ZZ[dTa6"NGpnp"TVq'\F^OhE?e_K
Dufsk&h^kO9ABf>,?t3K[Y.:li=\)djTlY&J1]a.>I_V2E&kc=!+8I0oG0'!,@$7J!<Cab0"ls3g^'5k
>Q=c4KM-7B&i[\h#T!Jk/`G,^\AXAG3Pkq"?q\$%(+sSO>`Nb(!8%o:]nK,7#aZc@!!'H\95ic%2o=Y^
(BAt;iR1r?`/S^r_?BpI9=XU0/o`+@Nc5"!fFfgMKhL2,QQo`8!4IPRDrD<f_W;%>!.ZZ[dTa6"NGpnp
"TVq'\F^OhE?e_KDufsk&h^kO9ABf>,?t3K[Y.:li=\)djTlY&J1]a.>I_V2E&kc=!+8I0oG0'!,@$7J
!<Cab0"ls3g^'5k>Q=c4KM-7B&i[\h#T!Jk/`G,^\AXAG3Pkq"?q\$%(+sSO>`Nb(!8%o:]nK,7#aZc@
!!'H\95ic%2o=Y^(BAt;iR1r?`/S^r_?BpI9=XU0/o`+@Nc5"!fFfgMKhL2,QQo`8!4IPRDrD<f_W;%>
!.ZZ[dTa6"NGpnp"TVq'\F^OhE?e_KDufsk&h^kO9ABf>,?t3K[Y.:li=\)djTlY&J1]a.>I_V2E&kc=
!+8I0oG0'!,@$7J!<Cab0"ls3g^'5k>Q=c4KM-7B&i[\h#T!Jk/`G,^\AXAG3Pkq"?q\$%(+sSO>`Nb(
!8%o:]nK,7#aZc@!!'H\95ic%2o=Y^(BAt;iR1r?`/S^r_?BpI9=XU0/o`+@Nc5"!fFfgMKhL2,QQo`8
!4IPRDrD<f_W;%>!.ZZ[dTa6"NGpnp"TVq'\F^OhE?e_KDufsk&h^kO9ABf>,?t3K[Y.:li=\)djTlY&
J1]a.>I_V2E&kc=!+8I0o`!0ib<H%:!99KHMZ~>
%%EndBinary
grestore
np
grestore
gsave
54 205.201 mo
177.018 205.201 li
177.018 227 li
54 227 li
cp
clp
53.682 227.167 mo
177.261 227.167 li
177.261 205.182 li
53.682 205.182 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 -8.39001 817 ]ct
[123.578 0 0 21.9843 62.0721 589.833 ]ct
snap_to_device
<<
/T 1
/W 814 
/H 145 
/M[814 0 0 -145 0 145 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup<</Predictor 15 /Columns 814 /Colors 4 /BitsPerComponent 8 >>/FlateDecode fl]
/O 3
>>
%%BeginBinary: 1
img
8;Z]bbAuW6%RAG+H2R[I:J^_<6ApfF!Y+4C.G6ap#8/IXp4i=&J'@^u@OIZFg!0O(5-r#tmpuDn1ACZ%
BDT1=Nm[=ZJ*Z=UW`T"G!!%DP^Ba4?o3]=Hr%FK<9]l@%o?<WhRJh>gY4]PPoPYJDm/1>dKibchcb]hc
i;EqJGSVpJNc8]c$NRtF_Bke-9<]XG)W:_tE0bI"BAjKi#a\#j!!&N8>iJnr"?XJs&M=%`B*joL(,!F`
E+st5!5MaS-(]f`YTmBki;s!uQ>h[ni=bJ_QU\Ib!1Y??i`Wbo42Rg+/cYla$(#lP0#<QeBnQio^feN#
SqThA,?u/G!W[2*E/A5d''omj7^rEuS0_G"=h"Sr_PIhs!!$X<QZs8u_2`JKKF7dq=i)JVKhJWp>T2Q&
!-"6CM.bc[lj/qI\,ZN!-!]G4\-+n1V%G<[!+uV)GSVpJNc8]c$NRtF_Bke-9<e!tiKE#XXpGmEJFDs)
KM*(-_I__sE/E`_i;s!uQ>h[ni=bJ_QU\Ib!1Y??i`Wbo42Rg+/cYla$(#lP0#<QeBm,8)7*GW2T5+.t
3&i-f)WB,h_PKFt#T!L!;[Jfe1PJK+,?u/G!W[0]iDP0&E!^]@9-[[A!:D(:lH^.s_9Ss59E2VuCSN%/
6c]6-5LiH+A=o!<8e`oV2;rRM\9,&rg%uWe!:NIgeF*d3_N&TG^*[(b!9OTSqL.=#fF]aff7XM3^c^RR
^Frh!40JpV/6$eG9D4p"KM,*o!!'+B?CZ4m9,7gq_IYQ'KM,`D\6NAS/cYla$((EK7G!2c2[bsA\,ZNa
9=Vpt.Cpj2\llO"_?Bqt?G\#f:=1rXd`oY*&M=%`pC]+KGD`O0QYrB$Q[[4(@jYGMj!aeb%p>iAF&0jW
!.8W?<3eLkQi;\'$^GPb&MF%\loR\gKM+63QhoJN/cYlY'/&g!&h_"\E+st5!5MaS-2pZV-.ie^NGnmu
3(pd"hat<\4"%mV1fU2gaZa2k>l*=m>oW`H#o*Gj25;h^Q#PukNJ:(A+jnSKa9\-LNc;PC-<pNNc4Vc"
**j41h(2gnB)hqO#a]drXpLG4(,#27!!$M^90>_rKM+7r#aan,jc"-Z!;QQM0jM#GM6;iXO)QQ7#aajm
_?Bqt/E%5fd5Bn2c,+%@"or%iE/EcARW.M'iA*V"!&-mP`,g#p\9)fl1*=4!B;(L5=d2m/Z;A[*LXg@C
&2sU)V]("5%aN:O9,7]++VTRQBW,H_'JB?&'/&)l>j?BaDufr&Q#N_K_BmhH/rafN!4\)/WR&F-fF]`q
DufsKO)V)E_BmjF,@!]*jqZhfr=7cf!-"Q3KhHp_*Q'3#:(P2fR>":^Xq32c^o%etf<]EFlj/sDCVg5T
?m"?J4U[UnNc;PC-<pNNp(8q/ZZ)>ba^3j$!/Sp2&MY1ZPr%)LqsPC#N\&ni^RZbR!*GGu3+notSaRdG
$^iP$qY=PW<;QJhJG!P)dIu,im*78;bO:)l!5Qo.>b6UA@7Rh4T+N[U!;@*Y:Vrs4,@%Ct#T!JkHO6#d
iDS;?0%X`h$NRuUKZfQu.@eLdf),=TI0=*PBS9?.7__=_4''6Fq`FiYIPptr4;0>MW+9rq>Xi49oK,0G
^U<XAa9\,M(+oRe4:%;-r#f7U=h%`*#T!Jk]nB$qILn-f/6o?%KF7dq?G`Ns5Q%I!RJEr`IeN=R^$tdJ
7`-Oa?TE0t\7BZ(*WU^Ffo'p$5FW`q_^,\YkZW-VHUe%+UMF#2N;bE,#aaET(BAuX:UiLnQbn10;P1;e
!!%ri/l0?\E*p-)kNk;2!+U]*PAhu+*t=Y%g1jSTiNbOEKF7dqq`,6@]0k^h1e`(GbKSjQjF2r)q42I*
!;QACbEHlog_VU93BI`O^_l&$,[:]NKhHj>c3"&#7^tPeQbr]hE9VSPBGc_hR58!Eb_/Wt%fjCOX!.(r
L!+5PbaceH=ns)T-(0H[rB:2]CP9n()<$b&_PM]'!.ZrDjnapT8S6pZ^CL=[)W>^bk2X?*]-"`UO%.!"
aAgHD4u<&kUCd_2^f`HHli"6AOQl4(45$%L3P)X;-Gj>'(+oRe<!\g[\0Ug&$NL11,$Z&FP2$j+!!'Zh
E+qKg>dF=NbBk!.UZ$5`**!&V2=bo%7f^>K[H0i%nJTaQm"PJ"W#,u1loRWtQ"^&PE!^]@9:^#&!59uB
dKl0AT-[aF#o<SlCVln[/dFR5\6K\"!!(W(9-[[OI$S`^-<pNNXpLFa\/b;1RJX&D;Mg:]:oOS"AS6Z%
!<DoKlH=81jaHcTIn.#-Ica>6m(P\Q\E(sI/cYn/T5^ds7m"?O:D#5T1P?,9_"T3]CAZE(me]q99E#@Y
!W_`g$('@p['TZ/PZNT4[QjB#T7oi_>Xgqf8%<)_#lqcS7UNTJKM*'md5+6ZAFqr_GJ58+$9Q*.!.Ys(
ASgN[_POI]>Q=bk+^E$1^*6eh42M.$J/Q48D!*;j(G:uDe[Z;F4$k6?`[Du4!3g).jgoJ]2.U=9A]HTQ
_I[1`\El3d!:]6+bOmZ;_I[1`\El3d!:]6+bOmZ;_I[1`\El3d!:]6+bOmZ;5<`=QTCn)'g$t$fr9Omn
!3``h"ojU=pp$O@'/'0SOe&-#!<D&#KZh+..DfZr1U?VY3rf8nNc<[\5=N*KIn"U1FpA"tf+BY4p8>Ro
KmDh6X-$58Nnr$[&2!q_mqq4KHo,@`pI@S]p&;*MbCn(;c_qC-!!)I^\?)6(-=#tg7YPd^!-iG!AaR\s
iH"rS.YJ00^j?_ICM/r][r>LKN6;.f0G,T2!2!]lKmlNkm!e)rcPS!6`cm(D!!!ViE[0Nu^*?k_!/LoI
)[Vl$*T7&"5X`-;8@XWI#T!I@,/WG2n+9M+a*3sI9ORu&s(B*,%3p[;+Gf^J[<"ico-H%=TRijjg&XsY
&K)sjia5%6\"qD'>Q=cV9Xlo)NGd\V!5N3`V'0Pp$PrdC2A7\Pdmj)@n%J8jC&]"MJA8WLnA"p]La]6i
2QDH=!!'!Ob<aTH[;Z-H+I-n+B\KC#/cYmI&hXD`+4Z5B-f+t+^jV&:OEa^GoT>\hJ)X0&!8NnX$&LU+
9HVrEpF"f#!5O#>OcXfdan1^dG^n^I!!(f@(^Z$XQ+T#\?[FF+!5"4"O\`YKjBm6e!!'V;Q_e#80)u!a
$(%JpHS5@!]*T:rr'LGa.\;KU'9)?Crt#0\$K9E@FSGTd!!#t(QNj4scT_O4TL-.F(u5/l5Wn!,!!'qN
/cYl:4Q->A!5oO'!!#8Hi;ruZ`"Oa'!'i[*!WW5='.s7b5Wn!,!!'qN/cYl:4Q->A!5oO'!!#8Hi;ruZ
`;:-S!0+P3$3~>
%%EndBinary
grestore
np
grestore
162.795 58.6302 mo
59.3345 58.6302 li
59.3345 212.56 li
162.795 212.56 li
162.795 58.6302 li
cp
0 0 0 0 cmyk
f
70.5003 178.958 mo
70.5003 183.709 72.7506 184.436 74.4785 184.436 cv
76.5017 184.436 78.4788 183.709 78.4788 178.685 cv
78.4788 171.911 li
78.4788 171.501 78.6611 171.411 78.9109 171.365 cv
79.5929 171.297 79.82 171.274 80.2748 171.274 cv
80.2294 172.161 80.2067 173.502 80.2067 175.388 cv
80.2067 178.594 li
80.2067 185.141 76.7742 185.913 74.2281 185.913 cv
70.8183 185.913 68.4999 184.254 68.4999 178.98 cv
68.4999 174.365 li
68.4999 172.843 68.4771 171.911 68.4317 171.456 cv
68.7497 171.388 69.7496 171.274 70.1136 171.274 cv
70.4549 171.274 70.5003 171.411 70.5003 172.501 cv
70.5003 178.958 li
cp
true sop
0 0 0 1 nzopmsc
f
89.9131 179.526 mo
89.9131 177.753 89.1175 176.889 87.799 176.889 cv
86.6395 176.889 85.7532 177.639 85.2302 178.253 cv
85.2302 185.05 li
85.2302 185.505 85.1393 185.573 84.7526 185.618 cv
84.253 185.709 83.7527 185.686 83.2524 185.709 cv
83.2979 184.891 83.3206 183.55 83.3206 181.526 cv
83.3206 177.662 li
83.3206 176.844 83.207 176.457 82.9345 176.253 cv
82.9345 176.162 li
83.1162 175.798 83.7527 175.366 84.1621 175.366 cv
84.8662 175.366 85.0712 176.412 85.1393 177.048 cv
86.0257 176.162 87.2533 175.366 88.5037 175.366 cv
91.118 175.366 91.8227 177.321 91.8227 179.503 cv
91.8227 182.686 li
91.8227 184.004 91.8681 184.959 91.9135 185.527 cv
91.4366 185.595 90.8221 185.709 90.231 185.709 cv
89.9812 185.709 89.8903 185.595 89.8903 185.391 cv
89.9131 179.526 li
cp
f
96.8914 185.027 mo
96.8914 185.437 96.7551 185.55 96.4138 185.595 cv
96.1186 185.664 95.5502 185.686 94.9136 185.709 cv
94.9363 184.777 94.9818 183.458 94.9818 182.14 cv
94.9818 178.276 li
94.9818 176.889 94.9363 176.184 94.8909 175.707 cv
95.277 175.571 96.2321 175.48 96.5734 175.48 cv
96.8005 175.48 96.8914 175.594 96.8914 176.889 cv
96.8914 185.027 li
cp
95.9823 170.751 mo
96.5961 170.751 97.0049 171.229 97.0049 171.865 cv
97.0049 172.479 96.5734 173.024 95.9142 173.024 cv
95.3003 173.024 94.8228 172.638 94.8228 171.911 cv
94.8228 171.115 95.482 170.751 95.959 170.751 cv
95.9823 170.751 li
cp
f
100.324 175.366 mo
100.528 175.366 100.664 175.525 100.801 175.843 cv
101.256 177.048 102.597 180.663 103.484 183.345 cv
104.257 181.208 105.779 177.367 106.461 175.366 cv
106.848 175.366 107.257 175.457 107.666 175.661 cv
108.008 175.821 107.939 176.139 107.598 177.025 cv
106.689 179.276 105.802 181.39 104.37 184.914 cv
104.188 185.323 104.052 185.527 103.779 185.618 cv
103.393 185.754 102.915 185.823 102.574 185.846 cv
102.097 184.436 101.415 182.754 100.051 179.163 cv
99.3239 177.276 98.9826 176.503 98.6874 175.866 cv
99.0507 175.639 99.8917 175.366 100.301 175.366 cv
100.324 175.366 li
cp
f
113.418 176.548 mo
112.281 176.548 111.167 177.571 110.985 179.481 cv
112.622 179.526 114.668 179.503 115.077 179.481 cv
115.372 179.458 115.554 179.276 115.554 179.003 cv
115.576 177.617 114.872 176.548 113.44 176.548 cv
113.418 176.548 li
cp
116.94 183.799 mo
116.94 184.505 116.464 185.141 116.077 185.346 cv
115.713 185.55 114.759 185.846 113.85 185.846 cv
110.69 185.846 108.962 183.958 108.962 180.776 cv
108.962 177.912 110.69 175.366 113.69 175.366 cv
116.282 175.366 117.395 177.298 117.441 179.14 cv
117.441 179.367 117.418 179.662 117.373 179.845 cv
117.305 180.231 116.214 180.504 115.441 180.64 cv
114.827 180.708 112.553 180.754 110.917 180.685 cv
110.94 183.004 112.349 184.323 114.349 184.323 cv
115.372 184.323 116.486 183.982 116.895 183.754 cv
116.94 183.799 li
cp
f
119.032 176.207 mo
119.191 175.866 119.851 175.366 120.26 175.366 cv
120.919 175.366 121.328 176.184 121.328 177.639 cv
122.033 176.139 123.033 175.366 124.078 175.366 cv
124.533 175.366 124.943 175.571 125.102 175.729 cv
125.192 175.934 125.169 176.343 125.011 176.616 cv
124.943 176.957 124.601 177.321 124.352 177.344 cv
124.011 177.207 123.738 177.162 123.442 177.162 cv
122.942 177.162 122.192 177.617 121.715 178.73 cv
121.555 179.14 121.464 179.458 121.464 179.958 cv
121.464 181.413 121.464 184.186 121.464 185.072 cv
121.464 185.414 121.396 185.573 121.055 185.618 cv
120.51 185.686 119.965 185.709 119.487 185.709 cv
119.532 184.891 119.555 183.55 119.555 181.526 cv
119.555 177.73 li
119.555 177.025 119.441 176.548 119.032 176.298 cv
119.032 176.207 li
cp
f
129.693 175.366 mo
130.535 175.366 131.444 175.616 131.989 176.139 cv
132.035 176.548 131.762 177.184 131.239 177.162 cv
130.762 176.912 130.125 176.73 129.58 176.73 cv
128.693 176.73 128.034 177.23 128.034 178.026 cv
128.034 178.685 128.489 179.071 129.011 179.367 cv
129.626 179.685 130.375 180.026 131.034 180.412 cv
132.057 180.981 132.512 181.8 132.512 182.709 cv
132.512 184.868 130.625 185.846 128.807 185.846 cv
127.716 185.846 126.761 185.505 126.284 185.095 cv
126.079 184.914 125.988 184.664 126.034 184.436 cv
126.079 184.118 126.238 183.777 126.511 183.664 cv
127.17 184.118 128.102 184.459 128.944 184.459 cv
130.08 184.459 130.671 183.868 130.671 183.095 cv
130.671 182.527 130.352 182.117 129.557 181.708 cv
128.944 181.39 128.398 181.14 127.852 180.844 cv
126.898 180.321 126.238 179.526 126.238 178.344 cv
126.238 176.503 127.852 175.366 129.67 175.366 cv
129.693 175.366 li
cp
f
136.535 185.027 mo
136.535 185.437 136.399 185.55 136.058 185.595 cv
135.763 185.664 135.194 185.686 134.558 185.709 cv
134.58 184.777 134.626 183.458 134.626 182.14 cv
134.626 178.276 li
134.626 176.889 134.58 176.184 134.535 175.707 cv
134.922 175.571 135.876 175.48 136.217 175.48 cv
136.445 175.48 136.535 175.594 136.535 176.889 cv
136.535 185.027 li
cp
135.627 170.751 mo
136.24 170.751 136.65 171.229 136.65 171.865 cv
136.65 172.479 136.217 173.024 135.558 173.024 cv
134.945 173.024 134.467 172.638 134.467 171.911 cv
134.467 171.115 135.127 170.751 135.604 170.751 cv
135.627 170.751 li
cp
f
145.082 183.958 mo
145.196 184.413 145.128 184.914 144.719 185.232 cv
144.264 185.618 143.378 185.846 142.582 185.846 cv
140.559 185.846 139.763 184.572 139.763 182.845 cv
139.763 181.89 139.763 179.822 139.763 176.957 cv
138.991 176.957 138.672 176.707 138.672 176.48 cv
138.899 176.003 140.309 174.707 140.65 174.412 cv
140.945 174.161 141.263 173.934 141.809 173.843 cv
141.763 174.571 141.718 175.139 141.718 175.616 cv
142.627 175.616 144.991 175.616 145.332 175.616 cv
145.105 176.753 144.605 176.844 144.196 176.866 cv
143.423 176.935 143.332 176.935 141.696 176.935 cv
141.582 179.253 141.604 181.708 141.696 182.686 cv
141.809 184.05 142.559 184.391 143.332 184.391 cv
143.991 184.391 144.65 184.186 145.037 183.913 cv
145.082 183.958 li
cp
f
151.584 170.069 mo
151.993 170.069 152.516 170.342 152.789 170.592 cv
152.926 170.729 152.926 170.819 152.72 171.047 cv
151.812 172.07 150.925 173.32 150.288 174.184 cv
150.038 174.116 149.856 173.957 149.697 173.82 cv
149.584 173.706 149.561 173.571 149.72 173.206 cv
150.106 172.297 151.152 170.069 151.561 170.069 cv
151.584 170.069 li
cp
150.629 176.548 mo
149.493 176.548 148.379 177.571 148.197 179.481 cv
149.833 179.526 151.879 179.503 152.289 179.481 cv
152.584 179.458 152.766 179.276 152.766 179.003 cv
152.789 177.617 152.084 176.548 150.652 176.548 cv
150.629 176.548 li
cp
154.153 183.799 mo
154.153 184.505 153.675 185.141 153.289 185.346 cv
152.926 185.55 151.971 185.846 151.061 185.846 cv
147.902 185.846 146.174 183.958 146.174 180.776 cv
146.174 177.912 147.902 175.366 150.903 175.366 cv
153.493 175.366 154.608 177.298 154.653 179.14 cv
154.653 179.367 154.63 179.662 154.584 179.845 cv
154.516 180.231 153.425 180.504 152.653 180.64 cv
152.039 180.708 149.766 180.754 148.129 180.685 cv
148.151 183.004 149.561 184.323 151.561 184.323 cv
152.584 184.323 153.698 183.982 154.107 183.754 cv
154.153 183.799 li
cp
f
73.7726 195.47 mo
73.5076 195.301 72.9588 195.168 72.2964 195.168 cv
70.8769 195.168 69.3061 196.152 69.3061 198.518 cv
69.3061 200.411 70.4795 201.546 71.9746 201.546 cv
72.5803 201.546 73.3184 201.3 73.7726 200.922 cv
73.7726 195.47 li
cp
73.7726 191.856 mo
73.7726 190.853 73.7347 190.398 73.6969 190.02 cv
74.0375 189.888 74.7946 189.755 75.0785 189.755 cv
75.2866 189.755 75.3623 189.85 75.3623 191.004 cv
75.3623 200.676 li
75.3623 201.565 75.6084 201.773 76.1762 201.868 cv
76.1762 201.925 li
76.1004 202.341 75.703 202.833 75.3056 202.833 cv
74.435 202.833 74.0565 202.322 73.9429 201.754 cv
73.1859 202.36 72.0693 202.833 71.2744 202.833 cv
69.2682 202.833 67.6028 201.395 67.6028 198.726 cv
67.6028 196.001 69.6278 194.108 72.3153 194.108 cv
73.0723 194.108 73.5455 194.298 73.7726 194.354 cv
73.7726 191.856 li
cp
f
81.1343 195.092 mo
80.188 195.092 79.2607 195.943 79.1093 197.534 cv
80.4719 197.572 82.1753 197.553 82.5159 197.534 cv
82.762 197.515 82.9134 197.364 82.9134 197.136 cv
82.9323 195.982 82.3456 195.092 81.1533 195.092 cv
81.1343 195.092 li
cp
84.0678 201.13 mo
84.0678 201.716 83.6704 202.246 83.3486 202.417 cv
83.0458 202.587 82.251 202.833 81.4939 202.833 cv
78.8632 202.833 77.4249 201.262 77.4249 198.613 cv
77.4249 196.228 78.8632 194.108 81.3614 194.108 cv
83.519 194.108 84.4464 195.717 84.4842 197.25 cv
84.4842 197.439 84.4653 197.685 84.4274 197.837 cv
84.3706 198.158 83.4622 198.385 82.8187 198.499 cv
82.3077 198.556 80.4152 198.594 79.0525 198.537 cv
79.0714 200.467 80.2448 201.565 81.9103 201.565 cv
82.762 201.565 83.6893 201.281 84.03 201.092 cv
84.0678 201.13 li
cp
f
93.2658 191.932 mo
89.6509 191.932 li
89.3671 191.932 89.2346 191.818 89.3671 191.515 cv
89.5185 191.118 89.7456 190.834 89.897 190.683 cv
90.143 190.758 90.5783 190.777 92.698 190.777 cv
99.057 190.777 li
99.0381 191.344 98.6596 191.818 98.3946 191.932 cv
94.9312 191.932 li
94.9312 200.259 li
94.9312 201.565 94.9691 202.19 94.988 202.568 cv
94.5716 202.663 94.0228 202.719 93.5686 202.719 cv
93.3604 202.719 93.2658 202.663 93.2658 202.379 cv
93.2658 191.932 li
cp
f
102.18 195.149 mo
100.912 195.149 99.814 196.285 99.814 198.348 cv
99.814 200.657 100.987 201.792 102.369 201.792 cv
103.505 201.792 104.678 200.846 104.678 198.518 cv
104.678 196.777 103.921 195.149 102.199 195.149 cv
102.18 195.149 li
cp
102.35 194.108 mo
105 194.108 106.381 195.982 106.381 198.385 cv
106.381 200.903 104.773 202.833 102.218 202.833 cv
99.4544 202.833 98.1107 200.789 98.1107 198.556 cv
98.1107 196.058 99.8329 194.108 102.331 194.108 cv
102.35 194.108 li
cp
f
108.33 196.531 mo
108.33 195.376 108.292 194.809 108.255 194.392 cv
108.576 194.298 109.314 194.203 109.636 194.203 cv
109.844 194.203 109.901 194.298 109.901 195.376 cv
109.92 196.625 109.92 198.026 109.92 199.256 cv
109.92 201.262 110.942 201.527 111.775 201.527 cv
112.664 201.527 113.421 200.959 113.724 200.562 cv
113.724 194.96 li
113.724 194.506 113.781 194.411 114.027 194.316 cv
114.538 194.26 114.955 194.203 115.371 194.203 cv
115.371 194.619 115.314 195.963 115.314 197.61 cv
115.314 200.657 li
115.314 201.584 115.541 201.773 116.072 201.868 cv
116.072 201.944 li
116.052 202.303 115.617 202.833 115.219 202.833 cv
114.424 202.833 113.989 202.303 113.894 201.489 cv
113.346 202.076 112.721 202.398 112.324 202.587 cv
111.945 202.738 111.548 202.833 111.112 202.833 cv
109.201 202.833 108.33 201.565 108.33 199.71 cv
108.33 196.531 li
cp
f
118.039 192.102 mo
118.039 190.986 118.001 190.398 117.963 190.02 cv
118.341 189.85 119.08 189.755 119.364 189.755 cv
119.572 189.755 119.629 189.85 119.629 190.986 cv
119.629 200.108 li
119.629 201.035 119.667 202.057 119.704 202.587 cv
119.364 202.682 118.512 202.738 118.285 202.738 cv
118.115 202.738 118.039 202.682 118.039 202.492 cv
118.039 192.102 li
cp
f
125.685 195.149 mo
124.417 195.149 123.319 196.285 123.319 198.348 cv
123.319 200.657 124.492 201.792 125.874 201.792 cv
127.009 201.792 128.183 200.846 128.183 198.518 cv
128.183 196.777 127.426 195.149 125.703 195.149 cv
125.685 195.149 li
cp
125.855 194.108 mo
128.505 194.108 129.886 195.982 129.886 198.385 cv
129.886 200.903 128.277 202.833 125.722 202.833 cv
122.96 202.833 121.616 200.789 121.616 198.556 cv
121.616 196.058 123.338 194.108 125.836 194.108 cv
125.855 194.108 li
cp
f
131.835 196.531 mo
131.835 195.376 131.797 194.809 131.76 194.392 cv
132.081 194.298 132.819 194.203 133.141 194.203 cv
133.349 194.203 133.406 194.298 133.406 195.376 cv
133.425 196.625 133.425 198.026 133.425 199.256 cv
133.425 201.262 134.447 201.527 135.28 201.527 cv
136.169 201.527 136.926 200.959 137.229 200.562 cv
137.229 194.96 li
137.229 194.506 137.286 194.411 137.531 194.316 cv
138.043 194.26 138.459 194.203 138.876 194.203 cv
138.876 194.619 138.818 195.963 138.818 197.61 cv
138.818 200.657 li
138.818 201.584 139.046 201.773 139.575 201.868 cv
139.575 201.944 li
139.557 202.303 139.122 202.833 138.724 202.833 cv
137.93 202.833 137.494 202.303 137.399 201.489 cv
136.851 202.076 136.226 202.398 135.829 202.587 cv
135.45 202.738 135.052 202.833 134.618 202.833 cv
132.706 202.833 131.835 201.565 131.835 199.71 cv
131.835 196.531 li
cp
f
143.966 194.108 mo
144.667 194.108 145.424 194.316 145.878 194.752 cv
145.916 195.092 145.689 195.622 145.253 195.603 cv
144.856 195.395 144.326 195.244 143.872 195.244 cv
143.133 195.244 142.585 195.66 142.585 196.323 cv
142.585 196.871 142.964 197.193 143.398 197.439 cv
143.91 197.704 144.535 197.988 145.083 198.31 cv
145.935 198.783 146.313 199.464 146.313 200.221 cv
146.313 202.019 144.743 202.833 143.228 202.833 cv
142.32 202.833 141.525 202.549 141.127 202.208 cv
140.957 202.057 140.882 201.849 140.919 201.66 cv
140.957 201.395 141.09 201.111 141.317 201.016 cv
141.865 201.395 142.642 201.679 143.342 201.679 cv
144.288 201.679 144.78 201.186 144.78 200.543 cv
144.78 200.07 144.515 199.729 143.853 199.389 cv
143.342 199.124 142.887 198.915 142.434 198.669 cv
141.638 198.234 141.09 197.572 141.09 196.588 cv
141.09 195.055 142.434 194.108 143.947 194.108 cv
143.966 194.108 li
cp
f
151.309 195.092 mo
150.363 195.092 149.436 195.943 149.284 197.534 cv
150.647 197.572 152.35 197.553 152.691 197.534 cv
152.937 197.515 153.088 197.364 153.088 197.136 cv
153.108 195.982 152.521 195.092 151.328 195.092 cv
151.309 195.092 li
cp
154.243 201.13 mo
154.243 201.716 153.846 202.246 153.524 202.417 cv
153.221 202.587 152.427 202.833 151.669 202.833 cv
149.038 202.833 147.6 201.262 147.6 198.613 cv
147.6 196.228 149.038 194.108 151.537 194.108 cv
153.694 194.108 154.621 195.717 154.66 197.25 cv
154.66 197.439 154.64 197.685 154.603 197.837 cv
154.546 198.158 153.637 198.385 152.994 198.499 cv
152.483 198.556 150.59 198.594 149.228 198.537 cv
149.247 200.467 150.42 201.565 152.085 201.565 cv
152.937 201.565 153.864 201.281 154.205 201.092 cv
154.243 201.13 li
cp
f
67.898 70.5518 mo
112.306 71.312 li
112.529 115.548 li
65.9348 114.405 li
67.898 70.5518 li
cp
false sop
0 .8 1 0 cmyk
f
114.074 70.277 mo
156.195 71.6138 li
154.712 111.967 li
115.317 113.483 li
114.074 70.277 li
cp
.05 .96 .76 .22 cmyk
f
152.331 114.998 mo
114.647 115.102 li
112.64 161.568 li
153.744 161.986 li
152.331 114.998 li
cp
.05 .84 1 .27 cmyk
f
67.696 116.946 mo
111.845 118.714 li
110.285 159.646 li
68.6088 160.908 li
67.696 116.946 li
cp
0 .96 1 0 cmyk
f
102.589 89.3384 mo
102.601 89.2816 102.649 89.2583 102.63 89.1712 cv
102.506 89.1712 li
102.495 89.2659 102.516 89.3283 102.589 89.3384 cv
cp
103.006 88.6697 mo
103.047 88.9448 102.629 88.9441 102.798 89.2129 cv
103.088 89.0154 103.41 88.8501 103.55 88.5025 cv
103.377 88.4167 103.266 88.7075 103.006 88.6697 cv
cp
103.55 88.4186 mo
103.592 88.5025 li
103.703 88.5151 103.729 88.4445 103.717 88.3353 cv
103.639 88.341 103.577 88.3631 103.55 88.4186 cv
cp
102.255 88.5864 mo
102.229 88.6993 102.08 88.6905 102.088 88.8369 cv
102.675 88.7277 102.981 88.3379 103.425 88.0843 cv
103.305 87.7865 102.904 87.7708 102.63 87.6256 cv
102.32 87.8464 101.971 88.1821 102.255 88.5864 cv
cp
103.466 87.0818 mo
103.392 87.4382 103.762 87.4162 103.592 87.7505 cv
103.905 87.883 104.088 88.1461 104.218 88.4609 cv
103.88 89.069 103.026 89.163 102.757 89.8393 cv
103.228 90.0759 103.704 90.3232 104.26 90.0904 cv
104.24 89.9567 104.045 89.6469 104.344 89.6721 cv
104.353 89.4955 104.222 89.4601 104.177 89.3384 cv
104.123 88.3877 104.774 88.9656 105.18 89.129 cv
105.18 89.2672 105.25 89.3378 105.221 89.5056 cv
105.119 89.6116 105.131 89.4179 104.97 89.4633 cv
104.837 89.6084 104.747 89.7977 104.469 89.7983 cv
104.329 90.0153 104.379 90.1838 104.302 90.4241 cv
104.157 90.455 104.081 90.426 104.009 90.5919 cv
103.731 90.5219 103.547 90.491 103.383 90.6758 cv
102.863 90.4847 102.314 90.3226 101.878 90.0488 cv
101.88 89.8551 101.856 89.6349 101.962 89.5472 cv
101.933 89.4374 101.766 89.4646 101.711 89.3801 cv
101.725 89.2538 101.665 89.0552 101.795 89.0457 cv
101.581 89.0072 101.68 88.6949 101.795 88.6281 cv
101.634 88.4287 101.573 88.0218 101.962 88.0433 cv
101.992 87.9152 101.92 87.8912 101.92 87.7922 cv
102.094 87.548 102.212 87.2484 102.673 87.2906 cv
102.954 87.1733 103.146 86.8169 103.466 87.0818 cv
cp
true sop
0 0 0 1 nzopmsc
ef
113.995 88.1681 mo
114.192 88.3208 114.417 88.4451 114.705 88.2936 cv
114.82 87.6527 114.153 87.8723 113.995 88.1681 cv
cp
115.039 87.7089 mo
114.886 87.9795 115.028 88.1896 115.039 88.5025 cv
114.847 88.534 114.713 88.6223 114.663 88.7946 cv
114.506 88.6438 114.395 88.77 114.245 88.8369 cv
114.197 88.7876 114.198 88.6892 114.204 88.5864 cv
113.951 88.6211 113.778 88.6387 113.577 88.5447 cv
113.542 88.3429 113.656 88.2886 113.785 88.252 cv
113.617 87.9435 113.983 87.8212 113.912 87.5833 cv
114.362 87.5107 114.757 87.4799 115.039 87.7089 cv
cp
ef
115.625 89.0876 mo
115.842 89.2668 116.032 89.2605 116.126 88.9621 cv
115.929 88.9362 115.864 88.7791 115.666 88.7532 cv
115.698 88.9109 115.615 88.9532 115.625 89.0876 cv
cp
115.999 88.3356 mo
116.208 88.5325 116.296 88.8479 116.418 89.1293 cv
116.355 89.3873 116.057 89.4094 115.999 89.6724 cv
115.558 89.7033 115.456 89.3481 115.039 89.2548 cv
115.139 89.0068 115.162 88.9557 115.08 88.6694 cv
115.397 88.5085 115.649 88.371 115.999 88.3356 cv
cp
ef
116.836 89.5885 mo
116.748 89.6888 116.917 89.786 116.877 89.9651 cv
117.012 90.0327 117.103 89.9847 117.254 89.9651 cv
117.22 89.8201 117.315 89.8043 117.296 89.6724 cv
117.1 89.6384 117.017 89.5343 116.836 89.5885 cv
cp
117.379 89.2964 mo
117.47 89.4977 117.592 89.6686 117.756 89.798 cv
117.619 89.9141 117.52 89.9324 117.587 90.1733 cv
117.075 90.4294 116.401 90.3052 116.25 89.798 cv
116.44 89.3646 116.831 89.1665 117.379 89.2964 cv
cp
ef
118.047 90.4242 mo
118.078 90.616 118.168 90.751 118.339 90.8008 cv
118.461 90.7819 118.531 90.7125 118.548 90.592 cv
118.427 90.5611 118.401 90.4343 118.339 90.3409 cv
118.29 90.4166 118.121 90.3738 118.047 90.4242 cv
cp
118.423 90.2987 mo
118.565 90.3302 118.492 90.1454 118.591 90.1321 cv
118.715 90.1479 118.796 90.2047 118.842 90.2987 cv
118.853 90.4356 118.679 90.3876 118.674 90.5081 cv
118.68 90.5851 118.816 90.534 118.842 90.592 cv
118.865 91.0469 118.653 91.2664 118.131 91.1762 cv
118.018 90.9523 117.682 90.7857 117.629 90.6337 cv
117.744 90.2003 118.138 89.7877 118.423 90.2987 cv
cp
ef
122.267 91.9705 mo
122.389 92.0576 122.579 92.0759 122.726 92.1378 cv
122.788 91.8128 122.308 91.5996 122.267 91.9705 cv
cp
122.517 91.6362 mo
122.714 91.5927 122.629 91.8311 122.81 91.8027 cv
122.756 91.6191 122.88 91.2267 122.517 91.218 cv
122.558 91.3851 122.558 91.469 122.517 91.6362 cv
cp
121.975 91.3435 mo
122.084 91.382 122.277 91.37 122.309 91.218 cv
122.117 91.1996 122.033 91.1656 121.975 91.3435 cv
cp
122.893 91.0514 mo
122.931 91.1259 123.01 91.1573 122.977 91.3018 cv
123.061 91.3018 123.145 91.3018 123.228 91.3018 cv
123.295 91.8002 122.829 91.7662 122.893 92.2626 cv
122.404 92.6405 121.956 92.1535 121.515 91.9283 cv
121.591 91.7787 121.544 91.5889 121.472 91.469 cv
121.746 91.0173 122.305 90.746 122.893 91.0514 cv
cp
ef
125.318 91.0091 mo
125.383 91.194 125.41 91.4179 125.65 91.4274 cv
125.693 91.5529 125.681 91.7302 125.818 91.7611 cv
125.361 92.5106 124.492 92.609 123.813 93.0985 cv
123.783 93.226 123.856 93.2505 123.855 93.349 cv
123.757 93.3483 123.732 93.4209 123.604 93.3906 cv
123.753 93.6316 123.892 93.8827 124.064 94.101 cv
124.396 94.0391 124.458 94.1041 124.815 94.0177 cv
124.933 93.9943 124.933 93.8562 124.983 93.7672 cv
125.255 93.8032 125.307 93.6171 125.401 93.4745 cv
125.474 93.4985 125.645 93.4241 125.65 93.5162 cv
125.929 93.3206 126.026 92.9453 126.32 92.7642 cv
126.314 92.6872 126.178 92.7383 126.153 92.6809 cv
126.153 92.5554 126.153 92.4298 126.153 92.3043 cv
126.319 92.2557 126.42 92.2368 126.404 92.0961 cv
126.713 92.3011 126.611 92.8298 126.779 93.0985 cv
126.983 93.1824 127.296 92.9938 127.239 93.3906 cv
126.58 93.3023 126.528 93.8215 126.026 93.8922 cv
125.923 93.9262 125.968 94.1123 125.902 94.1843 cv
125.304 94.1243 124.959 94.7968 124.899 95.2712 cv
124.815 95.3122 li
124.603 95.0826 124.545 94.7609 124.399 94.5186 cv
124.27 94.3054 124.075 94.3029 123.688 94.1426 cv
123.658 94.0152 123.759 94.0196 123.73 93.8922 cv
123.599 93.8719 123.635 94.0202 123.478 93.9754 cv
123.406 93.7957 123.019 93.5073 123.312 93.349 cv
123.15 93.1313 123.21 92.9515 123.102 92.6809 cv
123.164 92.6323 123.208 92.6323 123.27 92.6809 cv
123.632 91.9744 124.607 92.0298 125.401 91.9283 cv
125.49 91.7264 125.357 91.4703 124.983 91.2596 cv
124.867 91.3523 124.989 91.558 124.983 91.6779 cv
124.876 91.7371 124.746 91.7756 124.733 91.9283 cv
124.606 91.9156 124.582 91.799 124.399 91.845 cv
124.152 91.5037 124.41 91.2426 124.565 90.9675 cv
124.837 91.0539 125.071 90.8262 125.318 91.0091 cv
cp
ef
119.342 91.6776 mo
119.523 91.7628 119.785 91.7136 119.718 91.4271 cv
119.569 91.4517 119.516 91.3785 119.426 91.3432 cv
119.331 91.4568 119.283 91.4927 119.342 91.6776 cv
cp
119.845 90.9672 mo
119.862 91.0549 119.815 91.0782 119.802 91.1344 cv
119.905 91.1294 120.004 91.1281 120.053 91.1767 cv
119.974 91.5338 120.24 91.5464 120.221 91.8448 cv
120.012 91.9028 119.802 91.9564 119.802 92.2208 cv
119.337 92.1841 119.074 91.9464 118.842 91.6776 cv
118.833 91.5867 118.875 91.5451 118.966 91.5527 cv
118.979 91.4429 118.805 91.5198 118.842 91.3855 cv
118.842 91.2473 118.961 91.2259 119.092 91.2177 cv
119.095 90.8871 119.516 90.9729 119.845 90.9672 cv
cp
ef
120.221 92.6808 mo
120.451 92.7307 120.459 92.6802 120.763 92.7225 cv
120.854 92.4904 120.583 92.4866 120.596 92.221 cv
120.513 92.221 120.429 92.221 120.345 92.221 cv
120.411 92.4828 120.175 92.4399 120.221 92.6808 cv
cp
120.972 92.0121 mo
120.937 92.2241 121.161 92.1825 121.14 92.4714 cv
121.008 92.6184 120.941 92.831 120.846 93.0146 cv
120.282 93.2241 119.931 92.884 119.845 92.3882 cv
120.024 91.9958 120.54 91.9484 120.972 92.0121 cv
cp
ef
114.579 93.9755 mo
114.405 93.9832 114.374 93.8456 114.246 93.8083 cv
113.869 93.9062 113.464 93.9743 113.242 94.2266 cv
113.077 94.197 113.146 93.9333 112.867 94.0172 cv
113.019 93.7251 113.541 93.8015 113.66 93.4747 cv
114.07 93.3586 114.909 93.5283 114.579 93.9755 cv
cp
ef
114.496 94.3517 mo
114.501 94.5656 114.299 94.5738 114.246 94.7277 cv
113.892 94.717 113.666 94.6691 113.409 94.5605 cv
113.406 94.3757 113.585 94.3732 113.66 94.2684 cv
114.031 94.399 114.318 93.8679 114.496 94.3517 cv
cp
ef
122.309 94.5605 mo
122.394 94.6419 122.446 94.758 122.517 94.8526 cv
122.67 94.8394 122.749 94.7498 122.893 94.7277 cv
122.904 94.6053 122.8 94.5996 122.81 94.4772 cv
122.563 94.5176 122.435 94.4375 122.309 94.5605 cv
cp
123.102 94.3101 mo
123.15 94.669 122.913 95.0911 122.643 95.2709 cv
122.176 95.2236 122.063 94.821 121.85 94.5189 cv
122.001 94.1423 122.802 93.9277 123.102 94.3101 cv
cp
ef
123.312 95.8136 mo
123.436 95.8136 123.564 95.8136 123.688 95.8136 cv
123.723 95.6256 123.591 95.6055 123.564 95.4799 cv
123.465 95.4799 123.367 95.4799 123.27 95.4799 cv
123.241 95.6345 123.342 95.6591 123.312 95.8136 cv
cp
124.023 95.3127 mo
124.008 95.4099 123.979 95.4925 123.896 95.5215 cv
124.186 95.6957 124.022 96.095 123.813 96.2319 cv
123.545 96.1127 123.318 96.2382 123.061 96.1896 cv
122.536 95.4963 123.493 94.6251 124.023 95.3127 cv
cp
ef
95.3192 96.3569 mo
95.4075 96.4402 95.55 96.3431 95.5696 96.2314 cv
95.4428 96.2302 95.357 96.2699 95.3192 96.3569 cv
cp
97.9517 95.2712 mo
97.9789 95.4372 97.8987 95.4965 97.8262 95.5634 cv
98.1586 95.6069 98.1486 95.9923 98.5788 95.9387 cv
98.5851 96.1141 98.7542 96.1261 98.7037 96.3569 cv
98.5081 96.3147 98.5649 96.5248 98.3694 96.4825 cv
98.3694 96.5942 98.3694 96.7052 98.3694 96.8168 cv
97.9568 97.0717 97.8874 97.6723 97.6584 98.112 cv
97.6552 98.2413 97.7902 98.2313 97.7423 98.4041 cv
97.6691 98.4413 97.6369 98.5208 97.4918 98.4874 cv
97.5663 98.1783 97.3259 98.1802 97.1997 98.0698 cv
97.3366 97.8881 96.9909 97.5531 96.7815 97.4849 cv
96.6566 97.5272 li
96.2522 97.3279 95.7828 97.0333 95.3614 96.8585 cv
95.1078 96.9948 94.7085 96.9998 94.4833 96.9001 cv
94.4858 96.6226 94.793 96.6522 94.9022 96.4825 cv
94.8788 96.4219 94.9501 96.2661 94.8593 96.2737 cv
94.8826 96.1576 95.0208 96.157 95.1103 96.1065 cv
95.087 96.0188 95.0075 95.9873 95.0271 95.8554 cv
95.0649 95.8232 95.1211 95.8107 95.1942 95.8138 cv
95.1703 95.6617 95.1248 95.61 95.2352 95.4794 cv
95.5229 95.4157 95.4346 95.7274 95.6535 95.7305 cv
95.7412 96.2585 96.2831 96.1229 96.4888 96.5664 cv
96.5821 96.4692 96.6515 96.5803 96.7815 96.5664 cv
96.8338 96.6661 96.9342 96.7197 96.9083 96.9001 cv
97.1732 96.7349 97.2767 97.049 97.4918 97.0673 cv
97.9246 96.9266 97.5978 96.4995 97.8262 96.2314 cv
97.8098 96.0813 97.6193 96.1046 97.5341 96.0226 cv
97.6079 95.8365 97.5133 95.639 97.5341 95.3123 cv
97.613 95.2385 97.8098 95.282 97.9517 95.2712 cv
cp
ef
124.064 97.0254 mo
124.182 97.0563 124.549 97.0223 124.691 96.9421 cv
124.599 96.9062 124.543 96.8393 124.565 96.691 cv
124.266 96.5384 124.193 96.8797 124.064 97.0254 cv
cp
124.983 96.4822 mo
124.779 96.5895 125.011 96.8368 124.983 96.9421 cv
124.893 97.2797 124.381 97.4809 124.023 97.2343 cv
124.141 97.0444 123.935 97.0444 123.813 96.9838 cv
123.815 96.8235 124.001 96.6993 123.772 96.6494 cv
123.89 96.2753 124.716 96.1038 124.983 96.4822 cv
cp
ef
129.788 97.1927 mo
129.974 97.2842 130.122 97.4148 130.164 97.652 cv
130.08 97.6943 130.017 97.7567 129.955 97.8192 cv
129.986 97.9271 130.057 97.9965 130.164 98.028 cv
130.09 98.1144 130.102 98.3668 130.289 98.3214 cv
130.179 98.7156 130.889 98.7333 131 98.9055 cv
131.017 99.0058 130.923 98.9963 130.957 99.1143 cv
130.526 99.1074 130.266 98.9951 129.996 98.8639 cv
129.542 98.8544 129.428 99.1862 129.077 99.2815 cv
128.954 99.2828 129.023 99.4789 128.953 99.5326 cv
128.788 99.5862 128.851 99.4108 128.744 99.407 cv
128.662 99.5061 128.628 99.6833 128.325 99.6581 cv
128.414 99.9515 128.016 100.276 127.698 100.159 cv
127.713 99.9136 127.811 99.8978 127.698 99.6991 cv
127.799 99.7161 127.79 99.6228 127.908 99.6581 cv
127.871 99.4985 127.759 99.4171 127.574 99.407 cv
127.751 99.1049 127.24 99.1641 127.323 98.8216 cv
128.072 99.0115 128.822 98.4241 129.453 98.1119 cv
129.375 97.7516 129.708 97.5258 129.788 97.1927 cv
cp
ef
124.94 98.1534 mo
125.079 98.2462 125.23 98.2254 125.401 98.1534 cv
125.389 98.0115 125.432 97.8147 125.358 97.7358 cv
125.129 97.7844 124.946 97.8784 124.94 98.1534 cv
cp
125.442 97.2766 mo
125.409 97.462 125.482 97.5435 125.65 97.527 cv
125.67 97.85 125.826 98.1137 125.694 98.3623 cv
125.517 98.3597 125.508 98.4336 125.401 98.5717 cv
124.934 98.6335 124.798 98.3661 124.647 98.1118 cv
124.672 98.0103 124.685 97.8973 124.815 97.903 cv
124.809 97.785 124.617 97.8506 124.647 97.6942 cv
124.89 97.575 125.006 97.2545 125.442 97.2766 cv
cp
ef
125.61 99.1564 mo
125.615 99.4442 125.903 99.4996 126.11 99.3653 cv
126.142 99.2076 126.06 99.1653 126.069 99.0316 cv
125.861 99.0183 125.671 99.024 125.61 99.1564 cv
cp
126.404 98.9054 mo
126.412 99.3098 126.374 99.4088 126.278 99.699 cv
125.949 99.6637 125.835 99.7286 125.567 99.7829 cv
125.38 99.5943 125.172 99.2517 125.274 98.9054 cv
125.787 98.783 126.04 98.4663 126.404 98.9054 cv
cp
ef
126.32 100.409 mo
126.422 100.446 126.5 100.507 126.487 100.66 cv
126.687 100.707 126.664 100.53 126.863 100.577 cv
126.924 100.493 126.82 100.43 126.947 100.368 cv
126.734 100.176 126.462 100.093 126.32 100.409 cv
cp
127.239 100.159 mo
127.207 100.295 127.009 100.536 127.239 100.577 cv
127.028 100.784 126.866 101.038 126.487 101.078 cv
126.39 101.022 126.422 100.836 126.361 100.744 cv
126.278 100.744 126.194 100.744 126.11 100.744 cv
126.091 100.599 125.907 100.466 125.902 100.368 cv
125.887 100.241 126.038 100.281 126.11 100.242 cv
126.127 100.142 126.035 100.151 126.069 100.034 cv
126.475 99.6619 126.852 99.9774 127.239 100.159 cv
cp
ef
113.41 100.159 mo
113.599 100.151 113.648 100.283 113.66 100.452 cv
113.55 100.451 113.422 100.467 113.368 100.41 cv
113.367 100.312 113.44 100.286 113.41 100.159 cv
cp
ef
113.493 100.535 mo
113.706 100.78 113.722 101.298 113.66 101.663 cv
113.624 101.879 113.447 102.084 113.409 102.29 cv
113.392 102.386 113.455 102.45 113.452 102.54 cv
113.431 102.998 113.058 103.234 112.867 103.502 cv
112.891 103.588 112.948 103.644 113.033 103.668 cv
112.664 103.841 112.504 104.224 112.281 104.546 cv
112.033 104.396 112.165 103.872 112.491 103.919 cv
112.417 103.608 112.71 103.443 112.616 103.251 cv
112.644 103.125 112.859 103.187 112.909 103.084 cv
112.875 102.689 113.211 102.337 113.16 101.788 cv
113.285 101.788 li
113.282 101.61 113.228 101.482 113.201 101.329 cv
113.625 101.236 113.265 100.691 113.493 100.535 cv
cp
ef
127.698 101.329 mo
127.713 101.497 127.503 101.438 127.448 101.538 cv
127.32 101.503 127.347 101.42 127.197 101.497 cv
127.114 101.666 127.125 101.783 126.989 101.956 cv
127.093 102.17 127.71 101.874 127.698 102.206 cv
127.474 102.192 127.437 102.363 127.323 102.457 cv
127.103 102.397 126.991 102.231 126.779 102.165 cv
126.603 101.609 126.989 100.787 127.698 101.329 cv
cp
ef
114.12 101.705 mo
114.303 101.713 114.322 102.004 114.204 102.081 cv
114.115 102.002 113.984 101.967 113.996 101.788 cv
114.028 101.753 114.108 101.764 114.12 101.705 cv
cp
ef
127.908 104.086 mo
127.917 104.271 127.937 104.446 128.116 104.462 cv
128.206 104.412 128.316 104.383 128.368 104.295 cv
128.274 104.29 128.349 104.118 128.325 104.045 cv
128.222 103.988 128.056 104.002 127.908 104.086 cv
cp
127.574 102.958 mo
127.556 103.17 127.664 103.257 127.782 103.334 cv
127.879 103.25 128.042 103.232 128.074 103.084 cv
127.992 102.819 127.83 102.906 127.574 102.958 cv
cp
127.992 102.457 mo
128.04 102.7 128.121 102.912 128.325 103 cv
128.29 103.348 127.973 103.366 128.2 103.668 cv
128.321 103.674 128.474 103.645 128.534 103.71 cv
128.439 103.726 128.479 103.877 128.408 103.919 cv
128.945 104.387 128.281 104.952 127.657 104.755 cv
127.881 104.453 127.433 104.458 127.489 104.086 cv
127.587 104.03 127.677 103.968 127.741 103.877 cv
127.654 103.81 127.742 103.569 127.657 103.501 cv
127.392 103.643 127.224 103.435 127.155 103.25 cv
127.183 103.153 127.295 103.139 127.323 103.042 cv
127.261 102.992 127.259 102.884 127.197 102.833 cv
127.432 102.678 127.566 102.423 127.992 102.457 cv
cp
ef
109.942 102.749 mo
109.933 102.984 109.88 103.176 110.15 103.293 cv
110.174 103.749 110.108 103.938 109.691 104.003 cv
109.825 103.604 109.911 102.922 109.482 102.791 cv
109.471 102.724 109.521 102.719 109.524 102.665 cv
109.657 102.564 109.85 102.681 109.942 102.749 cv
cp
ef
96.1545 103.334 mo
96.1545 103.398 95.8454 103.426 95.9053 103.293 cv
95.9779 103.214 96.1242 103.25 96.1545 103.334 cv
cp
ef
110.361 104.253 mo
110.332 104.393 110.23 104.458 110.193 104.588 cv
110.029 104.612 109.951 104.552 109.858 104.504 cv
110.067 104.419 109.922 104.272 109.901 104.086 cv
110.097 103.952 110.253 104.164 110.361 104.253 cv
cp
ef
109.44 104.295 mo
109.434 104.373 109.414 104.435 109.358 104.462 cv
109.371 104.643 109.674 104.536 109.734 104.672 cv
109.77 104.806 109.597 104.73 109.566 104.797 cv
109.578 104.882 109.677 104.88 109.734 104.922 cv
109.7 105 109.663 105.075 109.65 105.173 cv
109.117 105.162 109.111 104.624 108.981 104.212 cv
109.175 104.093 109.307 104.16 109.44 104.295 cv
cp
ef
128.284 105.381 mo
128.195 105.407 128.245 105.639 128.284 105.674 cv
128.441 105.746 128.754 105.694 128.744 105.381 cv
128.624 105.364 128.414 105.335 128.284 105.381 cv
cp
128.993 105.172 mo
128.997 105.336 128.943 105.537 128.993 105.674 cv
128.629 106.169 127.891 106.051 127.698 105.465 cv
127.734 105.264 127.984 105.278 127.992 105.048 cv
128.39 104.912 128.642 104.857 128.993 105.172 cv
cp
ef
128.617 106.677 mo
128.567 106.816 128.621 106.807 128.576 107.011 cv
128.66 107.053 li
128.807 106.979 129.008 106.956 129.077 106.802 cv
128.951 106.668 128.848 106.62 128.617 106.677 cv
cp
129.285 106.468 mo
129.319 106.84 129.373 107.011 129.285 107.262 cv
129.128 107.283 129.001 107.337 128.91 107.429 cv
128.479 107.391 128.322 107.108 128.074 106.802 cv
128.232 106.472 128.554 106.178 128.953 106.217 cv
129.049 106.315 129.075 106.485 129.285 106.468 cv
cp
ef
101.002 116.495 mo
101.007 116.615 101.18 116.567 101.168 116.703 cv
101.093 116.843 100.846 117.206 101.043 117.455 cv
100.767 117.807 101.154 118.234 100.876 118.542 cv
101.079 118.52 101.024 118.756 101.253 118.709 cv
101.365 118.415 101.111 118.192 101.335 117.957 cv
101.299 117.884 101.204 117.835 101.295 117.747 cv
101.217 117.742 101.154 117.72 101.127 117.665 cv
101.171 117.333 101.319 117.105 101.419 116.83 cv
101.058 116.708 101.729 116.12 101.127 116.077 cv
101.075 116.207 101.075 116.388 101.002 116.495 cv
cp
101.419 119.085 mo
101.324 119.239 101.732 119.371 101.545 119.628 cv
101.611 119.771 101.804 119.786 101.838 119.962 cv
101.761 119.967 101.749 119.911 101.671 119.92 cv
101.531 120.328 101.682 120.767 101.419 121.049 cv
101.424 121.156 101.582 121.108 101.587 121.216 cv
101.187 122.338 101.77 123.465 101.168 124.307 cv
101.292 124.404 101.486 124.646 101.295 124.809 cv
101.428 125.04 101.435 125.363 101.253 125.519 cv
101.271 125.711 101.402 125.787 101.419 125.978 cv
101.316 126 101.271 126.081 101.211 126.146 cv
101.213 126.439 101.409 126.991 101.084 126.981 cv
101.091 127.142 101.254 127.145 101.295 127.273 cv
101.283 127.43 101.197 127.511 101.127 127.608 cv
101.107 127.739 101.232 127.726 101.295 127.776 cv
101.281 127.971 101.183 128.082 101.084 128.193 cv
101.096 128.343 101.231 128.518 101.127 128.653 cv
100.729 128.49 101.181 127.842 100.835 127.608 cv
101.042 127.39 100.753 126.959 101.002 126.605 cv
100.855 126.516 100.927 126.205 100.792 126.104 cv
100.846 126.033 100.879 125.939 101.002 125.937 cv
100.848 125.811 100.839 125.73 100.751 125.603 cv
100.658 125.58 100.691 125.682 100.626 125.687 cv
100.61 125.828 100.698 125.864 100.751 125.937 cv
100.608 126.224 100.513 126.701 100.792 126.981 cv
100.765 127.079 100.654 127.093 100.626 127.191 cv
100.603 127.338 100.775 127.293 100.751 127.441 cv
100.701 127.627 100.493 127.656 100.416 127.817 cv
100.399 127.932 100.572 127.856 100.584 127.942 cv
100.421 128.121 100.471 128.323 100.626 128.486 cv
100.623 128.608 100.53 128.641 100.459 128.694 cv
100.577 128.771 100.623 128.911 100.459 128.986 cv
100.488 129.096 100.655 129.069 100.708 129.155 cv
100.879 129.074 100.837 128.781 101.168 128.862 cv
101.274 129.054 101.168 129.236 101.043 129.322 cv
101.007 129.51 101.251 129.418 101.253 129.572 cv
101.217 129.757 100.887 129.704 100.792 129.613 cv
100.748 129.458 100.896 129.494 100.876 129.363 cv
100.729 129.126 100.483 129.341 100.291 129.404 cv
100.225 129.013 100.129 128.763 100.291 128.401 cv
100.1 128.137 100.099 127.537 100.332 127.315 cv
100.248 126.833 100.384 126.002 100.208 125.436 cv
100.274 124.937 100.75 125.326 101.002 125.269 cv
101.007 125.137 100.894 125.125 100.792 125.101 cv
100.759 124.818 100.969 124.704 100.876 124.433 cv
100.611 124.545 100.731 124.964 100.543 125.059 cv
100.325 124.927 100.219 124.387 100.459 124.265 cv
100.187 124.135 100.478 123.886 100.5 123.681 cv
100.364 123.517 100.409 123.396 100.332 123.221 cv
100.453 123.155 100.65 123.081 100.751 123.221 cv
100.643 123.582 100.946 123.955 100.626 124.182 cv
100.654 124.401 100.779 124.273 100.876 124.392 cv
100.949 124.354 101.006 124.297 101.043 124.224 cv
101.013 124.074 100.891 124.013 100.919 123.806 cv
100.983 123.756 101.081 123.673 101.168 123.764 cv
101.214 123.566 101.062 123.565 101.002 123.471 cv
101.075 123.239 101.185 123.042 101.295 122.845 cv
101.277 122.751 101.071 122.844 101.043 122.762 cv
101.136 122.475 101.349 122.045 101.002 121.884 cv
101 121.757 101.212 121.844 101.211 121.717 cv
101.135 121.68 101.08 121.625 101.043 121.55 cv
101.115 121.382 101.204 121.4 101.084 121.216 cv
101.145 121.15 101.19 121.07 101.295 121.049 cv
101.195 120.558 101.116 120.138 101.295 119.67 cv
101.106 119.621 101.12 119.371 101.127 119.127 cv
101.164 119.094 101.221 119.082 101.295 119.085 cv
101.353 118.522 100.695 118.869 100.876 119.294 cv
100.884 119.386 100.841 119.427 100.751 119.419 cv
101.047 119.815 100.974 120.395 100.667 120.841 cv
100.9 121.087 100.913 121.765 100.751 122.01 cv
100.74 122.174 100.93 122.137 100.919 122.302 cv
100.869 122.364 100.813 122.42 100.751 122.469 cv
100.723 122.707 100.919 122.719 100.96 122.886 cv
100.941 123.035 100.707 122.969 100.626 123.054 cv
100.466 122.707 100.425 122.085 100.626 121.759 cv
100.599 121.646 100.45 121.656 100.459 121.508 cv
100.725 121.331 100.389 121.138 100.375 120.881 cv
100.529 120.882 100.56 120.759 100.626 120.673 cv
100.58 120.494 100.625 120.227 100.5 120.13 cv
100.815 119.866 100.281 119.3 100.667 119.085 cv
100.597 118.388 100.537 117.698 100.667 117.08 cv
100.675 116.905 100.462 116.95 100.5 116.745 cv
100.548 116.71 100.612 116.69 100.708 116.703 cv
100.782 116.043 100.612 115.365 100.667 114.74 cv
100.755 114.758 100.778 114.712 100.835 114.699 cv
100.825 114.525 100.603 114.568 100.626 114.364 cv
100.619 114.232 100.732 114.22 100.835 114.196 cv
100.666 113.901 100.723 113.794 100.876 113.528 cv
100.871 113.364 100.695 113.401 100.792 113.236 cv
100.921 113.206 100.916 113.308 101.043 113.278 cv
100.661 112.855 100.852 112.093 100.751 111.481 cv
100.83 111.464 100.827 111.362 100.96 111.397 cv
100.818 110.807 101.019 110.401 100.835 109.768 cv
100.961 109.712 101.075 109.62 101.211 109.685 cv
101.118 110.006 101.426 110.554 101.127 110.813 cv
101.168 110.953 101.295 111.007 101.335 111.147 cv
101.234 111.372 101.129 111.724 101.378 111.857 cv
101.299 111.932 101.101 111.887 100.96 111.899 cv
100.96 112.024 li
100.987 112.149 101.049 111.985 101.127 112.024 cv
101.052 112.287 101.31 112.665 101.084 112.86 cv
101.171 113.224 101.325 113.934 101.084 114.28 cv
101.066 114.412 101.198 114.39 101.211 114.489 cv
101.12 114.594 101.076 114.745 101.002 114.866 cv
100.964 114.999 101.139 114.922 101.127 115.033 cv
101.118 115.191 101.031 115.271 100.919 115.325 cv
101.057 115.516 101.105 115.631 101.043 115.951 cv
101.577 115.992 101.057 115.193 101.462 115.158 cv
101.368 114.882 101.544 114.597 101.295 114.489 cv
101.399 114.427 101.452 114.313 101.503 114.196 cv
101.477 114.042 101.385 113.952 101.335 113.821 cv
101.366 113.657 101.499 113.594 101.545 113.444 cv
101.442 113.379 101.424 113.231 101.295 113.195 cv
101.503 113.069 101.398 112.629 101.711 112.609 cv
101.684 112.47 101.534 112.453 101.462 112.359 cv
101.478 112.154 101.575 112.096 101.503 111.899 cv
101.607 111.906 101.633 111.834 101.671 111.774 cv
101.546 111.647 101.558 111.384 101.419 111.273 cv
101.833 110.678 101.262 110.097 101.545 109.518 cv
101.535 109.402 101.412 109.399 101.378 109.308 cv
101.456 109.165 101.619 109.105 101.671 108.933 cv
101.624 108.773 101.407 108.471 101.711 108.432 cv
101.61 108.281 101.619 108.154 101.462 108.139 cv
101.453 107.992 101.602 108.001 101.628 107.888 cv
101.66 107.731 101.468 107.797 101.462 107.679 cv
101.473 107.511 101.618 107.475 101.711 107.387 cv
101.732 107.256 101.66 107.217 101.587 107.178 cv
101.61 107.034 101.764 107.021 101.795 106.885 cv
101.807 106.721 101.616 106.757 101.628 106.593 cv
101.623 106.436 101.71 106.368 101.838 106.343 cv
102.039 106.59 102.127 106.935 101.92 107.261 cv
102.192 107.429 101.834 107.969 102.13 108.097 cv
102.055 108.217 101.905 108.489 102.13 108.557 cv
102.006 108.869 101.853 109.241 102.046 109.643 cv
101.845 109.744 101.847 110.082 102.046 110.186 cv
101.959 110.252 101.973 110.419 101.879 110.479 cv
102.115 110.83 101.922 111.29 102.046 111.732 cv
101.668 111.958 102.05 112.332 101.795 112.651 cv
101.786 112.743 101.911 112.794 101.92 112.86 cv
101.941 113.007 101.806 112.997 101.795 113.111 cv
101.778 113.298 102.011 113.412 102.004 113.654 cv
101.93 113.692 101.935 113.808 101.838 113.821 cv
101.886 113.897 101.946 113.962 102.004 114.03 cv
101.961 114.14 101.839 114.171 101.795 114.28 cv
101.776 114.411 101.901 114.398 101.962 114.447 cv
101.782 114.678 101.856 114.81 101.838 115.075 cv
101.768 115.075 101.698 115.075 101.628 115.075 cv
101.963 115.342 101.605 115.825 101.879 116.203 cv
101.717 116.526 101.855 116.932 101.545 117.163 cv
101.729 117.319 101.915 117.9 101.628 118.04 cv
101.929 118.392 101.521 118.742 101.671 119.21 cv
101.545 119.209 101.416 119.215 101.419 119.085 cv
cp
ef
132.252 108.808 mo
132.259 108.981 132.267 109.156 132.17 109.225 cv
132.244 109.352 132.333 109.071 132.419 109.225 cv
132.334 109.875 133.068 110.016 133.589 109.894 cv
133.443 109.603 133.752 109.14 133.381 108.933 cv
133.386 108.829 133.359 108.759 133.297 108.724 cv
133.199 108.846 133.054 108.663 133.005 108.598 cv
132.835 108.832 132.473 108.69 132.252 108.808 cv
cp
133.84 107.554 mo
133.739 107.787 133.655 108.038 133.464 108.181 cv
133.54 108.578 133.807 108.784 134.049 109.016 cv
133.987 109.441 134.172 109.742 133.881 109.977 cv
133.894 110.063 134.066 109.988 134.049 110.103 cv
133.969 110.271 133.783 110.451 133.631 110.52 cv
133.338 110.604 li
133.172 110.437 li
133.059 110.45 132.999 110.692 132.838 110.604 cv
132.575 110.449 132.489 110.116 132.17 110.018 cv
131.967 109.997 132.033 110.245 131.959 110.353 cv
131.721 110.434 131.501 110.535 131.375 110.729 cv
131.003 110.599 130.769 110.916 130.54 111.063 cv
130.27 111.056 130.284 110.763 130.289 110.478 cv
130.533 110.403 130.615 110.165 130.748 109.977 cv
131.249 109.995 131.401 109.809 131.751 109.685 cv
131.781 109.557 131.709 109.532 131.709 109.434 cv
132.079 109.319 131.854 109.169 131.793 108.891 cv
131.324 108.936 131.04 109.13 130.581 109.267 cv
130.507 109.188 130.404 109.137 130.33 109.058 cv
130.669 108.863 130.588 108.365 130.372 108.097 cv
130.244 108.068 130.292 108.068 130.164 108.097 cv
130.116 107.904 130.048 107.848 130.164 107.679 cv
130.723 107.811 131.131 108.302 131.709 107.972 cv
131.82 108.015 131.965 108.021 132.127 108.014 cv
132.441 107.701 133.281 107.914 133.381 107.387 cv
133.385 107.251 133.143 107.254 133.255 107.137 cv
133.616 106.952 133.573 107.507 133.84 107.554 cv
cp
ef
129.203 108.223 mo
129.187 108.015 129.032 107.948 128.785 107.972 cv
128.752 108.235 129.028 108.293 129.203 108.223 cv
cp
129.077 107.554 mo
129.16 107.662 129.283 107.775 129.453 107.679 cv
129.552 107.86 129.706 107.985 129.745 108.223 cv
129.618 108.192 129.593 108.265 129.496 108.264 cv
129.475 108.396 129.57 108.411 129.537 108.556 cv
129.06 108.781 128.789 108.738 128.368 108.474 cv
128.365 108.318 128.523 108.323 128.576 108.223 cv
128.562 108.166 128.471 108.188 128.408 108.181 cv
128.475 107.814 128.645 107.554 129.077 107.554 cv
cp
ef
114.496 108.473 mo
114.494 108.64 114.29 108.601 114.246 108.724 cv
114.202 108.919 114.413 108.863 114.371 109.058 cv
114.287 109.1 li
114.132 109.129 114.183 108.953 114.12 108.891 cv
113.908 108.932 113.848 109.145 113.911 109.35 cv
113.554 109.358 113.665 109.095 113.576 108.891 cv
113.734 108.77 114.045 108.801 114.036 108.514 cv
114.2 108.489 114.354 108.405 114.496 108.473 cv
cp
ef
108.605 108.64 mo
108.674 108.64 108.744 108.64 108.814 108.64 cv
108.872 108.792 108.532 108.84 108.605 108.64 cv
cp
ef
112.617 109.685 mo
112.718 109.606 112.837 109.543 112.992 109.518 cv
113.176 109.812 113.325 110.166 113.66 110.144 cv
113.916 110.127 113.955 109.73 114.245 109.852 cv
114.261 110.007 114.076 109.961 114.12 110.144 cv
114.178 110.275 114.326 110.087 114.371 110.186 cv
114.408 110.451 114.105 110.337 114.245 110.603 cv
114.008 110.603 113.998 110.83 113.828 110.896 cv
113.635 110.837 113.536 110.776 113.41 110.938 cv
112.924 110.586 112.22 110.284 112.198 109.601 cv
112.285 109.578 112.316 109.498 112.449 109.518 cv
112.579 109.498 112.567 109.622 112.617 109.685 cv
cp
ef
129.285 110.813 mo
129.412 110.826 129.436 110.942 129.62 110.896 cv
129.658 110.808 129.747 110.773 129.745 110.646 cv
129.668 110.404 129.191 110.432 129.285 110.813 cv
cp
129.955 110.395 mo
130.027 110.562 129.926 110.643 130.038 110.771 cv
130.032 111.001 129.711 110.917 129.788 111.23 cv
129.383 111.333 129.296 111.093 128.993 111.105 cv
128.97 110.873 128.981 110.728 128.785 110.603 cv
129.012 110.142 129.496 110.182 129.955 110.395 cv
cp
ef
110.861 111.063 mo
110.942 111.386 110.421 111.376 110.402 111.147 cv
110.583 111.147 110.666 111.05 110.861 111.063 cv
cp
ef
114.287 111.231 mo
114.229 111.284 114.261 111.428 114.204 111.481 cv
114.12 111.481 114.036 111.481 113.952 111.481 cv
113.983 111.311 113.818 111.337 113.869 111.147 cv
113.962 111.085 114.169 111.188 114.287 111.231 cv
cp
ef
113.66 111.356 mo
113.664 111.512 113.707 111.475 113.66 111.606 cv
113.963 111.624 114.079 111.643 114.371 111.606 cv
114.39 111.764 114.289 111.803 114.246 111.899 cv
113.996 111.894 113.962 111.858 113.785 111.941 cv
113.499 111.741 113.256 111.496 112.95 111.314 cv
113.121 110.957 113.356 111.37 113.66 111.356 cv
cp
ef
130.122 111.69 mo
130.082 111.872 130.024 112.038 129.745 111.983 cv
129.691 111.769 129.62 111.657 129.369 111.732 cv
129.305 111.793 129.282 111.895 129.285 112.025 cv
129.475 112.248 129.843 112.035 130.08 112.191 cv
129.985 112.526 129.455 112.413 129.119 112.401 cv
128.908 112.295 129.14 111.992 128.91 111.941 cv
128.938 111.76 129.103 111.717 129.119 111.524 cv
129.389 111.503 129.55 111.209 129.788 111.397 cv
129.785 111.61 129.92 111.683 130.122 111.69 cv
cp
ef
129.328 113.444 mo
129.535 113.458 129.711 113.438 129.871 113.403 cv
129.896 112.895 129.294 112.98 129.328 113.444 cv
cp
130.248 113.487 mo
129.95 113.688 129.685 113.858 129.244 113.821 cv
129.151 113.538 128.857 113.28 129.035 112.86 cv
129.517 112.53 130.324 112.767 130.248 113.487 cv
cp
ef
129.369 114.699 mo
129.485 114.752 129.453 114.924 129.411 115.032 cv
129.567 115.022 129.645 114.932 129.788 114.908 cv
129.81 114.74 129.81 114.781 129.788 114.615 cv
129.586 114.586 129.482 114.566 129.369 114.699 cv
cp
129.496 114.071 mo
129.723 114.042 129.708 114.322 129.913 114.197 cv
130.492 114.564 130.025 115.617 129.285 115.241 cv
129.255 115.091 129.155 114.983 128.993 115.074 cv
129.038 114.891 128.853 114.937 128.869 114.781 cv
129.138 114.665 129.065 114.333 129.244 114.197 cv
129.336 114.127 129.547 114.318 129.496 114.071 cv
cp
ef
93.7315 114.28 mo
93.8955 114.34 94.0974 114.361 94.0659 114.615 cv
94.0299 114.759 93.835 114.746 93.8154 114.907 cv
93.9977 115.212 94.216 115.482 94.4009 115.784 cv
94.2886 115.812 94.1397 115.802 94.0659 115.868 cv
93.4344 115.267 92.3367 115.542 91.5595 115.409 cv
91.3399 115.661 90.9936 115.789 90.8075 116.077 cv
90.74 116.14 90.598 116.041 90.4321 116.077 cv
90.4624 115.747 90.4479 115.543 90.6403 115.325 cv
90.4731 115.126 90.6056 114.778 90.3892 114.573 cv
90.634 113.857 91.4201 115.099 91.9348 114.489 cv
92.4824 114.466 93.365 114.602 93.7315 114.28 cv
cp
ef
129.244 117.456 mo
129.255 117.578 129.15 117.584 129.161 117.706 cv
129.336 117.685 129.472 117.702 129.496 117.832 cv
129.597 117.771 129.643 117.416 129.453 117.414 cv
129.46 117.504 129.305 117.433 129.244 117.456 cv
cp
129.369 116.495 mo
129.61 116.484 129.636 116.432 129.829 116.328 cv
129.752 116.112 129.516 116.056 129.369 115.909 cv
129.267 116.086 129.197 116.366 129.369 116.495 cv
cp
129.996 115.826 mo
130.072 116.187 130.016 116.271 130.038 116.578 cv
129.898 116.674 129.822 116.836 129.537 116.787 cv
129.535 117.14 129.725 117.269 129.913 117.33 cv
129.92 117.492 129.88 117.697 129.996 117.748 cv
129.866 118.158 129.152 118.302 128.869 117.915 cv
128.848 117.784 128.928 117.752 128.953 117.665 cv
128.948 117.558 128.812 117.581 128.701 117.581 cv
128.809 117.242 129.151 117.14 129.369 116.913 cv
129.331 116.728 129.089 116.747 128.953 116.662 cv
128.925 116.509 129.043 116.502 129.035 116.369 cv
129.001 116.28 128.853 116.302 128.785 116.244 cv
128.742 116.099 128.976 116.022 128.827 115.909 cv
129.061 115.74 129.282 115.557 129.704 115.576 cv
129.809 115.652 129.803 115.839 129.996 115.826 cv
cp
ef
95.4029 117.581 mo
95.7108 117.626 95.8521 117.574 95.9455 117.33 cv
95.8041 117.005 95.2042 117.134 95.4029 117.581 cv
cp
96.1972 117.038 mo
96.1353 117.125 96.0445 117.308 96.1972 117.372 cv
96.1303 117.59 95.9556 117.655 95.989 117.874 cv
95.9543 117.909 95.8742 117.898 95.8628 117.957 cv
94.3279 117.953 95.4162 115.907 96.1972 117.038 cv
cp
ef
115.791 117.539 mo
115.724 117.747 115.76 117.986 115.917 118.082 cv
115.886 118.177 115.791 118.207 115.707 118.249 cv
116.052 118.491 116.281 118.845 116.544 119.168 cv
116.228 119.443 116.141 118.976 115.999 118.834 cv
115.796 118.628 115.526 118.648 115.457 118.333 cv
115.433 118.219 115.499 118.14 115.373 117.999 cv
115.453 117.921 115.479 117.994 115.583 117.999 cv
115.57 117.774 115.344 117.764 115.331 117.539 cv
115.434 117.458 115.681 117.499 115.791 117.539 cv
cp
ef
96.1133 118.542 mo
95.7347 118.476 95.5404 118.538 95.3619 118.751 cv
95.4963 118.825 95.6559 118.875 95.8212 118.918 cv
96.0092 118.926 96.0212 118.755 96.1133 118.668 cv
96.2476 118.63 96.1997 118.775 96.2811 118.792 cv
96.1902 118.926 96.0861 119.044 96.071 119.252 cv
95.5083 119.245 95.0269 119.155 95.1102 118.5 cv
95.2616 118.428 95.3543 118.299 95.4868 118.208 cv
95.8521 118.258 96.57 118.052 96.1133 118.542 cv
cp
ef
114.496 119.002 mo
114.532 119.246 114.421 119.343 114.371 119.503 cv
114.197 119.481 114.297 119.187 114.204 119.085 cv
114.21 118.965 114.378 119.009 114.496 119.002 cv
cp
ef
128.034 122.72 mo
128.217 122.786 128.285 123.095 128.576 122.929 cv
128.504 122.689 128.753 122.771 128.744 122.594 cv
128.48 122.48 128.192 122.534 128.034 122.72 cv
cp
128.869 120.38 mo
129.111 120.399 129.257 120.324 129.285 120.13 cv
129.119 119.854 128.677 120.007 128.869 120.38 cv
cp
129.328 119.67 mo
129.381 119.812 129.534 119.854 129.663 119.92 cv
129.437 120.134 129.544 120.291 129.62 120.589 cv
129.468 120.688 129.362 120.7 129.203 120.715 cv
129.018 120.903 129.171 121.203 128.91 121.341 cv
128.715 121.182 128.528 121.359 128.368 121.466 cv
128.554 121.503 128.605 121.674 128.827 121.676 cv
128.929 121.568 128.965 121.395 129.119 121.341 cv
129.18 121.434 129.224 121.542 129.203 121.717 cv
129.077 121.759 128.993 121.842 128.953 121.968 cv
128.756 121.984 128.715 121.894 128.617 122.01 cv
128.781 122.261 129.001 122.496 128.869 122.929 cv
128.678 122.961 128.595 123.102 128.534 123.263 cv
128.274 123.287 128.098 123.225 127.949 123.138 cv
128.01 122.909 127.843 122.91 127.782 122.804 cv
127.814 122.393 128.053 122.004 128.493 122.135 cv
128.583 122.142 128.51 121.987 128.534 121.926 cv
128.465 121.78 128.322 121.925 128.242 121.759 cv
128.205 121.625 128.306 121.628 128.368 121.592 cv
128.259 121.561 128.226 121.455 128.116 121.424 cv
128.2 121.286 128.284 121.147 128.325 120.965 cv
128.597 120.958 128.831 120.913 128.993 120.798 cv
128.887 120.696 128.656 120.717 128.534 120.631 cv
128.248 119.901 128.642 119.539 129.328 119.67 cv
cp
ef
115.917 120.38 mo
115.83 120.537 115.917 120.659 116.042 120.715 cv
116.048 120.819 115.976 120.843 115.958 120.924 cv
116.177 121.095 116.197 121.464 116.46 121.592 cv
116.455 121.698 116.399 121.754 116.293 121.759 cv
115.859 121.622 115.954 120.957 115.457 120.881 cv
115.608 120.643 115.322 120.641 115.291 120.464 cv
115.424 120.358 115.778 120.356 115.917 120.38 cv
cp
ef
128.242 123.555 mo
128.308 123.762 128.577 123.892 128.408 124.099 cv
128.285 124.013 128.111 123.979 127.949 123.932 cv
127.805 123.9 127.897 124.101 127.741 124.056 cv
127.712 124.225 127.781 124.296 127.782 124.433 cv
128.195 124.538 128.192 124.305 128.45 124.182 cv
128.422 124.337 128.522 124.362 128.493 124.516 cv
128.245 124.534 128.307 124.607 128.242 124.809 cv
127.911 124.68 127.595 124.536 127.365 124.307 cv
127.345 124.177 127.455 124.174 127.574 124.182 cv
127.518 124.112 127.462 124.042 127.489 123.89 cv
127.792 123.831 127.8 123.476 128.242 123.555 cv
cp
ef
132.838 124.6 mo
132.842 124.791 132.803 125.024 132.922 125.102 cv
132.768 125.312 132.282 125.741 132.67 125.979 cv
132.371 126.134 132.457 126.481 132.127 126.647 cv
132.16 126.739 132.324 126.701 132.336 126.815 cv
132.325 127.054 132.238 127.218 132.044 127.274 cv
132.003 127.472 132.044 127.493 132.003 127.691 cv
131.666 127.912 131.119 127.643 130.79 127.483 cv
130.837 127.014 131.567 127.23 131.709 126.856 cv
131.576 126.217 130.941 126.302 130.248 126.271 cv
130.026 126.042 129.48 126.024 129.077 126.104 cv
129.022 125.979 129.035 125.784 129.035 125.603 cv
129.587 125.553 129.313 125.166 129.411 124.725 cv
130.318 125.039 130.789 125.547 131.751 125.77 cv
131.945 125.594 132.012 124.847 131.667 124.767 cv
131.485 123.965 132.425 124.663 132.838 124.6 cv
cp
ef
126.989 125.603 mo
127.145 125.793 127.596 125.923 127.782 125.728 cv
127.782 125.603 127.782 125.477 127.782 125.352 cv
127.489 125.408 127.361 125.627 126.989 125.603 cv
cp
127.114 125.059 mo
127.419 125.143 127.594 125.072 127.908 125.102 cv
127.856 125.309 128.015 125.473 128.2 125.561 cv
128.052 125.859 127.812 126.064 127.531 126.23 cv
127.098 126.223 126.771 125.905 126.779 125.477 cv
126.885 125.402 126.969 125.305 127.155 125.31 cv
127.186 125.182 127.084 125.188 127.114 125.059 cv
cp
ef
97.4501 128.569 mo
97.6583 128.569 97.6854 128.751 97.7845 128.862 cv
97.9762 128.812 98.1005 128.582 98.0356 128.402 cv
97.8589 128.325 97.4918 128.377 97.4501 128.569 cv
cp
97.2413 127.232 mo
97.2388 127.457 97.3429 127.576 97.4501 127.691 cv
97.6387 127.657 97.6987 127.495 97.7845 127.357 cv
97.6596 127.139 97.4438 126.957 97.2413 127.232 cv
cp
96.8243 126.063 mo
96.8111 126.168 97.0533 126.523 97.2823 126.396 cv
97.4533 126.149 97.0237 125.796 96.8243 126.063 cv
cp
97.3246 125.644 mo
97.3732 125.819 97.5403 125.875 97.6583 125.979 cv
97.5807 126.27 97.4867 126.445 97.4918 126.689 cv
97.8324 126.781 98.0356 127.009 98.1195 127.357 cv
98.0816 127.39 98.0242 127.402 97.9516 127.399 cv
97.9643 127.565 97.9542 127.708 97.8684 127.775 cv
98.1018 128.029 98.4494 128.168 98.4948 128.611 cv
98.438 128.818 98.1996 128.845 98.1195 129.029 cv
97.5794 129.122 97.4476 128.808 97.158 128.652 cv
97.2135 128.416 97.2558 128.166 97.4918 128.11 cv
97.3959 127.843 97.0117 127.865 96.8647 127.65 cv
96.9845 127.526 96.9511 127.32 96.8647 127.19 cv
96.977 127.079 97.0211 126.9 97.1164 126.772 cv
96.8779 126.719 96.7379 126.566 96.531 126.48 cv
96.4767 125.977 96.5701 125.515 97.3246 125.644 cv
cp
ef
126.821 126.94 mo
126.836 127.175 127.009 127.253 127.281 127.232 cv
127.358 127.077 127.376 126.915 127.281 126.772 cv
127.058 126.757 126.979 126.888 126.821 126.94 cv
cp
127.741 127.148 mo
127.402 127.331 126.954 127.788 126.613 127.315 cv
126.576 127.181 126.749 127.258 126.737 127.148 cv
126.669 127.08 126.562 127.186 126.404 127.148 cv
126.444 126.95 126.512 126.944 126.404 126.772 cv
126.734 126.563 127.204 126.265 127.574 126.647 cv
127.532 126.911 127.734 126.932 127.741 127.148 cv
cp
ef
126.32 128.36 mo
126.419 128.455 126.575 128.495 126.737 128.527 cv
126.818 128.426 126.765 128.192 126.779 128.026 cv
126.676 127.991 126.555 127.971 126.404 127.984 cv
126.401 128.156 126.359 128.162 126.32 128.36 cv
cp
126.194 127.65 mo
126.457 127.72 127.001 127.614 127.155 127.901 cv
127.139 128.038 127.033 128.084 126.989 128.193 cv
127.076 128.245 127.164 128.295 127.239 128.36 cv
127.177 128.495 127 128.511 126.989 128.695 cv
126.478 128.778 126.351 128.779 125.985 128.569 cv
126.074 128.444 126.127 128.134 125.945 128.067 cv
125.997 127.898 126.16 127.837 126.194 127.65 cv
cp
ef
125.734 129.404 mo
125.821 129.611 125.945 129.78 126.194 129.822 cv
126.301 129.734 126.262 129.5 126.361 129.404 cv
126.253 129.141 125.881 129.182 125.734 129.404 cv
cp
126.278 128.862 mo
126.515 129.147 126.735 129.622 126.445 129.99 cv
126.169 130.059 126.026 129.898 125.734 129.99 cv
125.6 129.776 125.41 129.618 125.442 129.238 cv
125.733 129.125 125.854 128.841 126.278 128.862 cv
cp
ef
98.6201 129.947 mo
98.6503 129.643 98.2605 129.618 98.0352 129.697 cv
97.9823 129.917 98.1217 129.945 98.1191 130.115 cv
98.309 130.082 98.41 129.961 98.6201 129.947 cv
98.516 130.119 98.6945 130.115 98.6611 130.323 cv
98.1444 130.599 98.0106 130.15 97.6586 130.031 cv
97.8025 129.88 97.74 129.78 97.7419 129.488 cv
98.0807 129.122 98.7734 129.217 98.9128 129.697 cv
98.8699 129.835 98.7967 129.944 98.6201 129.947 cv
cp
ef
124.607 131.786 mo
124.571 131.975 124.704 131.994 124.733 132.121 cv
124.902 132.094 124.994 131.993 125.234 132.037 cv
125.145 131.826 125.086 131.808 125.025 131.618 cv
124.953 131.742 124.696 131.679 124.607 131.786 cv
cp
125.107 130.658 mo
125.268 130.666 125.217 130.884 125.318 130.95 cv
125.456 130.95 125.596 130.95 125.734 130.95 cv
125.667 130.673 125.392 130.498 125.107 130.658 cv
cp
126.026 130.407 mo
125.968 130.633 126.14 130.629 126.153 130.783 cv
126.054 130.813 125.886 131.015 126.069 131.076 cv
126.003 131.232 125.753 131.205 125.734 131.41 cv
125.555 131.216 125.371 131.342 125.107 131.368 cv
125.21 131.615 125.588 131.585 125.526 131.994 cv
125.23 132.163 124.962 132.568 124.483 132.412 cv
124.516 132.031 124.306 131.853 124.272 131.494 cv
124.581 131.573 124.849 131.306 125.066 131.16 cv
125.075 131.025 124.917 131.057 124.858 130.992 cv
124.875 130.855 124.979 130.808 125.025 130.7 cv
124.998 130.644 124.936 130.622 124.858 130.616 cv
124.947 130.097 125.667 130.198 126.026 130.407 cv
cp
ef
120.554 137.385 mo
120.882 137.385 121.246 137.555 121.306 137.05 cv
120.961 136.776 120.71 137.202 120.554 137.385 cv
cp
121.557 136.34 mo
121.661 136.438 121.804 136.34 121.932 136.34 cv
121.932 136.215 121.932 136.089 121.932 135.964 cv
121.767 135.964 li
121.786 136.18 121.56 136.149 121.557 136.34 cv
cp
122.351 135.337 mo
122.461 135.377 122.708 135.418 122.81 135.337 cv
122.908 134.874 122.302 134.96 122.351 135.337 cv
cp
123.145 134.377 mo
123.468 134.332 123.595 134.426 123.772 134.168 cv
123.64 134.173 123.627 134.06 123.604 133.958 cv
123.507 133.958 123.409 133.958 123.312 133.958 cv
123.217 134.059 123.22 134.256 123.145 134.377 cv
cp
123.813 133.75 mo
123.882 133.75 123.953 133.75 124.023 133.75 cv
124.017 133.644 123.961 133.587 123.855 133.582 cv
123.858 133.656 123.846 133.712 123.813 133.75 cv
cp
123.98 132.914 mo
124.042 133.129 123.88 133.121 123.855 133.248 cv
123.998 133.286 124.134 133.332 124.189 133.457 cv
124.235 133.35 124.295 133.257 124.399 133.206 cv
124.355 133.051 124.309 133.097 124.355 132.914 cv
124.241 132.814 124.111 132.838 123.98 132.914 cv
cp
124.565 132.538 mo
124.59 132.721 124.698 132.767 124.565 132.914 cv
124.69 132.999 124.778 133.119 124.733 133.374 cv
124.654 133.407 124.579 133.444 124.483 133.457 cv
124.506 133.608 124.432 133.659 124.399 133.75 cv
124.254 133.787 124.099 133.813 123.98 133.875 cv
124.027 134.134 123.871 134.429 123.772 134.669 cv
123.494 134.572 123.507 134.796 123.186 134.752 cv
123.133 134.854 123.101 134.975 123.019 135.045 cv
123.451 135.65 122.623 135.984 122.142 136.006 cv
122.204 136.111 122.33 136.152 122.435 136.215 cv
122.275 136.626 121.843 136.765 121.515 137.008 cv
121.516 137.16 121.687 137.143 121.724 137.26 cv
121.515 137.649 121.173 137.832 120.637 137.802 cv
120.61 137.677 120.477 137.656 120.513 137.468 cv
120.425 137.377 120.377 137.504 120.305 137.426 cv
120.271 137.306 120.219 137.205 120.177 137.092 cv
120.509 137.019 120.626 136.732 120.805 136.507 cv
120.929 136.507 121.056 136.507 121.18 136.507 cv
121.228 136.428 121.285 136.361 121.306 136.257 cv
121.294 136.17 121.121 136.246 121.14 136.131 cv
121.257 135.776 121.532 135.577 122.017 135.588 cv
122.072 135.445 121.804 135.313 121.807 135.086 cv
121.856 135.052 121.92 135.031 122.017 135.045 cv
122.07 134.674 122.472 134.659 123.019 134.71 cv
123.159 134.666 123.021 134.584 123.102 134.461 cv
123.047 134.391 122.918 134.395 122.851 134.334 cv
122.921 134.031 122.908 133.832 123.061 133.666 cv
123.33 133.751 123.357 133.538 123.688 133.582 cv
123.557 133.275 123.535 132.78 123.73 132.58 cv
123.992 132.549 124.257 132.523 124.565 132.538 cv
cp
ef
127.657 134.042 mo
127.795 133.999 127.889 133.913 127.949 133.791 cv
127.822 133.823 127.899 133.647 127.741 133.709 cv
127.711 133.856 127.698 133.856 127.657 134.042 cv
cp
126.863 133.917 mo
127.022 133.883 126.991 134.04 127.114 134.042 cv
127.202 133.891 127.03 133.695 126.821 133.709 cv
126.804 133.809 126.898 133.799 126.863 133.917 cv
cp
126.696 134.544 mo
126.668 134.392 126.724 134.321 126.779 134.251 cv
126.766 134.056 126.563 134.049 126.445 133.958 cv
126.32 133.706 126.85 133.668 126.613 133.415 cv
126.795 133.138 127.083 132.967 127.448 132.872 cv
127.685 132.97 127.897 133.093 128.034 133.29 cv
127.976 133.451 128.052 133.71 128.2 133.791 cv
128.299 134.365 127.848 134.387 127.698 134.71 cv
127.206 134.81 127.107 134.598 126.696 134.544 cv
cp
ef
101.67 135.756 mo
101.92 135.978 102.262 135.718 102.255 135.421 cv
101.97 135.284 101.649 135.37 101.67 135.756 cv
cp
101.67 134.92 mo
101.801 135.012 102.022 135.015 102.255 135.002 cv
103.222 135.696 101.803 136.664 101.21 135.713 cv
101.345 135.43 101.588 135.256 101.67 134.92 cv
cp
ef
102.422 136.757 mo
102.552 136.846 102.723 136.988 102.923 136.883 cv
102.948 136.689 102.865 136.631 102.923 136.507 cv
102.692 136.4 102.542 136.627 102.422 136.757 cv
cp
103.299 136.424 mo
103.224 136.418 103.212 136.475 103.132 136.465 cv
103.123 136.641 103.291 136.641 103.299 136.8 cv
103.193 137.282 102.417 137.455 102.171 136.883 cv
102.2 136.716 102.277 136.599 102.255 136.381 cv
102.507 136.121 103.147 136.047 103.299 136.424 cv
cp
ef
103.425 137.593 mo
103.47 137.743 103.581 137.828 103.801 137.802 cv
103.903 137.729 103.9 137.55 103.842 137.426 cv
103.627 137.385 103.483 137.391 103.425 137.593 cv
cp
103.55 137.008 mo
103.654 137.044 103.774 137.063 103.926 137.05 cv
103.99 137.258 104.06 137.214 104.176 137.551 cv
104.222 137.681 104.307 137.635 104.302 137.719 cv
104.094 138.095 li
103.899 138.307 103.615 138.307 103.341 138.178 cv
103.408 137.944 103.224 137.962 103.09 137.928 cv
103.178 137.776 103.178 137.703 103.09 137.551 cv
103.302 137.427 103.41 137.202 103.55 137.008 cv
cp
ef
100.876 139.724 mo
100.98 139.749 101.209 139.89 101.253 139.724 cv
101.126 139.72 100.962 139.643 101.084 139.515 cv
101.012 139.519 100.955 139.506 100.918 139.473 cv
100.87 139.523 100.87 139.622 100.876 139.724 cv
cp
101.335 139.055 mo
101.304 139.215 101.606 139.146 101.545 139.014 cv
101.426 138.979 101.436 139.073 101.335 139.055 cv
cp
101.754 138.721 mo
101.699 138.984 101.989 138.904 102.088 139.014 cv
102.118 139.156 101.934 139.083 101.92 139.181 cv
101.927 139.3 102.094 139.258 102.214 139.265 cv
102.178 139.398 102.279 139.393 102.297 139.473 cv
102.2 139.725 102.067 139.94 101.962 140.184 cv
101.267 140.357 100.881 140.029 100.5 139.766 cv
100.501 139.219 100.803 138.605 101.754 138.721 cv
cp
ef
106.474 140.184 mo
106.695 140.172 106.616 140.459 106.851 140.434 cv
106.992 140.394 107.069 140.292 107.184 140.225 cv
107.067 140.174 107.047 140.054 107.1 139.933 cv
106.888 139.932 106.546 139.931 106.474 140.184 cv
cp
105.514 139.599 mo
105.563 139.647 105.661 139.646 105.765 139.641 cv
105.745 139.493 105.832 139.238 105.64 139.265 cv
105.586 139.365 105.486 139.418 105.514 139.599 cv
cp
105.64 138.889 mo
105.816 138.976 105.927 139.13 106.181 139.139 cv
106.251 139.336 106.181 139.658 106.433 139.808 cv
106.736 139.791 106.731 139.466 107.144 139.557 cv
107.283 139.71 107.32 139.965 107.476 140.1 cv
107.422 140.365 107.121 140.384 107.184 140.769 cv
106.994 140.779 106.722 140.85 106.474 140.769 cv
106.447 140.616 106.503 140.546 106.558 140.477 cv
106.45 140.363 106.433 140.528 106.308 140.517 cv
106.107 140.319 106.38 139.9 106.181 139.724 cv
106.073 139.823 105.918 139.878 105.849 140.016 cv
105.691 139.964 105.596 139.85 105.346 139.891 cv
105.2 139.721 105.075 139.437 105.18 139.139 cv
105.427 139.15 105.524 139.01 105.64 138.889 cv
cp
ef
117.671 140.433 mo
117.761 140.469 117.814 140.542 117.963 140.517 cv
118.037 140.409 118.137 140.329 118.215 140.225 cv
117.958 140.261 117.881 140.182 117.963 139.974 cv
117.668 139.929 117.651 140.164 117.671 140.433 cv
cp
118.173 139.557 mo
118.346 139.849 118.509 140.186 118.423 140.517 cv
118.208 140.623 117.977 140.835 117.755 140.81 cv
117.49 140.781 117.493 140.485 117.211 140.477 cv
117.199 140.366 117.299 140.369 117.379 140.35 cv
117.325 140.238 117.277 140.119 117.295 139.933 cv
117.448 139.906 117.552 139.828 117.505 139.599 cv
117.745 139.518 117.872 139.545 118.173 139.557 cv
cp
ef
107.77 140.893 mo
107.77 140.963 107.77 141.033 107.77 141.103 cv
107.981 141.059 108.008 141.197 108.187 141.187 cv
108.191 141.015 108.232 141.008 108.271 140.81 cv
108.103 140.694 107.951 140.89 107.77 140.893 cv
cp
108.563 140.517 mo
108.591 140.895 108.622 141.196 108.395 141.395 cv
108.047 141.342 107.89 141.437 107.603 141.353 cv
107.608 141.275 107.63 141.214 107.686 141.187 cv
107.61 141.109 107.484 141.083 107.436 140.977 cv
107.473 140.904 107.582 140.901 107.644 140.852 cv
107.661 140.751 107.569 140.761 107.603 140.643 cv
107.861 140.372 108.201 140.413 108.563 140.517 cv
cp
ef
116.544 141.061 mo
116.539 141.246 116.593 141.374 116.752 141.395 cv
116.849 141.297 116.985 141.238 116.961 141.019 cv
116.751 141.023 116.673 140.945 116.544 141.061 cv
cp
116.544 140.477 mo
116.643 140.557 116.879 140.503 117.045 140.517 cv
117.125 140.771 117.335 140.896 117.421 141.144 cv
117.202 141.39 117.07 141.768 116.71 141.73 cv
116.444 141.702 116.139 141.327 116.042 141.061 cv
116.267 140.925 116.422 140.717 116.544 140.477 cv
cp
ef
112.617 143.025 mo
112.617 143.109 112.617 143.192 112.617 143.276 cv
112.766 143.25 112.738 143.403 112.866 143.4 cv
112.883 143.25 113.095 143.296 113.033 143.067 cv
112.976 142.974 112.718 142.944 112.617 143.025 cv
cp
111.237 143.025 mo
111.47 143.116 111.61 142.983 111.822 142.941 cv
111.819 142.57 111.053 142.606 111.237 143.025 cv
cp
110.109 142.272 mo
110.082 142.425 110.136 142.495 110.193 142.565 cv
110.361 142.538 110.479 142.462 110.443 142.231 cv
110.322 142.236 110.17 142.208 110.109 142.272 cv
cp
108.939 141.813 mo
109.137 141.952 109.542 141.917 109.608 141.688 cv
109.457 141.571 108.868 141.327 108.939 141.813 cv
cp
109.566 141.144 mo
109.595 141.604 110.45 141.558 110.819 141.813 cv
110.82 141.924 110.78 142.075 110.945 142.022 cv
110.983 142.296 110.913 142.464 110.819 142.607 cv
111.012 142.747 111.321 142.207 111.696 142.231 cv
111.891 142.242 112.125 142.342 112.114 142.691 cv
112.154 142.764 112.261 142.767 112.323 142.816 cv
112.604 142.281 113.598 142.648 113.285 143.233 cv
113.271 143.343 113.446 143.267 113.41 143.4 cv
113.288 143.488 113.13 143.538 113.117 143.736 cv
112.628 143.783 112.366 143.595 112.198 143.192 cv
112.316 143.226 112.307 143.134 112.407 143.151 cv
112.405 143.012 112.289 142.99 112.157 142.983 cv
112.057 143.26 111.807 143.385 111.571 143.525 cv
111.338 143.494 111.299 143.27 111.029 143.276 cv
111.036 142.982 110.803 142.976 110.819 142.773 cv
110.357 142.728 110.176 142.836 109.817 142.773 cv
109.784 142.526 109.776 142.46 109.734 142.189 cv
109.544 142.124 109.318 142.274 109.064 142.272 cv
108.999 142.019 108.648 142.048 108.438 141.938 cv
108.517 141.85 108.552 141.717 108.731 141.73 cv
108.551 141.167 109.068 141.088 109.566 141.144 cv
cp
ef
115.625 142.315 mo
115.751 142.288 115.839 142.221 115.833 142.064 cv
115.755 141.946 115.524 141.984 115.331 141.98 cv
115.327 142.193 115.59 142.14 115.625 142.315 cv
cp
115.917 141.52 mo
116.054 141.648 115.96 142.007 116.21 142.022 cv
116.167 142.106 li
116.21 142.231 116.074 142.18 115.999 142.189 cv
115.926 142.337 116.029 142.292 116.042 142.44 cv
115.934 142.472 115.865 142.541 115.833 142.648 cv
115.446 142.702 115.215 142.598 115.039 142.44 cv
115.086 142.39 115.158 142.364 115.123 142.231 cv
115.13 142.14 114.975 142.212 114.914 142.189 cv
114.95 141.99 115.115 141.936 115.039 141.73 cv
115.224 141.553 115.594 141.56 115.917 141.52 cv
cp
ef
118.006 141.98 mo
118.063 142.211 117.917 142.395 117.963 142.481 cv
118.005 142.566 118.124 142.571 118.256 142.565 cv
118.078 143.199 118.961 143.568 119.176 144.194 cv
119.484 144.289 119.578 144.6 119.969 144.612 cv
120.063 144.729 120.16 144.839 120.137 145.072 cv
119.979 145.103 119.903 145.096 119.761 145.031 cv
119.399 145.253 119.254 145.693 118.758 145.783 cv
118.751 145.538 118.741 145.292 118.842 145.156 cv
118.627 144.759 118.292 144.375 118.047 143.902 cv
117.989 143.835 117.841 143.857 117.797 143.776 cv
118.132 143.462 117.618 143.522 117.337 143.317 cv
117.323 143.306 116.829 142.708 116.835 142.816 cv
116.829 142.712 117.131 142.454 117.337 142.565 cv
117.502 142.49 117.378 142.385 117.587 142.356 cv
117.529 142.303 117.546 142.175 117.546 142.064 cv
117.644 141.98 117.811 141.968 118.006 141.98 cv
cp
ef
116.251 143.025 mo
116.377 143.037 116.367 143.185 116.502 143.192 cv
116.531 143.319 116.46 143.344 116.46 143.443 cv
116.508 143.576 116.715 143.55 116.794 143.652 cv
116.83 143.785 116.727 143.78 116.71 143.86 cv
116.809 143.985 116.905 144.112 117.045 144.194 cv
116.799 144.404 116.211 144.255 116.126 144.028 cv
115.735 144.055 115.657 143.995 115.247 144.068 cv
114.957 144.284 114.854 144.729 114.914 145.072 cv
115.664 145.744 116.563 144.679 117.462 144.988 cv
117.546 145.431 118.047 145.937 117.629 146.367 cv
117.384 146.257 117.427 145.982 117.505 145.739 cv
117.102 145.824 116.475 145.643 116.251 146.116 cv
115.776 146.14 115.417 146.047 114.914 146.075 cv
114.86 145.988 114.74 145.842 114.83 145.739 cv
114.795 145.622 114.573 145.69 114.495 145.615 cv
114.489 145.511 114.561 145.485 114.579 145.407 cv
114.477 145.412 114.378 145.412 114.329 145.365 cv
114.34 144.781 114.735 144.665 114.622 144.111 cv
114.816 143.967 114.911 143.869 115.123 143.819 cv
115.118 143.715 115.116 143.617 115.165 143.568 cv
115.336 143.55 115.432 143.607 115.54 143.652 cv
115.803 143.469 116.056 143.276 116.251 143.025 cv
cp
ef
108.73 145.657 mo
108.514 145.921 108.508 146.399 108.103 146.283 cv
108.269 146.424 108.5 146.5 108.563 146.743 cv
108.948 146.972 109.308 146.761 109.44 146.408 cv
109.388 146.391 109.355 146.355 109.358 146.283 cv
109.416 146.204 109.486 146.134 109.566 146.075 cv
109.335 145.889 109.068 145.738 108.73 145.657 cv
cp
109.482 143.776 mo
109.475 143.95 109.262 143.918 109.231 144.068 cv
109.709 144.345 108.931 145.369 109.734 145.49 cv
109.922 145.276 109.863 144.812 110.193 144.738 cv
109.923 144.515 110.452 144.325 109.985 144.236 cv
109.985 144.083 110.102 144.048 110.151 143.944 cv
110.606 144.06 110.797 144.439 111.362 144.446 cv
111.376 144.597 111.355 144.716 111.321 144.821 cv
111.169 144.88 111.133 144.798 111.029 144.904 cv
111.056 144.947 111.123 144.949 111.111 145.031 cv
111.003 145.06 110.896 145.092 110.945 145.281 cv
110.847 145.337 110.708 145.35 110.61 145.407 cv
110.647 146.193 110.013 146.323 109.985 147.078 cv
109.976 147.182 110.077 147.179 110.11 147.244 cv
110.003 147.396 110.081 147.502 110.026 147.662 cv
110.092 147.734 110.182 147.785 110.277 147.829 cv
110.257 148.085 110.212 148.232 109.942 148.205 cv
109.842 148 109.693 147.84 109.44 147.788 cv
109.493 147.428 109.15 147.466 108.981 147.328 cv
108.85 147.308 108.818 147.387 108.73 147.411 cv
108.431 147.418 108.37 147.188 108.02 147.244 cv
107.797 147.052 107.793 146.635 107.56 146.451 cv
107.551 146.273 107.647 146.203 107.77 146.158 cv
107.744 146.058 107.709 145.967 107.727 145.823 cv
108.087 145.722 108.255 145.308 108.647 145.365 cv
108.787 145.351 108.689 145.1 108.814 145.072 cv
108.742 144.978 108.59 144.961 108.563 144.821 cv
108.518 144.666 108.652 144.686 108.688 144.612 cv
108.518 144.416 108.532 144.275 108.48 143.944 cv
108.688 143.86 li
108.718 143.691 108.513 143.758 108.522 143.609 cv
108.653 143.63 108.632 143.497 108.73 143.484 cv
108.711 143.364 108.583 143.354 108.605 143.192 cv
109.148 142.857 109.175 143.614 109.482 143.776 cv
cp
ef
93.564 132.496 mo
93.4958 132.496 93.4258 132.496 93.3558 132.496 cv
93.34 132.688 93.5331 132.593 93.564 132.496 cv
cp
91.3925 128.235 mo
91.6133 128.294 91.8146 128.207 91.7679 128.067 cv
91.6973 128.178 91.3673 128.029 91.3925 128.235 cv
cp
92.2284 121.8 mo
92.3779 121.816 92.429 121.865 92.5622 121.8 cv
92.4044 121.436 92.7161 121.052 92.3123 120.881 cv
92.1496 121.185 92.4473 121.457 92.2284 121.8 cv
cp
91.6014 121.09 mo
91.5389 121.14 91.414 121.127 91.4335 121.257 cv
91.46 121.371 91.6083 121.361 91.6014 121.508 cv
91.4714 121.517 91.5307 121.716 91.5187 121.843 cv
91.6285 121.948 91.8676 121.948 91.9767 121.843 cv
91.9572 121.627 92.0171 121.493 92.1029 121.383 cv
91.8852 121.337 91.9426 121.121 92.019 120.965 cv
91.8253 120.891 91.6777 120.857 91.5187 120.84 cv
91.5307 120.937 91.5679 121.013 91.6014 121.09 cv
cp
135.136 112.191 mo
135.317 112.208 135.368 112.158 135.302 112.025 cv
135.198 112.03 135.141 112.085 135.136 112.191 cv
cp
90.1397 104.964 mo
90.2444 104.958 90.3012 104.902 90.3062 104.796 cv
90.1832 104.835 90.151 104.859 90.0968 104.88 cv
90.1397 104.964 li
cp
93.815 96.691 mo
93.7463 97.1484 93.1552 97.636 93.2309 98.2372 cv
93.0391 98.4214 92.8158 98.7034 92.9388 99.0731 cv
92.6278 99.3646 92.3786 99.9298 92.4366 100.368 cv
92.2366 100.498 92.3565 100.699 92.1029 100.786 cv
92.072 100.913 92.1452 100.938 92.1445 101.036 cv
91.8133 101.021 92.1168 101.396 91.8518 101.412 cv
91.8215 101.54 91.8947 101.565 91.8928 101.663 cv
91.414 102.275 91.491 103.142 91.0165 103.794 cv
91.0046 103.916 91.1105 103.922 91.0998 104.044 cv
90.9743 104.17 li
91.1219 104.376 90.9945 104.519 90.8916 104.671 cv
90.9087 104.736 91.0222 104.707 90.9743 104.839 cv
90.9345 104.98 90.7264 104.952 90.6822 105.089 cv
90.7529 105.186 90.7907 105.315 90.7648 105.507 cv
90.6172 105.484 90.6633 105.655 90.5144 105.633 cv
90.4343 105.615 90.4822 105.47 90.3478 105.507 cv
90.38 105.725 90.5869 105.768 90.5983 106.008 cv
90.3504 106.061 90.5415 106.307 90.3478 106.426 cv
90.5037 106.423 90.4904 106.59 90.5144 106.719 cv
90.1573 106.843 90.5327 107.457 90.0968 107.471 cv
90.2507 107.655 90.2267 107.908 90.1397 108.139 cv
90.2494 108.126 90.2469 108.226 90.2646 108.306 cv
90.0526 108.364 90.004 108.952 90.1807 109.142 cv
90.0772 109.219 89.9447 109.268 89.8886 109.393 cv
89.992 109.386 90.0911 109.384 90.0968 109.475 cv
89.9378 109.639 90.0488 109.895 89.8463 110.06 cv
90.0911 110.103 89.951 110.366 90.0129 110.52 cv
89.886 110.49 89.8608 110.563 89.763 110.562 cv
89.7346 110.757 89.9125 110.747 89.9296 110.897 cv
89.9636 111.07 89.8085 111.053 89.763 111.147 cv
90.0595 111.319 89.811 111.574 89.8047 111.774 cv
89.7965 112.016 90.0772 112.345 89.8463 112.651 cv
89.8848 112.724 90.0002 112.721 90.0129 112.818 cv
89.8469 112.96 89.8791 113.065 89.6798 113.194 cv
89.7933 113.29 89.828 113.373 89.6798 113.444 cv
89.7996 113.463 89.8703 113.533 89.8886 113.654 cv
89.7542 113.989 89.8577 114.365 89.8463 114.865 cv
89.7498 114.852 89.6867 114.872 89.6369 114.908 cv
89.6224 115.076 89.8791 114.972 89.8463 115.158 cv
89.7851 115.971 89.9239 116.398 89.8463 117.121 cv
89.9094 117.128 90.0002 117.107 90.0129 117.164 cv
90.0772 117.407 89.8122 117.324 89.763 117.456 cv
90.0387 117.688 89.8703 118.206 89.8047 118.458 cv
89.8501 118.635 90.0923 118.617 90.1807 118.751 cv
89.8242 119.117 90.3605 119.84 90.0968 120.255 cv
90.3213 120.295 90.2677 120.613 90.3478 120.798 cv
90.3062 120.881 90.163 120.864 90.1807 121.007 cv
90.3718 121.095 90.3914 121.353 90.5567 121.466 cv
90.4974 121.547 90.4267 121.616 90.3478 121.676 cv
90.4317 121.717 90.5257 121.747 90.5567 121.843 cv
90.3788 121.932 90.503 122.065 90.4317 122.26 cv
90.5207 122.367 90.7585 122.324 90.7238 122.553 cv
90.6538 122.553 90.5838 122.553 90.5144 122.553 cv
90.4759 122.865 90.7951 122.944 90.9743 122.804 cv
90.9137 122.24 90.9957 122.04 90.8916 121.424 cv
90.9913 121.442 90.9819 121.348 91.0998 121.383 cv
91.0986 121.137 90.9024 121.335 90.8487 121.174 cv
90.7699 120.9 91.0273 120.962 91.0165 120.756 cv
91.0046 120.67 90.8607 120.717 90.8487 120.631 cv
91.0355 120.423 90.72 120.138 90.8916 120.004 cv
91.043 119.977 91.055 120.091 91.0576 120.213 cv
91.8499 120.373 92.3231 119.907 93.2719 120.046 cv
93.34 119.974 93.4283 119.924 93.5236 119.879 cv
93.8794 119.943 94.027 119.799 94.191 119.67 cv
94.3588 119.67 li
94.4598 119.936 94.2529 120.076 94.15 120.255 cv
94.1292 120.386 94.2623 120.365 94.2749 120.464 cv
94.2232 120.551 94.1727 120.64 94.1071 120.715 cv
94.1652 120.796 94.3601 120.741 94.3588 120.881 cv
93.9437 121.052 93.2435 120.492 92.9388 121.049 cv
92.9653 121.217 93.1173 121.26 93.1041 121.466 cv
93.0214 121.55 li
92.858 121.565 92.7173 121.435 92.6877 121.634 cv
92.8309 121.616 92.9211 121.65 93.0214 121.676 cv
93.1034 122.422 93.9507 122.071 94.3588 121.843 cv
94.5361 122.019 94.3122 122.4 94.3588 122.594 cv
94.4055 122.788 94.6579 122.714 94.6099 122.971 cv
94.3368 122.83 93.9646 123.034 93.8989 122.72 cv
93.2479 122.711 92.8082 122.482 92.019 122.553 cv
91.9742 122.514 92.0051 122.398 91.8928 122.428 cv
91.5736 122.548 91.3017 122.294 91.267 122.762 cv
91.3679 122.785 91.4815 122.797 91.4752 122.929 cv
91.2121 123.061 90.8424 122.828 90.6822 123.055 cv
90.7516 123.299 90.6576 123.354 90.5983 123.556 cv
90.6671 123.627 90.7251 123.708 90.7238 123.848 cv
90.8468 123.8 90.879 123.824 90.9326 123.932 cv
90.8727 124.133 90.7081 124.299 90.8487 124.475 cv
90.8197 124.585 90.6582 124.563 90.6399 124.683 cv
90.7951 124.699 90.7497 124.514 90.9326 124.559 cv
90.9774 124.667 90.985 124.813 91.0998 124.851 cv
91.0512 124.955 90.9339 124.99 90.9326 125.143 cv
90.9989 125.23 91.2638 125.118 91.2247 125.31 cv
91.021 125.444 91.2153 125.968 91.3925 126.104 cv
91.2468 126.356 91.4752 126.746 91.5591 127.023 cv
91.5111 127.115 91.4197 127.162 91.3925 127.274 cv
91.4575 127.348 91.6159 127.329 91.6846 127.399 cv
91.6909 127.531 91.5736 127.539 91.6014 127.691 cv
91.6342 127.84 91.8449 127.81 91.8928 127.942 cv
91.8518 128.124 92.118 128.358 92.019 128.736 cv
92.0449 128.808 92.2171 128.733 92.2284 128.82 cv
92.2114 129.218 92.4688 129.305 92.2701 129.613 cv
92.3912 129.711 92.5956 129.819 92.4782 130.031 cv
92.7527 130.149 92.8158 130.338 92.771 130.658 cv
93.0094 130.809 93.2517 131.133 93.1476 131.494 cv
93.393 131.769 93.4037 132.126 93.6901 132.371 cv
93.6725 132.45 93.5999 132.477 93.6069 132.58 cv
93.7217 132.7 93.9154 132.874 93.9828 133.081 cv
93.9412 133.206 li
94.0825 133.458 94.3803 133.702 94.2339 134.084 cv
94.3412 134.156 94.4276 134.252 94.4831 134.377 cv
94.5115 134.341 94.6793 134.246 94.6938 134.334 cv
94.6667 134.434 94.5115 134.403 94.567 134.585 cv
94.8181 134.698 95.0553 134.995 94.9859 135.295 cv
95.2503 135.548 95.7202 135.765 95.654 136.215 cv
96.1732 136.406 96.1745 137.115 96.6564 137.343 cv
96.6564 137.426 96.6564 137.51 96.6564 137.593 cv
96.7599 137.587 96.8589 137.586 96.8646 137.677 cv
96.8135 137.792 96.6798 137.826 96.6148 137.928 cv
97.1611 137.883 97.1151 138.429 97.534 138.513 cv
97.428 138.887 97.9787 138.918 97.91 139.39 cv
98.0456 139.365 98.1043 139.418 98.202 139.431 cv
98.1686 139.633 98.3869 139.583 98.3282 139.808 cv
98.8354 139.992 98.8903 140.722 99.3723 140.81 cv
99.3552 140.89 99.2531 140.886 99.2884 141.019 cv
99.795 141.487 100.422 141.836 100.667 142.565 cv
101.028 142.373 101.027 142.824 101.335 142.816 cv
101.218 143.098 101.674 143.138 101.628 143.484 cv
101.774 143.451 101.788 143.546 101.92 143.525 cv
102.259 143.952 102.656 144.322 103.174 144.571 cv
103.157 144.671 103.251 144.661 103.215 144.78 cv
103.286 144.78 103.356 144.78 103.425 144.78 cv
103.563 145.227 103.945 145.428 104.344 145.615 cv
104.333 146.04 104.945 146.027 105.096 146.408 cv
105.208 146.408 105.319 146.408 105.43 146.408 cv
105.526 146.759 105.936 146.793 106.057 147.119 cv
106.158 147.136 106.146 147.043 106.265 147.078 cv
106.673 147.543 107.474 147.692 107.895 148.247 cv
107.992 148.247 108.09 148.247 108.187 148.247 cv
108.311 148.555 108.798 148.5 108.898 148.832 cv
109.03 148.852 109.046 148.757 109.19 148.79 cv
109.202 148.847 109.249 148.87 109.231 148.958 cv
110.518 149.255 111.219 150.154 112.867 150.044 cv
112.941 150.135 113.05 150.195 113.242 150.169 cv
113.478 149.96 113.902 149.983 114.288 149.96 cv
114.401 149.934 114.392 149.785 114.539 149.793 cv
114.606 149.863 114.784 149.826 114.915 149.835 cv
114.919 149.757 114.941 149.695 114.997 149.668 cv
115.693 149.623 115.865 149.059 116.544 148.999 cv
116.65 148.909 116.51 148.765 116.585 148.707 cv
116.853 148.751 116.89 148.566 117.17 148.623 cv
117.478 148.123 118.121 147.958 118.591 147.621 cv
118.675 147.411 li
119.024 147.303 119.302 147.119 119.51 146.868 cv
119.677 146.868 li
119.635 146.571 119.877 146.47 120.01 146.242 cv
120.581 145.974 120.955 145.514 121.515 145.239 cv
121.485 145.111 121.558 145.086 121.558 144.988 cv
121.732 144.983 121.708 144.778 121.932 144.821 cv
121.949 144.6 122.064 144.479 122.351 144.528 cv
122.546 144.306 122.552 143.894 122.977 143.902 cv
122.919 143.298 124.127 143.094 123.938 142.648 cv
124.241 142.729 124.205 142.47 124.272 142.315 cv
124.433 142.254 124.282 142.501 124.439 142.44 cv
124.314 142.168 124.486 142.045 124.815 141.938 cv
124.91 141.42 125.41 141.307 125.61 140.893 cv
125.658 140.859 125.722 140.839 125.819 140.852 cv
125.819 140.769 125.819 140.685 125.819 140.601 cv
125.916 140.504 126.151 140.543 126.237 140.434 cv
126.257 140.303 126.124 140.324 126.111 140.225 cv
126.506 139.797 126.666 139.136 127.281 138.93 cv
127.323 138.805 li
127.362 138.653 127.136 138.77 127.155 138.638 cv
127.471 138.451 127.657 138.137 127.949 137.928 cv
127.949 137.83 127.949 137.733 127.949 137.635 cv
128.21 137.589 128.28 137.352 128.326 137.092 cv
128.443 137.127 128.433 137.034 128.534 137.05 cv
128.712 136.685 128.816 136.246 129.119 136.006 cv
129.009 136.018 128.981 135.948 128.994 135.838 cv
129.093 135.757 129.284 135.766 129.37 135.672 cv
129.404 135.526 129.308 135.512 129.329 135.379 cv
129.631 135.396 129.416 134.884 129.829 134.92 cv
129.835 134.816 129.764 134.79 129.745 134.71 cv
129.988 134.562 129.993 134.179 130.248 134.042 cv
130.212 133.799 130.328 133.704 130.497 133.666 cv
130.667 133.172 130.64 132.738 131.04 132.496 cv
130.968 132.487 130.946 132.424 130.958 132.33 cv
131.04 132.33 131.124 132.33 131.208 132.33 cv
131.067 131.595 131.904 130.784 132.044 130.072 cv
132.159 130.05 132.179 129.929 132.294 129.906 cv
132.112 129.522 132.301 128.792 132.838 128.987 cv
132.72 128.817 132.545 128.56 132.586 128.36 cv
132.731 128.33 132.911 128.359 132.964 128.151 cv
132.856 128.107 132.816 128.331 132.754 128.193 cv
132.832 127.674 133.015 127.117 133.089 126.605 cv
133.236 126.558 133.342 126.47 133.381 126.313 cv
133.272 126.325 133.201 126.298 133.213 126.187 cv
133.405 126.165 133.371 126.01 133.338 125.853 cv
133.478 125.756 133.608 125.649 133.673 125.477 cv
133.544 125.482 133.549 125.352 133.548 125.226 cv
133.557 125.154 133.619 125.131 133.715 125.143 cv
133.636 124.501 133.814 124.194 134.049 123.848 cv
134.069 123.716 133.921 123.754 133.965 123.597 cv
134.003 123.468 134.187 123.485 134.175 123.304 cv
134.192 123.204 133.984 123.328 134.049 123.18 cv
134.207 122.739 134.352 122.599 134.341 122.135 cv
134.367 122.063 134.54 122.138 134.551 122.052 cv
134.307 121.897 134.516 121.645 134.593 121.466 cv
134.488 121.474 134.492 121.373 134.426 121.341 cv
134.501 120.852 134.94 120.45 134.718 119.921 cv
135.013 119.555 134.772 119.023 134.969 118.668 cv
134.93 118.623 134.815 118.654 134.842 118.542 cv
134.893 118.44 135.037 118.43 135.052 118.292 cv
134.97 118.025 135.015 117.48 134.926 117.205 cv
134.979 117.133 135.094 117.121 135.136 117.038 cv
135.121 116.886 135.051 116.788 135.01 116.662 cv
135.111 116.61 135.146 116.491 135.178 116.369 cv
134.815 116.227 135.11 115.526 135.302 115.409 cv
135.291 115.253 135.081 115.296 135.094 115.116 cv
135.273 114.932 135.199 114.831 135.094 114.615 cv
135.329 114.326 135.061 114.215 135.094 113.821 cv
135.228 113.802 135.337 113.758 135.302 113.57 cv
135.146 113.538 135.103 113.621 134.969 113.612 cv
134.86 113.436 135.035 113.437 135.052 113.278 cv
134.988 112.932 135.02 112.633 135.052 112.317 cv
134.724 111.649 135.173 110.91 134.759 110.311 cv
134.869 110.323 134.939 110.295 134.926 110.186 cv
134.808 110.055 134.734 109.877 134.675 109.685 cv
134.78 109.69 134.878 109.692 134.886 109.601 cv
134.789 109.437 134.681 109.094 134.759 108.891 cv
134.692 108.833 134.545 108.856 134.509 108.765 cv
134.699 108.475 134.263 108.282 134.634 108.055 cv
134.585 108.048 134.589 107.989 134.593 107.93 cv
134.5 107.898 134.366 107.906 134.341 107.805 cv
134.446 107.587 134.36 107.436 134.509 107.262 cv
134.277 107.299 134.18 107.201 134.133 107.053 cv
134.295 106.868 134.136 106.36 134.3 106.175 cv
134.121 106.188 133.963 106.179 133.965 106.008 cv
133.946 105.876 134.079 105.898 134.091 105.799 cv
133.967 105.728 133.99 105.51 133.923 105.381 cv
133.954 105.449 133.728 105.449 133.757 105.381 cv
133.927 105.072 133.919 104.796 133.632 104.629 cv
133.733 104.292 133.561 104.246 133.506 104.044 cv
133.548 103.836 li
133.536 103.701 133.252 103.634 133.464 103.459 cv
133.235 103.425 133.251 103.144 133.172 102.958 cv
133.252 102.941 133.352 102.943 133.338 102.833 cv
133.227 102.602 133.057 102.914 132.964 102.666 cv
132.965 102.529 133.082 102.506 133.046 102.332 cv
132.983 102.325 132.892 102.347 132.878 102.29 cv
132.779 101.61 132.438 101.292 132.419 100.786 cv
132.347 100.69 132.219 100.653 132.17 100.535 cv
132.281 100.197 132.01 99.8245 131.835 99.5324 cv
131.894 99.4813 131.898 99.3728 131.959 99.3236 cv
131.761 99.3425 131.644 99.2788 131.583 99.1564 cv
131.682 98.7242 130.98 98.5924 131.167 98.0701 cv
130.915 98.0984 130.906 97.8853 130.916 97.6525 cv
130.667 97.7142 130.615 97.4954 130.748 97.402 cv
130.665 97.3591 130.57 97.3295 130.54 97.2342 cv
130.576 97.1862 130.595 97.1225 130.581 97.0254 cv
129.972 96.2841 129.683 95.223 128.994 94.5606 cv
129.177 94.0723 128.342 94.1461 128.618 93.5582 cv
128.288 93.6313 128.127 93.4496 128.158 93.0566 cv
127.975 92.9727 127.88 92.885 127.699 92.8895 cv
127.745 92.7955 127.901 92.8118 127.866 92.639 cv
127.787 92.5923 127.668 92.5854 127.574 92.5551 cv
127.498 92.2681 127.154 92.1236 127.197 91.8447 cv
126.77 91.8744 126.544 91.4757 126.446 91.0511 cv
126.148 90.79 125.672 90.7098 125.61 90.2159 cv
125.398 90.1906 125.149 90.2026 125.193 89.9232 cv
125.296 89.9017 125.444 89.9244 125.443 89.7982 cv
125.342 89.6601 125.22 89.8513 125.15 89.8815 cv
124.729 89.4525 124.086 89.2456 123.855 88.628 cv
123.754 88.681 123.731 88.8116 123.564 88.7946 cv
123.66 88.5983 123.365 88.4747 123.312 88.2936 cv
123.096 88.3555 122.883 88.0558 122.852 87.7921 cv
122.443 87.8817 122.398 87.3196 121.891 87.3745 cv
121.841 87.2016 121.707 87.1133 121.515 87.0818 cv
121.478 86.8137 121.259 86.7241 120.929 86.748 cv
120.839 86.6723 120.854 86.49 120.763 86.4137 cv
120.456 86.4667 120.37 86.2799 120.388 86.121 cv
120.334 86.0635 120.206 86.08 120.095 86.08 cv
119.837 85.7519 119.542 85.463 119.05 85.369 cv
118.963 84.892 118.26 85.1324 118.089 84.8258 cv
117.886 84.9589 117.67 84.7451 117.672 84.5337 cv
117.475 84.451 117.118 84.5306 117.212 84.1577 cv
116.797 84.1072 116.573 83.9243 116.25 83.7401 cv
116.12 83.6644 115.995 83.7357 115.917 83.6562 cv
115.72 83.4594 115.708 83.4777 115.415 83.3635 cv
115.102 83.2424 114.89 83.0588 114.663 82.9875 cv
114.305 82.8765 113.854 83.0335 113.618 82.6537 cv
113.399 82.6285 113.26 82.6847 113.076 82.6954 cv
113.027 82.3207 112.384 82.691 112.24 82.4866 cv
112.063 82.6134 111.704 82.59 111.571 82.4443 cv
111.255 82.6777 110.742 82.4557 110.569 82.8209 cv
110.453 82.7963 110.395 82.7169 110.277 82.6954 cv
110.132 82.7875 110.023 82.9156 109.858 82.9875 cv
109.734 82.8209 li
109.688 82.9421 109.599 83.0209 109.524 83.113 cv
109.233 83.0329 108.959 83.1023 108.647 83.113 cv
108.659 83.2083 108.637 83.2701 108.563 83.2802 cv
108.553 83.2216 108.472 83.2322 108.438 83.1969 cv
108.435 83.3193 108.342 83.3515 108.271 83.4058 cv
107.582 83.6202 107.235 84.1533 106.516 84.1577 cv
105.917 84.8315 104.865 85.0189 104.26 85.6194 cv
103.96 85.6522 103.889 85.9172 103.717 86.08 cv
103.319 86.0932 103.249 86.5329 102.839 86.4137 cv
102.698 86.6477 102.628 86.9537 102.214 86.9152 cv
101.69 87.729 100.837 88.2123 99.9994 88.7112 cv
99.9659 89.1238 99.7508 89.3547 99.3723 89.4216 cv
99.3836 89.6841 99.3243 89.8746 99.0386 89.8392 cv
99.0474 89.9882 99.0102 90.0897 98.913 90.132 cv
98.8644 90.0966 98.8001 90.0765 98.7036 90.0903 cv
98.6563 90.3086 98.5503 90.4663 98.2853 90.4663 cv
98.3105 90.9205 97.8727 90.8991 97.6179 90.9678 cv
97.6734 91.3558 97.3491 91.6548 97.0741 91.8447 cv
97.0734 91.9432 97.146 91.9678 97.1163 92.0958 cv
96.9599 92.1892 96.8015 92.2819 96.6564 92.3879 cv
96.541 92.8857 95.9877 92.9437 95.9051 93.4742 cv
95.8079 93.461 95.7442 93.4806 95.695 93.5165 cv
95.6161 93.8685 95.2755 93.96 95.319 94.4351 cv
94.926 94.7208 94.7569 95.3208 94.567 95.6892 cv
94.4465 95.7087 94.3279 95.5157 94.2749 95.6053 cv
94.5216 96.0444 94.0213 96.4298 93.815 96.691 cv
cp
113.996 82.3194 mo
114.062 82.3913 114.077 82.5156 114.161 82.5705 cv
114.837 82.2891 115.185 83.0032 115.917 82.9875 cv
115.867 83.0499 115.867 83.0928 115.917 83.1547 cv
116.171 83.108 116.222 83.2676 116.418 83.2802 cv
116.418 83.3502 116.418 83.4196 116.418 83.489 cv
116.901 83.3603 117.087 84.0051 117.588 83.865 cv
118.002 84.2309 118.4 84.6138 119.092 84.7009 cv
119.147 84.8302 119.081 84.8195 119.092 84.993 cv
119.228 85.0176 119.287 84.9646 119.386 84.9514 cv
119.623 85.3532 120.36 85.2573 120.469 85.7866 cv
120.902 85.9595 121.151 86.0743 121.39 86.4559 cv
121.523 86.3916 121.573 86.4408 121.724 86.4559 cv
122.084 87.1398 123.077 87.1921 123.353 87.9593 cv
123.436 87.9593 123.52 87.9593 123.604 87.9593 cv
123.73 88.1953 123.881 88.4072 124.231 88.4192 cv
124.257 88.6987 124.436 88.8267 124.733 88.8368 cv
124.86 89.0847 124.942 89.3781 125.318 89.38 cv
125.538 89.9238 126.199 90.0291 126.362 90.6335 cv
126.49 90.6032 126.485 90.7054 126.613 90.6758 cv
126.753 91.0499 127.041 91.2776 127.406 91.4271 cv
127.442 91.5602 127.341 91.5565 127.323 91.6359 cv
127.537 92.0214 128.035 92.1217 128.074 92.6807 cv
128.192 92.7437 128.247 92.6667 128.408 92.7223 cv
128.669 93.1027 128.743 93.6711 129.245 93.8086 cv
129.256 93.8755 129.206 93.8806 129.203 93.9341 cv
129.632 94.1953 129.569 94.7095 129.956 94.9782 cv
129.956 95.0892 129.939 95.2173 129.997 95.2709 cv
130.154 95.3031 130.196 95.2198 130.33 95.2287 cv
130.382 95.4192 130.216 95.3927 130.248 95.5637 cv
130.283 95.7516 130.448 95.8091 130.664 95.8135 cv
130.464 96.3535 130.921 96.5856 131.084 96.8998 cv
130.993 97.1357 131.108 97.4354 131.334 97.4846 cv
131.378 97.9004 131.552 98.1862 131.835 98.3622 cv
131.846 98.4303 131.797 98.4347 131.793 98.4877 cv
131.856 98.564 131.974 98.5861 132.044 98.6548 cv
132.025 99.0252 132.169 99.4719 132.419 99.6157 cv
132.452 99.7607 132.373 99.7923 132.337 99.8668 cv
132.371 99.9286 132.472 99.9267 132.546 99.95 cv
132.505 100.143 132.576 100.226 132.711 100.243 cv
132.758 100.399 132.608 100.362 132.629 100.493 cv
132.755 100.557 132.851 100.697 132.754 100.869 cv
132.781 100.995 132.998 100.933 133.046 101.036 cv
133.02 101.136 133.022 101.221 132.922 101.329 cv
133.013 101.432 133.037 101.602 133.213 101.621 cv
133.046 101.944 133.39 102.001 133.297 102.248 cv
133.357 102.352 133.441 102.321 133.548 102.29 cv
133.358 102.672 133.788 102.75 133.632 103.083 cv
133.817 103.232 133.846 103.538 134.007 103.71 cv
133.94 103.722 133.936 103.671 133.882 103.668 cv
133.878 103.936 134.034 104.045 134.215 104.128 cv
134.227 104.278 134.091 104.281 134.091 104.42 cv
134.2 104.548 134.259 104.728 134.383 104.839 cv
134.378 104.945 134.323 105.001 134.215 105.006 cv
134.267 105.136 134.294 105.289 134.509 105.256 cv
134.531 105.445 134.425 105.506 134.383 105.633 cv
134.411 105.715 134.511 105.727 134.551 105.799 cv
134.517 105.877 134.48 105.953 134.467 106.05 cv
134.512 106.143 134.673 106.124 134.718 106.217 cv
134.647 106.423 134.799 106.752 134.675 107.011 cv
134.739 107.145 134.856 107.029 134.926 107.094 cv
134.857 107.283 135.045 107.404 134.801 107.512 cv
134.801 107.652 134.936 107.655 134.926 107.805 cv
134.868 107.801 134.808 107.797 134.801 107.847 cv
134.774 108.041 134.951 108.031 134.969 108.181 cv
134.916 108.239 134.77 108.206 134.718 108.264 cv
134.762 108.374 134.885 108.405 134.926 108.515 cv
134.928 108.655 134.82 108.687 134.759 108.765 cv
134.839 108.839 135.027 108.804 135.094 108.891 cv
135.013 109.06 135.129 109.222 135.052 109.434 cv
135.138 109.589 135.227 109.308 135.302 109.434 cv
135.259 109.643 135.22 109.853 135.094 109.978 cv
135.111 110.071 135.315 109.979 135.345 110.06 cv
135.292 110.201 135.112 110.401 135.345 110.478 cv
135.334 110.621 135.124 110.564 135.094 110.687 cv
135.247 110.786 135.312 110.972 135.47 111.063 cv
135.46 111.291 135.323 111.39 135.218 111.524 cv
135.363 111.557 135.394 111.445 135.47 111.524 cv
135.38 111.926 135.593 112.204 135.386 112.651 cv
135.283 112.645 135.183 112.644 135.178 112.734 cv
135.139 112.869 135.314 112.793 135.345 112.86 cv
135.46 112.801 135.349 112.642 135.637 112.693 cv
135.637 112.763 135.637 112.832 135.637 112.902 cv
135.543 113.013 135.427 112.842 135.345 112.944 cv
135.304 113.151 135.477 113.144 135.596 113.194 cv
135.772 113.566 135.481 113.967 135.72 114.197 cv
135.739 114.328 135.615 114.315 135.553 114.364 cv
135.686 114.577 135.862 115.052 135.47 115.158 cv
135.514 115.419 135.589 115.651 135.72 115.826 cv
135.738 116.109 135.401 116.036 135.428 116.328 cv
135.433 116.42 135.605 116.346 135.678 116.369 cv
135.707 116.819 135.367 116.957 135.637 117.247 cv
135.464 117.376 135.391 117.522 135.512 117.748 cv
135.302 117.832 li
135.504 117.979 135.442 118.26 135.553 118.417 cv
135.336 118.598 135.491 118.9 135.261 119.044 cv
135.286 119.157 135.435 119.148 135.428 119.294 cv
135.363 119.355 135.265 119.382 135.178 119.42 cv
135.394 119.745 135.216 120.081 135.052 120.339 cv
135.321 120.507 134.974 120.825 135.178 121.007 cv
135.068 121.177 135.028 121.415 134.886 121.55 cv
134.89 121.698 135.04 121.702 135.01 121.884 cv
134.673 121.906 135.03 122.37 134.718 122.428 cv
135.075 122.751 134.676 123.089 134.551 123.388 cv
134.61 123.549 134.723 123.591 134.634 123.806 cv
134.506 123.776 134.511 123.879 134.383 123.848 cv
134.369 124.085 134.517 124.309 134.259 124.349 cv
134.383 124.472 134.211 124.665 134.426 124.725 cv
134.144 125.001 134.167 125.582 133.882 125.853 cv
133.834 126.026 133.971 126.016 133.965 126.146 cv
133.889 126.257 133.619 126.454 133.799 126.563 cv
133.84 126.73 133.565 126.581 133.589 126.731 cv
133.571 126.862 133.694 126.849 133.757 126.898 cv
133.724 126.98 133.61 127.048 133.548 126.981 cv
133.574 127.238 133.597 127.501 133.338 127.567 cv
133.514 127.927 133.065 127.99 133.297 128.277 cv
133.256 128.36 133.142 128.372 133.089 128.444 cv
133.358 128.877 132.754 129.042 133.005 129.446 cv
132.88 129.462 132.793 129.513 132.711 129.572 cv
132.858 130.035 132.293 130.255 132.419 130.7 cv
132.378 130.839 132.233 130.875 132.294 131.117 cv
132.18 131.157 132.116 131.246 132.003 131.285 cv
131.968 131.403 132.06 131.393 132.044 131.494 cv
131.971 131.531 131.923 131.595 131.835 131.619 cv
132.011 132.259 131.137 132.322 131.292 133.039 cv
130.874 133.136 131.052 133.829 130.708 134.001 cv
130.708 134.098 130.708 134.196 130.708 134.293 cv
130.219 134.552 130.355 135.188 129.829 135.421 cv
129.865 135.47 129.884 135.533 129.871 135.63 cv
129.691 135.631 129.693 135.814 129.537 135.838 cv
129.684 136.199 129.212 136.177 129.286 136.591 cv
129.231 136.648 129.105 136.632 128.994 136.632 cv
128.915 136.778 129.042 136.791 129.078 136.925 cv
129.03 137.114 128.838 137.159 128.702 137.26 cv
128.676 137.793 128.08 137.874 128.158 138.387 cv
127.755 138.694 127.551 139.2 127.155 139.515 cv
127.136 139.647 127.299 139.626 127.197 139.724 cv
126.489 139.994 126.646 140.921 125.86 141.061 cv
125.884 141.148 125.98 141.196 125.902 141.27 cv
125.812 141.303 125.586 141.233 125.526 141.395 cv
125.533 141.486 125.632 141.485 125.735 141.479 cv
125.706 141.826 125.101 141.597 125.234 142.106 cv
125.147 142.197 125.115 142.084 124.983 142.106 cv
124.998 142.789 124.332 142.791 124.19 143.317 cv
123.71 143.464 123.613 143.995 123.103 144.111 cv
122.944 144.934 122.084 144.867 121.808 145.615 cv
121.352 145.59 121.251 145.921 121.14 146.242 cv
120.581 146.491 120.07 146.789 119.761 147.287 cv
119.661 147.312 119.569 147.346 119.426 147.328 cv
119.175 147.841 118.699 148.132 118.089 148.288 cv
117.965 148.29 118.036 148.486 117.964 148.539 cv
117.318 148.736 117.13 149.409 116.46 149.375 cv
116.376 149.5 116.247 149.581 116.167 149.709 cv
115.346 149.749 114.78 150.592 113.828 150.503 cv
113.294 150.71 112.406 150.806 111.948 150.545 cv
111.067 150.632 110.581 150.324 110.11 150.001 cv
109.961 150.067 109.922 149.979 109.775 150.044 cv
109.416 149.691 108.609 149.616 108.23 149.166 cv
108.146 149.166 108.062 149.166 107.979 149.166 cv
107.615 148.54 106.608 148.558 106.265 147.913 cv
106.154 147.913 106.043 147.913 105.931 147.913 cv
105.777 147.579 105.272 147.598 105.138 147.244 cv
104.502 147.074 104.354 146.413 103.676 146.284 cv
103.744 145.992 103.534 145.978 103.299 145.991 cv
103.026 145.653 102.844 145.221 102.339 145.113 cv
102.361 144.906 102.053 144.867 102.171 144.696 cv
102.019 144.686 102.011 144.639 101.879 144.696 cv
101.848 144.476 101.703 144.371 101.419 144.404 cv
101.42 144.026 101.295 143.776 100.96 143.736 cv
100.979 143.525 100.766 143.471 100.708 143.233 cv
100.534 143.255 100.427 143.211 100.332 143.151 cv
100.332 142.983 li
99.911 142.848 99.9224 142.279 99.3723 142.272 cv
99.2783 142.019 99.0903 141.859 98.9963 141.604 cv
98.6771 141.714 98.6096 141.351 98.4948 141.395 cv
98.5742 140.944 98.0626 140.786 97.7844 140.559 cv
97.7642 140.428 97.9131 140.465 97.8683 140.309 cv
97.7251 140.188 97.5743 140.073 97.4084 139.974 cv
97.445 139.687 97.3207 139.562 97.0324 139.599 cv
97.0116 139.468 97.0924 139.435 97.1163 139.348 cv
97.0924 139.219 96.893 139.265 96.9485 139.055 cv
96.8173 139.076 96.8015 138.98 96.6564 139.014 cv
96.6211 138.843 96.6501 138.87 96.6564 138.68 cv
96.2716 138.521 96.2306 138.019 95.8212 137.886 cv
95.9827 137.507 95.4061 137.564 95.4868 137.133 cv
95.3726 137.079 95.2976 136.988 95.1525 136.967 cv
95.2547 136.63 94.8515 136.615 94.9859 136.382 cv
94.5494 136.303 94.526 135.811 94.2339 135.588 cv
94.2194 135.422 94.3298 135.378 94.3172 135.212 cv
94.2787 135.099 94.239 135.323 94.1071 135.253 cv
94.2428 134.977 93.639 134.872 93.8989 134.585 cv
93.7084 134.483 93.4132 134.486 93.4801 134.126 cv
93.3406 134.029 93.0239 133.63 93.3141 133.499 cv
93.2706 133.362 93.1003 133.352 92.9798 133.29 cv
92.9602 132.839 92.5029 132.654 92.6461 132.33 cv
92.6656 132.198 92.518 132.234 92.5622 132.078 cv
92.5041 132.012 92.3565 132.034 92.3123 131.954 cv
92.3048 131.848 92.4044 131.851 92.4366 131.786 cv
92.2026 131.589 92.0985 131.261 91.8518 131.076 cv
91.8922 130.991 91.9363 130.911 91.9767 130.825 cv
91.6714 130.676 91.8625 130.286 91.5591 130.156 cv
91.5755 130.048 91.684 130.031 91.6846 129.906 cv
91.6493 129.845 91.5793 129.816 91.4752 129.823 cv
91.3635 129.584 91.4878 129.368 91.2247 129.279 cv
91.1894 129.146 91.291 129.15 91.3086 129.07 cv
91.0923 128.911 91.1219 128.505 90.8916 128.36 cv
91.0639 128.394 90.9125 128.102 91.0165 128.067 cv
90.7926 127.985 90.8185 127.652 90.5567 127.608 cv
90.6279 127.194 90.7226 126.692 90.3895 126.438 cv
90.4387 126.186 90.2734 125.972 90.4317 125.853 cv
90.3535 125.791 90.2337 125.773 90.0968 125.77 cv
90.0696 125.548 90.2892 125.572 90.3478 125.435 cv
90.3283 125.288 90.1668 125.283 90.0558 125.226 cv
90.1327 124.982 89.9857 124.69 90.1397 124.475 cv
90.1201 124.313 89.951 124.3 89.8463 124.224 cv
89.8167 124.111 89.9327 124.143 89.9725 124.099 cv
89.8608 123.725 89.7346 123.4 89.7208 122.971 cv
89.7391 122.855 89.5656 122.932 89.5536 122.845 cv
89.534 122.715 89.6596 122.727 89.7208 122.678 cv
89.6224 122.554 89.5643 122.389 89.5126 122.219 cv
89.5201 122.073 89.6608 122.06 89.6798 121.926 cv
89.6457 121.794 89.4034 121.867 89.4287 121.676 cv
89.4791 121.628 89.5038 121.556 89.6369 121.592 cv
89.6343 121.428 89.4691 121.426 89.3877 121.341 cv
89.4817 121.014 89.1038 120.56 89.5536 120.422 cv
89.5271 120.226 89.3221 120.208 89.1366 120.172 cv
89.2533 120.052 89.1725 119.734 89.3038 119.628 cv
89.3353 119.471 89.1429 119.538 89.1366 119.42 cv
89.124 119.309 89.223 119.312 89.3038 119.294 cv
89.0962 118.922 88.9946 118.293 89.3038 118.041 cv
89.1252 117.842 88.9928 117.511 89.2192 117.247 cv
89.1839 117.186 89.1574 117.114 89.0533 117.121 cv
89.1675 116.386 88.9454 115.546 89.0937 114.991 cv
89.0704 114.862 88.9429 114.836 88.8432 114.782 cv
88.9089 114.609 88.9745 114.44 89.0937 114.322 cv
89.047 114.063 89.0495 113.755 88.8432 113.654 cv
88.8016 113.331 89.1574 113.158 88.9694 112.944 cv
88.9423 112.791 89.1675 112.891 89.1776 112.777 cv
89.2054 112.61 89.0199 112.657 88.8855 112.651 cv
89.2426 112.352 88.748 111.865 89.1776 111.648 cv
89.1725 111.557 89.0729 111.558 88.9694 111.565 cv
89.0748 111.148 88.888 110.943 88.8855 110.646 cv
88.9391 110.532 89.0886 110.514 89.1366 110.395 cv
89.0962 110.198 89.0262 110.031 89.0098 109.81 cv
89.0704 109.729 89.165 109.686 89.2615 109.643 cv
89.1587 109.494 89.0521 109.177 89.2615 109.058 cv
89.2464 108.878 89.0293 108.899 89.0937 108.64 cv
89.259 108.596 89.3864 108.514 89.4697 108.39 cv
89.4142 108.379 89.3523 108.302 89.2615 108.222 cv
89.4249 107.981 89.3019 107.707 89.5126 107.512 cv
89.3252 107.087 89.6179 106.212 89.9296 105.883 cv
89.9416 105.718 89.7504 105.755 89.763 105.59 cv
90.1163 105.279 89.8703 104.869 90.0968 104.463 cv
90.2337 104.487 90.2917 104.434 90.3895 104.42 cv
90.4317 104.211 90.2027 104.273 90.1807 104.128 cv
90.3037 103.801 90.5661 103.55 90.4727 103.125 cv
90.551 103.092 90.6267 103.056 90.7238 103.042 cv
90.7301 102.841 90.5289 102.846 90.5983 102.583 cv
90.6734 102.577 90.686 102.634 90.7648 102.624 cv
90.7093 102.344 90.8809 102.294 91.0165 102.206 cv
90.6809 101.86 91.2695 101.571 91.1831 100.995 cv
91.3112 100.997 91.3459 100.906 91.4335 100.869 cv
91.3963 100.795 91.3175 100.763 91.3496 100.619 cv
91.6241 100.376 91.6045 99.8415 91.8518 99.574 cv
91.8215 99.4504 91.7269 99.3917 91.7679 99.1981 cv
91.9206 99.1981 91.8796 99.3942 92.1029 99.3236 cv
92.0852 99.2006 91.9654 99.1816 91.9351 99.0731 cv
92.0114 98.8965 92.3193 98.7337 92.1862 98.4877 cv
92.4858 98.3975 92.3414 97.8632 92.6877 97.8196 cv
92.7287 97.6487 92.6833 97.6506 92.6877 97.4436 cv
92.8189 97.4077 92.8643 97.2853 93.0214 97.2764 cv
92.9949 97.1357 92.9022 97.062 92.9388 96.8582 cv
93.0668 96.8298 93.0189 96.8298 93.1476 96.8582 cv
93.217 96.3768 93.2157 96.3207 93.3968 95.939 cv
93.4933 95.9094 93.6113 95.9018 93.6901 95.8558 cv
93.5286 95.5302 93.8794 95.5334 93.815 95.1877 cv
94.2207 95.134 94.1683 94.6218 94.567 94.5606 cv
94.497 94.4086 94.567 94.2174 94.7771 94.2269 cv
94.808 94.0837 94.6061 94.1732 94.6509 94.0175 cv
94.9966 93.7651 95.2168 93.3859 95.3619 92.9311 cv
95.8868 92.5179 96.5776 92.0656 96.6981 91.3855 cv
97.3762 91.0606 97.5819 90.2638 98.2853 89.9654 cv
98.3547 89.8304 98.3068 89.7383 98.2853 89.5888 cv
98.7389 89.5692 98.7168 89.0721 99.1212 89.004 cv
99.5167 88.5214 100.045 88.1725 100.416 87.6672 cv
100.546 87.6357 100.496 87.7814 100.626 87.7505 cv
100.83 87.7454 100.805 87.5126 100.876 87.3745 cv
101.044 87.4035 101.115 87.3341 101.253 87.3328 cv
101.213 86.8931 101.947 86.837 101.92 86.4137 cv
102.21 86.4528 102.343 86.3348 102.38 86.121 cv
102.483 86.1266 102.582 86.1273 102.631 86.08 cv
103.189 85.4232 104.269 85.1709 104.846 84.6586 cv
104.932 84.641 104.957 84.6876 105.013 84.7009 cv
105.204 84.2952 105.894 84.2057 106.015 83.865 cv
106.871 83.8158 107.05 83.0909 107.979 83.113 cv
108.106 83.0733 108.153 82.9534 108.23 82.8625 cv
108.368 82.9351 108.414 82.8411 108.605 82.8625 cv
109.332 82.3888 110.278 82.1888 111.278 82.1522 cv
111.546 82.1422 111.814 82.115 112.073 82.1106 cv
112.761 82.0974 113.346 82.243 113.996 82.3194 cv
cp
ef
95.194 114.782 mo
95.2533 114.932 95.5625 115.008 95.7372 114.908 cv
95.7498 114.741 95.7397 114.598 95.6539 114.531 cv
95.3827 114.497 95.2388 114.591 95.194 114.782 cv
cp
95.6117 113.862 mo
95.7719 113.868 95.8855 113.673 95.905 113.444 cv
95.4975 113.024 95.1045 113.848 95.6117 113.862 cv
cp
95.8628 112.359 mo
95.7877 112.196 95.6962 112.051 95.4868 112.024 cv
95.0622 112.332 95.6413 112.776 95.8628 112.359 cv
cp
95.5278 111.314 mo
95.7845 111.285 95.8785 111.139 95.8628 110.938 cv
95.5625 110.793 95.4111 111.043 95.5278 111.314 cv
cp
95.4458 109.852 mo
95.5669 109.933 95.8741 109.911 95.8628 109.727 cv
95.8659 109.556 95.7088 109.547 95.5278 109.559 cv
95.5562 109.712 95.4382 109.72 95.4458 109.852 cv
cp
95.6539 108.599 mo
95.8016 108.604 95.8407 108.718 95.9889 108.724 cv
96.0261 108.553 96.1687 108.487 96.2381 108.348 cv
96.1649 108.24 95.9631 108.261 95.8211 108.223 cv
95.8211 108.349 95.7549 108.472 95.6539 108.599 cv
cp
95.8628 107.303 mo
95.9801 107.346 96.1876 107.449 96.281 107.387 cv
96.2381 107.248 96.3719 106.932 96.1971 106.927 cv
96.0577 107.025 95.9113 107.116 95.8628 107.303 cv
cp
96.1132 106.217 mo
96.3214 106.192 96.3485 106.372 96.5308 106.259 cv
96.4513 106.054 96.5813 106.1 96.6147 105.924 cv
96.3782 105.713 95.9706 105.934 96.1132 106.217 cv
cp
95.905 114.656 mo
95.9082 114.737 96.0596 114.592 96.1132 114.699 cv
96.1662 115.085 95.9038 115.156 95.6539 115.242 cv
95.6539 115.325 95.6539 115.409 95.6539 115.492 cv
95.8016 115.609 95.9416 115.733 96.1548 115.785 cv
96.1858 115.996 96.0514 116.043 95.9889 116.161 cv
95.712 116.13 95.712 115.823 95.4868 115.743 cv
95.4312 115.758 95.4205 115.816 95.3619 115.826 cv
95.3284 116.054 95.447 116.13 95.4868 116.286 cv
95.6653 116.284 95.7927 116.23 95.9454 116.202 cv
95.9788 116.281 96.0161 116.356 96.0293 116.453 cv
95.6375 116.699 95.295 116.449 94.9436 116.328 cv
94.9568 116.23 94.9871 116.147 95.0698 116.119 cv
95.0571 115.976 94.8477 116.033 94.818 115.91 cv
94.9833 115.741 95.1322 115.556 95.194 115.283 cv
95.1026 115.11 95.0168 114.932 94.818 114.866 cv
94.7575 114.343 95.1436 114.381 95.3619 114.071 cv
95.3284 113.915 95.2149 114.069 95.1524 113.988 cv
95.1915 113.707 95.0534 113.551 94.9859 113.278 cv
95.1953 113.237 95.2193 113.01 95.319 112.86 cv
95.2571 112.787 95.1392 112.903 95.0698 112.777 cv
95.0275 112.625 95.2571 112.741 95.2357 112.61 cv
95.2565 112.436 95.0401 112.498 94.9436 112.442 cv
95.0004 112.053 95.1808 111.788 95.4868 111.648 cv
95.1827 111.445 94.9316 111.06 95.1524 110.562 cv
95.2344 110.491 95.3871 110.49 95.4868 110.437 cv
95.4868 110.367 95.4868 110.297 95.4868 110.228 cv
95.3997 110.148 95.2874 110.093 95.1524 110.06 cv
95.242 109.744 95.1139 109.66 95.0698 109.393 cv
95.2962 109.394 95.4047 109.289 95.57 109.142 cv
95.5883 108.923 95.3417 108.907 95.4868 108.682 cv
95.3915 108.638 95.3385 108.551 95.194 108.556 cv
95.4432 108.401 95.4521 108.007 95.7788 107.93 cv
95.7486 107.681 95.6041 107.548 95.4458 107.429 cv
95.529 107.238 95.7057 107 95.6539 106.803 cv
95.9025 106.828 95.9416 106.644 96.0709 106.551 cv
95.9347 106.403 95.8495 106.461 95.6539 106.384 cv
95.7019 106.308 95.7624 106.243 95.8211 106.175 cv
95.7971 106.059 95.6596 106.058 95.57 106.008 cv
95.8363 105.47 96.3277 105.3 96.9081 105.548 cv
96.898 105.816 96.8576 106.021 96.9485 106.259 cv
96.792 106.436 96.6084 106.587 96.3649 106.677 cv
96.399 106.767 96.5485 106.744 96.6147 106.803 cv
96.621 106.906 96.5939 106.975 96.5308 107.011 cv
96.5315 107.135 96.7283 107.064 96.7819 107.136 cv
96.8021 107.366 96.5176 107.368 96.6564 107.596 cv
96.493 107.683 96.2747 107.717 96.1971 107.888 cv
96.3119 108.108 96.4753 108.278 96.5308 108.556 cv
96.2608 108.65 96.276 109.026 95.9889 109.1 cv
96.0552 109.242 96.1277 109.378 96.281 109.434 cv
96.3239 109.617 96.1397 109.571 96.1548 109.727 cv
96.2066 109.786 96.3138 109.79 96.3649 109.852 cv
96.2772 110.142 95.7959 110.036 95.8628 110.479 cv
95.9397 110.569 96.0148 110.661 96.1971 110.646 cv
96.1971 110.836 96.0022 111.053 96.1971 111.189 cv
96.1182 111.472 95.7076 111.424 95.7372 111.815 cv
96.1182 111.892 96.1958 112.156 96.1971 112.484 cv
96.0962 112.501 96.105 112.408 95.9889 112.442 cv
96.0823 112.82 95.8609 112.854 95.905 113.194 cv
95.9334 113.304 96.0949 113.283 96.1132 113.403 cv
96.1025 113.545 96.047 113.643 96.0709 113.821 cv
95.9252 113.885 95.8079 113.974 95.7372 114.113 cv
95.7776 114.282 95.9309 114.336 96.0709 114.406 cv
96.0457 114.519 95.9889 114.601 95.905 114.656 cv
cp
ef
106.308 142.648 mo
106.154 142.561 106.076 142.66 105.931 142.691 cv
105.588 143.141 105.353 143.7 105.18 144.32 cv
105.28 144.509 105.181 144.698 105.138 144.863 cv
105.261 144.962 105.478 144.968 105.472 145.197 cv
105.717 145.086 105.691 145.361 106.015 145.281 cv
106.082 144.931 106.554 144.984 106.767 144.78 cv
106.654 144.431 107.061 144.351 107.016 143.944 cv
107.556 143.837 107.064 143.072 107.476 142.773 cv
106.998 142.633 106.758 142.212 106.308 142.648 cv
cp
108.02 143.233 mo
108.049 143.346 107.934 143.315 107.895 143.359 cv
107.917 143.462 107.997 143.508 108.062 143.568 cv
108.04 143.769 107.97 143.922 107.854 144.028 cv
108.014 144.363 107.789 144.601 107.936 144.904 cv
107.765 144.954 107.705 145.118 107.56 145.197 cv
107.447 145.228 107.476 145.114 107.393 145.113 cv
106.926 145.749 104.772 146.08 105.013 144.863 cv
104.817 144.82 104.874 145.031 104.678 144.988 cv
104.579 144.944 104.767 144.796 104.636 144.738 cv
104.649 144.625 104.812 144.662 104.846 144.571 cv
104.642 144.467 104.545 144.259 104.47 144.028 cv
104.574 143.84 104.682 143.655 104.846 143.525 cv
104.737 143.216 104.287 143.346 104.51 142.899 cv
105.142 142.671 105.521 142.44 106.015 142.106 cv
106.241 142.148 106.266 142.184 106.516 142.148 cv
106.619 141.951 106.673 142.074 106.892 142.148 cv
107.095 142.215 107.342 142.197 107.393 142.231 cv
107.584 142.356 107.522 142.526 107.644 142.732 cv
107.766 142.936 108.033 143.029 108.02 143.233 cv
cp
ef
126.779 142.398 mo
126.731 142.363 126.667 142.342 126.57 142.356 cv
126.531 142.51 126.775 142.522 126.779 142.398 cv
cp
130.164 138.262 mo
130.08 138.262 129.996 138.262 129.913 138.262 cv
129.878 138.448 130.166 138.391 130.164 138.262 cv
cp
89.1774 125.811 mo
89.137 125.728 li
89.0758 125.751 88.92 125.68 88.9269 125.77 cv
88.9717 125.799 89.1193 125.933 89.1774 125.811 cv
cp
130.497 93.0566 mo
130.595 93.0427 130.677 93.0137 130.707 92.931 cv
130.651 92.9178 130.627 92.8718 130.54 92.8894 cv
130.55 92.9683 130.493 92.9815 130.497 93.0566 cv
cp
112.657 81.1075 mo
112.03 81.373 111.442 80.6066 110.903 81.1497 cv
110.611 80.9012 110.403 81.2349 109.941 81.1075 cv
109.909 81.2153 109.841 81.2847 109.733 81.3163 cv
109.682 81.2563 109.591 81.2374 109.482 81.233 cv
109.424 81.286 109.463 81.438 109.358 81.4418 cv
108.775 81.2021 108.484 81.9434 108.02 81.6923 cv
107.884 81.9736 107.648 82.1559 107.227 82.1522 cv
107.197 82.3812 107.079 82.291 106.976 82.4026 cv
106.848 82.4341 106.896 82.2878 106.767 82.3193 cv
106.519 82.4676 106.33 82.7496 106.057 82.9035 cv
105.826 83.0341 105.516 82.9994 105.262 83.113 cv
105.086 83.1931 104.886 83.5716 104.636 83.489 cv
104.582 83.6568 104.411 83.7091 104.218 83.7401 cv
104.157 83.8593 104.147 84.0302 104.009 84.0738 cv
103.328 84.3532 102.77 84.757 102.338 85.2856 cv
102.205 85.3102 102.209 85.2068 102.13 85.2856 cv
101.762 85.7828 100.994 85.8762 100.751 86.4969 cv
100.482 86.6048 100.267 86.7656 100.04 86.9152 cv
99.9833 87.0104 100.148 87.0716 100.04 87.0817 cv
99.9171 87.0969 99.8281 87.1486 99.748 87.2073 cv
99.748 87.2766 99.748 87.3467 99.748 87.4167 cv
99.4269 87.4009 99.6048 87.886 99.1632 87.7504 cv
99.0036 88.163 98.41 88.2703 98.1602 88.6279 cv
98.0775 88.7478 98.1261 89.0481 97.8687 88.9623 cv
97.7469 89.3137 97.4851 89.5269 97.1584 89.672 cv
96.9628 90.0619 96.7256 90.4101 96.2808 90.5496 cv
96.0197 90.8183 95.8386 91.1659 95.5698 91.4271 cv
95.5686 91.5255 95.6424 91.5501 95.6115 91.6775 cv
95.4418 91.6926 95.3509 91.9501 95.1939 91.8447 cv
95.3181 92.2667 94.8172 92.6964 94.4829 92.931 cv
94.546 92.9386 94.5226 93.032 94.5264 93.0982 cv
94.4608 93.1581 94.363 93.1859 94.2747 93.2238 cv
94.2627 93.3215 94.1933 93.396 94.2747 93.4742 cv
93.8621 93.6748 93.7511 94.1763 93.3972 94.435 cv
93.406 94.806 93.2104 94.9725 93.0634 95.1876 cv
93.0622 95.2854 93.1354 95.3106 93.1045 95.438 cv
92.7745 95.7075 92.748 96.2374 92.2705 96.4405 cv
92.2131 96.8695 92.2257 97.1666 91.8516 97.3597 cv
91.8181 97.53 91.8453 97.5042 91.8516 97.694 cv
91.7405 97.8701 91.5576 98.1199 91.6428 98.3621 cv
91.5456 98.3413 91.3671 98.5457 91.2674 98.6548 cv
91.3267 98.7198 91.4346 98.7375 91.3923 98.9059 cv
91.3544 98.9923 91.2699 99.0333 91.1418 99.0314 cv
91.2352 99.1986 91.1425 99.3431 90.974 99.3652 cv
91.0062 99.8856 90.6132 100.077 90.6403 100.619 cv
90.5785 100.64 90.535 100.681 90.4731 100.703 cv
90.4788 101.376 90.2372 101.836 89.9722 102.29 cv
90.2732 102.602 89.5344 102.87 89.8467 103.209 cv
89.7912 103.348 89.6694 103.422 89.5533 103.502 cv
89.8025 103.602 89.5445 103.644 89.513 103.752 cv
89.4757 103.871 89.5716 104 89.5533 104.128 cv
89.5193 104.376 89.3067 104.478 89.2196 104.629 cv
89.2688 104.692 89.3931 104.679 89.3874 104.796 cv
89.1666 104.924 89.2947 105.4 89.0102 105.465 cv
88.9862 105.601 89.0398 105.659 89.0531 105.757 cv
88.9723 105.775 88.9774 105.876 88.843 105.841 cv
89.0196 106.016 88.9187 106.267 88.9692 106.51 cv
88.6758 106.669 88.908 107.143 88.8853 107.47 cv
88.7351 107.487 88.6197 107.539 88.5932 107.679 cv
88.6121 107.8 88.7736 107.778 88.8014 107.888 cv
88.6733 107.947 88.6405 108.185 88.7604 108.264 cv
88.6985 108.286 88.655 108.326 88.5932 108.348 cv
88.6449 108.749 88.5244 109.593 88.3844 110.06 cv
88.655 110.253 88.3831 110.49 88.3017 110.687 cv
88.4702 110.967 88.4064 111.369 88.3017 111.606 cv
88.3888 111.671 88.421 111.792 88.467 111.899 cv
87.821 112.358 88.5736 113.121 88.1743 113.612 cv
88.3951 113.672 88.3522 113.99 88.2582 114.155 cv
88.3818 114.158 88.4146 114.251 88.467 114.322 cv
87.9932 114.641 88.5825 115.279 88.1743 115.659 cv
88.2285 115.731 88.3743 115.711 88.3844 115.826 cv
88.3307 116.116 88.262 116.743 88.467 116.996 cv
88.3989 117.08 88.3156 117.151 88.3017 117.289 cv
88.3042 117.396 88.4639 117.348 88.467 117.456 cv
88.3938 117.466 88.3717 117.528 88.3844 117.623 cv
88.5187 117.697 88.6758 117.748 88.7604 117.874 cv
88.6241 117.905 88.5017 117.949 88.3844 117.999 cv
88.3553 118.476 88.5118 118.929 88.467 119.335 cv
88.4935 119.408 88.6657 119.333 88.6771 119.42 cv
88.6392 119.493 88.5761 119.541 88.5509 119.628 cv
88.6058 119.709 88.7723 119.544 88.8014 119.712 cv
88.7969 119.819 88.6626 119.795 88.5509 119.795 cv
88.6512 120.031 88.7604 120.411 88.5099 120.589 cv
88.7162 120.636 88.6228 121.003 88.5932 121.174 cv
88.749 121.147 88.8323 121.108 88.8853 121.257 cv
88.7824 121.72 88.9061 122.14 88.7604 122.594 cv
89.0114 122.564 88.8323 122.899 88.843 123.012 cv
88.9137 123.081 89.031 123.103 89.0934 123.18 cv
89.0764 123.329 88.8512 123.271 88.843 123.431 cv
89.0127 123.484 89.1906 123.529 89.2196 123.723 cv
89.125 123.771 89.0947 123.701 89.0531 123.848 cv
89.3325 123.856 89.0865 124.227 89.2196 124.433 cv
89.171 124.495 89.0619 124.498 89.0102 124.559 cv
89.1755 124.617 89.2543 124.761 89.3874 124.851 cv
89.3256 125.208 89.4221 125.295 89.3452 125.687 cv
89.6366 125.724 89.5647 125.96 89.5962 126.187 cv
89.5357 126.253 89.3786 126.22 89.3874 126.355 cv
89.588 126.492 89.8883 126.77 89.7212 127.023 cv
89.8524 127.044 89.8921 127.159 89.93 127.274 cv
89.6366 127.469 90.0366 127.619 89.8883 127.942 cv
89.9615 128.05 90.0694 128.123 90.14 128.235 cv
90.1211 128.315 90.0189 128.31 90.0561 128.444 cv
90.1236 128.515 90.3186 128.46 90.306 128.611 cv
90.0164 129.019 90.6195 129.486 90.557 130.072 cv
90.6182 130.08 90.7116 130.058 90.7236 130.115 cv
90.7343 130.238 90.629 130.243 90.6403 130.366 cv
90.8283 130.623 91.1255 130.772 91.0579 131.285 cv
91.1898 131.265 91.2276 131.336 91.2674 131.41 cv
91.1942 131.448 91.1217 131.487 91.1418 131.618 cv
91.5494 131.68 91.3166 132.087 91.6011 132.162 cv
91.4724 132.272 91.574 132.415 91.6011 132.58 cv
91.6775 132.643 91.8345 132.624 91.8932 132.705 cv
91.9651 132.852 91.7847 133.055 91.7683 133.248 cv
92.2667 133.28 92.078 133.51 92.1866 133.875 cv
92.3651 133.824 92.5178 134.078 92.4786 134.293 cv
92.6963 134.325 92.8755 134.397 92.8124 134.71 cv
93.3385 135.033 93.3038 135.686 93.7738 136.089 cv
93.7183 136.117 93.6956 136.178 93.6905 136.257 cv
93.8091 136.359 93.987 136.405 94.0659 136.549 cv
94.0097 137.017 94.5346 137.05 94.3586 137.51 cv
94.71 137.619 94.7396 138.049 95.0273 138.22 cv
95.0279 138.318 94.9548 138.343 94.9857 138.471 cv
95.0746 138.506 95.1276 138.579 95.2778 138.554 cv
95.2633 138.764 95.421 138.801 95.5698 138.847 cv
95.5194 138.935 95.4134 138.969 95.4027 139.098 cv
95.5642 139.075 95.6071 139.172 95.7787 139.139 cv
95.7522 139.376 95.9458 139.39 96.0708 139.473 cv
96.0562 139.782 96.3048 139.824 96.4486 139.974 cv
96.4001 140.023 96.4001 140.122 96.4051 140.225 cv
96.8883 140.485 97.1407 141.135 97.4498 141.437 cv
97.834 141.429 97.8592 142.142 98.328 142.189 cv
98.3027 142.276 98.2396 142.324 98.2018 142.398 cv
98.7279 142.415 98.5891 143.098 99.0793 143.151 cv
99.114 143.268 99.02 143.258 99.0383 143.359 cv
99.0806 143.455 99.3367 143.339 99.372 143.443 cv
99.3872 143.886 99.8281 143.906 99.9991 144.194 cv
99.9083 144.187 99.9796 144.343 99.9562 144.404 cv
100.583 144.516 100.687 145.15 101.253 145.323 cv
101.24 145.432 101.005 145.411 101.127 145.531 cv
101.26 145.567 101.256 145.466 101.335 145.448 cv
101.369 145.775 101.762 145.744 101.795 146.075 cv
101.865 146.075 101.935 146.075 102.004 146.075 cv
102.056 146.176 102.108 146.278 102.13 146.408 cv
102.248 146.36 102.307 146.4 102.422 146.451 cv
102.422 146.521 102.422 146.589 102.422 146.659 cv
102.811 146.787 102.958 147.154 103.425 147.203 cv
103.626 147.67 104.175 147.789 104.344 148.288 cv
104.5 148.273 104.577 148.461 104.72 148.331 cv
104.783 148.38 104.784 148.488 104.845 148.539 cv
104.838 148.449 104.993 148.52 105.054 148.498 cv
105.087 148.673 105.278 148.691 105.305 148.874 cv
105.865 148.9 105.769 149.387 106.224 149.459 cv
106.203 149.59 106.283 149.622 106.308 149.709 cv
106.546 149.693 106.748 149.715 106.767 149.918 cv
107.25 150.132 107.595 150.482 108.062 150.712 cv
108.145 150.711 108.114 150.598 108.229 150.628 cv
109.077 151.315 110.303 151.596 111.321 152.007 cv
111.453 152.027 111.415 151.879 111.57 151.923 cv
111.637 152.026 111.817 152.012 111.864 152.132 cv
112.437 152.048 113.231 152.266 113.617 151.923 cv
113.688 151.993 113.864 151.957 113.995 151.966 cv
114.163 151.604 114.692 151.836 115.039 151.631 cv
115.144 151.29 115.731 151.432 115.833 151.088 cv
115.931 151.088 116.029 151.088 116.126 151.088 cv
116.174 151.025 116.178 150.917 116.251 150.879 cv
116.752 150.864 116.926 150.523 117.254 150.337 cv
117.782 150.433 117.909 149.766 118.466 149.751 cv
118.517 149.469 118.763 149.38 119.05 149.334 cv
119.079 149.195 119.114 149.062 119.342 149.125 cv
119.555 148.396 120.399 148.218 120.888 147.662 cv
120.971 147.662 120.941 147.776 121.056 147.746 cv
121.074 147.515 121.2 147.389 121.432 147.369 cv
121.433 147.271 121.359 147.246 121.39 147.119 cv
122.033 147.199 122.084 146.379 122.685 146.283 cv
122.593 145.934 122.889 145.707 123.228 145.657 cv
123.273 145.436 123.423 145.323 123.688 145.323 cv
123.774 145.046 124.024 144.933 124.272 144.821 cv
124.305 144.692 124.159 144.74 124.189 144.612 cv
124.319 144.617 124.307 144.481 124.483 144.528 cv
124.452 144.401 124.524 144.376 124.523 144.278 cv
125.035 144.204 124.931 143.516 125.526 143.525 cv
125.564 143.188 125.743 142.991 126.026 142.899 cv
125.972 142.592 126.23 142.6 126.404 142.523 cv
126.404 142.134 126.629 141.968 126.905 141.854 cv
126.964 141.385 127.46 141.352 127.531 140.893 cv
127.649 140.858 127.702 140.759 127.866 140.769 cv
127.891 140.445 128.241 140.447 128.158 140.016 cv
128.54 139.546 129.197 139.139 129.244 138.471 cv
129.374 138.432 129.5 138.391 129.579 138.303 cv
129.575 138.148 129.532 138.184 129.579 138.053 cv
129.769 137.993 129.889 137.862 129.871 137.593 cv
130.53 137.492 130.164 136.586 130.79 136.424 cv
130.621 136.316 130.933 136.191 131 136.006 cv
131.088 135.759 131.034 135.514 131.208 135.421 cv
131.358 135.446 131.332 135.293 131.459 135.295 cv
131.451 135.165 131.486 134.989 131.417 134.92 cv
131.478 134.898 131.522 134.858 131.583 134.836 cv
131.593 134.757 131.536 134.744 131.543 134.669 cv
132.06 134.059 132.335 133.205 132.711 132.454 cv
132.772 132.431 132.929 132.504 132.922 132.412 cv
132.847 132.374 132.844 132.266 132.796 132.203 cv
133.057 132.075 132.898 131.526 133.255 131.494 cv
133.205 131.222 133.236 131.069 133.548 131.076 cv
133.582 130.916 133.425 130.947 133.422 130.825 cv
133.534 130.608 133.854 130.373 133.673 130.115 cv
133.908 129.974 133.894 129.583 134.175 129.488 cv
134.175 129.376 134.175 129.265 134.175 129.154 cv
134.23 129.14 134.255 129.094 134.341 129.112 cv
134.276 128.698 134.686 128.445 134.508 128.026 cv
134.737 127.918 134.927 127.62 134.759 127.357 cv
134.84 127.34 134.792 127.195 134.926 127.232 cv
134.793 126.97 135.042 126.927 134.926 126.563 cv
135.012 126.472 135.062 126.6 135.135 126.522 cv
134.84 126.238 135.186 125.818 135.302 125.561 cv
135.093 125.549 135.141 125.075 135.345 125.102 cv
135.363 124.958 135.327 124.867 135.302 124.767 cv
135.39 124.742 135.438 124.679 135.511 124.642 cv
135.492 123.661 135.977 123.094 135.887 122.177 cv
135.991 122.155 136.035 122.075 136.097 122.01 cv
136.082 121.841 135.899 121.845 135.929 121.634 cv
136.065 121.546 136.405 121.663 136.347 121.383 cv
136.194 121.346 136.124 121.457 136.053 121.383 cv
136.269 121.093 135.942 120.699 136.305 120.422 cv
136.292 120.295 136.176 120.272 136.221 120.088 cv
136.322 120.105 136.314 120.011 136.429 120.046 cv
136.306 119.688 136.547 119.477 136.389 119.211 cv
136.474 119.198 136.499 119.127 136.556 119.085 cv
136.527 118.92 136.548 118.703 136.429 118.625 cv
136.565 118.417 136.528 118.259 136.724 118.082 cv
136.73 117.921 136.578 117.92 136.556 117.79 cv
136.802 117.41 136.376 117.091 136.724 116.871 cv
136.794 116.825 136.941 116.956 136.932 116.745 cv
136.75 116.663 136.746 116.402 136.64 116.244 cv
136.673 116.154 136.797 116.151 136.807 116.035 cv
136.805 115.856 136.623 115.857 136.597 115.701 cv
136.933 115.43 136.577 115.017 136.64 114.615 cv
136.668 114.532 136.888 114.641 136.848 114.489 cv
136.821 114.337 136.654 114.586 136.64 114.448 cv
136.782 114.247 136.527 113.889 136.764 113.737 cv
136.794 113.569 136.59 113.635 136.597 113.486 cv
136.562 113.327 136.687 113.325 136.764 113.278 cv
136.539 113.066 136.852 112.785 136.556 112.609 cv
136.607 112.521 136.713 112.488 136.724 112.358 cv
136.623 112.372 136.499 112.069 136.681 112.066 cv
136.587 111.936 136.468 111.614 136.681 111.524 cv
136.477 111.288 136.667 110.977 136.64 110.562 cv
136.393 110.49 136.515 110.047 136.305 109.935 cv
136.419 109.839 136.453 109.665 136.472 109.475 cv
136.362 109.488 136.292 109.46 136.305 109.35 cv
136.247 109.168 136.467 109.262 136.429 109.1 cv
136.386 108.977 136.272 108.925 136.181 108.849 cv
136.189 108.677 136.311 108.618 136.389 108.515 cv
136.262 108.517 136.176 108.477 136.137 108.39 cv
136.299 108.045 135.998 107.838 135.929 107.554 cv
136.019 107.272 135.918 106.811 135.762 106.551 cv
135.871 106.563 135.942 106.536 135.929 106.426 cv
135.793 106.324 135.672 106.211 135.637 106.008 cv
135.656 105.874 135.796 105.86 135.805 105.716 cv
135.611 105.713 135.498 105.631 135.47 105.465 cv
135.674 105.043 135.36 104.882 135.26 104.546 cv
135.322 104.523 135.475 104.595 135.47 104.504 cv
135.07 104.013 134.958 103.311 134.842 102.707 cv
134.972 102.711 134.967 102.581 134.968 102.457 cv
134.823 102.437 134.821 102.562 134.759 102.624 cv
134.638 102.439 134.6 102.171 134.467 101.997 cv
134.737 101.596 134.211 101.412 134.383 100.995 cv
134.33 100.936 134.18 100.976 134.175 100.869 cv
134.132 100.703 134.299 100.744 134.259 100.577 cv
134.102 100.532 134.139 100.681 134.007 100.66 cv
134.013 100.345 133.89 100.011 133.965 99.6989 cv
133.659 99.685 133.656 99.3677 133.505 99.198 cv
133.515 98.74 133.013 98.4397 132.838 98.0278 cv
132.803 97.9104 132.897 97.9205 132.878 97.8189 cv
132.825 97.7344 132.658 97.7615 132.628 97.6524 cv
132.592 97.5186 132.664 97.494 132.711 97.4435 cv
132.246 97.1849 132.295 96.4115 131.835 96.1478 cv
131.92 96.0651 131.83 95.8077 132.044 95.8557 cv
131.991 95.6443 131.68 95.6898 131.751 95.3548 cv
131.677 95.2488 131.491 95.2532 131.375 95.1876 cv
131.676 94.6356 130.63 94.5372 130.79 93.9341 cv
130.497 93.837 130.409 93.5348 130.164 93.3909 cv
130.19 93.0301 129.953 92.9335 129.745 92.8062 cv
129.707 92.3721 129.325 92.28 129.244 91.887 cv
128.895 91.7772 128.639 91.5728 128.576 91.1766 cv
128.393 91.1785 128.328 91.0624 128.2 91.0088 cv
128.074 90.4108 127.498 90.2625 127.197 89.8392 cv
127.209 89.783 127.257 89.7597 127.239 89.672 cv
127.023 89.6102 126.877 89.4777 126.696 89.3799 cv
126.695 89.1295 126.528 89.0462 126.361 88.9623 cv
126.2 88.9736 126.01 89.1124 125.902 89.0456 cv
126.208 88.8361 125.993 88.7257 125.86 88.4608 cv
125.777 88.4608 125.694 88.4608 125.61 88.4608 cv
125.561 88.2179 125.327 88.158 125.274 87.9176 cv
125.162 87.8867 125.192 88.0002 125.107 88.0009 cv
125.039 87.7214 124.746 87.6665 124.733 87.3328 cv
124.095 86.9802 123.456 86.6313 122.936 86.1625 cv
122.901 86.1146 122.881 86.0509 122.893 85.9537 cv
122.733 85.9462 122.586 85.9525 122.477 85.996 cv
122.446 85.608 122.007 85.6288 121.975 85.2434 cv
121.82 85.3513 121.614 85.0377 121.432 85.1608 cv
121.413 85.0806 121.342 85.0554 121.348 84.9513 cv
121.237 84.9513 121.125 84.9513 121.014 84.9513 cv
121.016 84.8529 120.941 84.8283 120.972 84.7009 cv
120.593 84.5513 120.334 84.2807 120.095 83.9905 cv
119.551 83.9205 119.168 83.6909 118.926 83.3218 cv
118.226 83.47 118.256 82.6909 117.671 82.8619 cv
117.387 82.4922 116.858 82.5975 116.584 82.1932 cv
116.454 82.1736 116.422 82.2531 116.335 82.2771 cv
116.219 82.1843 116.136 82.0576 116.043 81.9434 cv
115.611 81.9604 115.138 81.6841 114.747 81.5251 cv
114.633 81.4948 114.662 81.6084 114.58 81.609 cv
114.4 81.2728 113.631 81.5276 113.493 81.1497 cv
113.154 81.1769 112.921 81.3087 112.657 81.1075 cv
cp
87.9251 109.142 mo
87.9238 109.126 87.7743 108.904 87.7579 108.765 cv
87.8046 108.687 87.8071 108.564 87.9661 108.598 cv
87.9465 108.28 88.0967 108.039 87.9251 107.763 cv
88.0759 107.589 88.1352 107.111 88.009 107.011 cv
88.1831 106.809 88.1554 106.406 88.3844 106.259 cv
88.3074 105.914 88.303 105.547 88.467 105.381 cv
88.4109 105.18 88.3913 105.172 88.426 104.922 cv
88.5112 104.796 88.5963 104.928 88.7181 104.839 cv
88.7124 104.761 88.5774 104.813 88.5509 104.755 cv
88.9483 104.441 88.5679 103.583 89.0531 103.334 cv
89.084 103.206 88.9383 103.254 88.9692 103.125 cv
89.2707 102.674 89.2367 101.889 89.7212 101.621 cv
89.7098 101.459 89.6335 101.29 89.8467 101.245 cv
89.5584 100.733 90.1533 100.354 90.14 99.7828 cv
90.2082 99.7828 90.2776 99.7828 90.3482 99.7828 cv
90.2416 99.0359 90.858 98.764 90.7236 98.0278 cv
90.7892 98.0107 90.7595 97.8965 90.8914 97.9445 cv
90.8914 97.8189 90.8914 97.694 90.8914 97.5685 cv
91.3412 97.3824 91.1204 96.4847 91.7267 96.3572 cv
91.6995 96.3143 91.6308 96.3137 91.6428 96.2317 cv
91.6869 95.9592 91.9582 95.821 91.8516 95.5214 cv
92.3367 95.0873 92.6843 94.5151 92.9385 93.8508 cv
92.9751 93.8181 93.0325 93.8054 93.1045 93.8085 cv
93.1265 93.6774 92.9613 93.6982 93.0634 93.5991 cv
93.1934 93.6042 93.2628 93.548 93.3555 93.5165 cv
93.3303 93.4294 93.2918 93.3582 93.1473 93.3909 cv
93.3972 92.9165 93.9813 92.7771 94.1075 92.1791 cv
94.4387 91.9803 94.5826 91.5948 94.9434 91.4271 cv
94.9434 91.3431 94.9434 91.2593 94.9434 91.1766 cv
95.3667 90.4915 96.1452 90.0184 96.6978 89.3799 cv
96.9533 89.0853 97.2454 88.7806 97.3665 88.4191 cv
97.4706 88.11 98.1166 87.9668 98.369 87.6255 cv
98.5626 87.3637 98.5866 87.1542 98.8289 86.9568 cv
99.3405 86.7991 99.6471 86.4376 99.8729 85.996 cv
100.577 85.4326 101.489 85.0768 102.088 84.4081 cv
102.19 84.4138 102.289 84.4144 102.338 84.3665 cv
102.411 84.2706 102.456 84.1501 102.506 84.0321 cv
103.158 83.8322 103.413 83.4373 103.968 83.1969 cv
104.121 83.0707 104.148 82.8203 104.51 82.9035 cv
104.83 82.5692 105.407 82.4903 105.681 82.1105 cv
105.751 82.1105 105.819 82.1105 105.889 82.1105 cv
106.796 81.416 108.068 81.0867 109.19 80.606 cv
109.244 80.6646 109.387 80.6318 109.44 80.6898 cv
109.601 80.6841 109.605 80.5201 109.733 80.481 cv
110.324 80.6198 110.35 80.2488 110.945 80.3138 cv
110.95 80.3889 110.893 80.4022 110.903 80.481 cv
111.41 79.9606 112.372 80.6905 112.825 80.3555 cv
113.165 80.3668 113.33 80.6697 113.701 80.5226 cv
113.997 80.6469 114.189 80.8721 114.663 80.8154 cv
114.978 80.9163 115.248 81.0992 115.583 81.0659 cv
115.745 81.209 116.087 81.1756 116.126 81.4418 cv
117.202 81.6733 118.128 82.2323 119.008 82.7786 cv
119.161 82.7786 119.315 82.7786 119.469 82.7786 cv
120.005 83.2587 120.733 83.547 121.18 84.116 cv
122.074 84.4668 122.67 84.9696 123.436 85.3689 cv
124.063 86.1783 124.979 86.6956 125.777 87.3328 cv
125.856 87.411 125.852 87.3082 125.985 87.3328 cv
126.026 87.4596 126.069 87.5826 126.11 87.7088 cv
127.177 88.4519 127.891 89.5502 128.869 90.3824 cv
128.899 90.511 128.899 90.4631 128.869 90.5918 cv
129.507 90.9426 129.808 91.6296 130.289 92.1374 cv
130.289 92.2068 130.289 92.2769 130.289 92.3463 cv
130.654 92.468 130.682 92.9279 131.04 93.0566 cv
131.035 93.1342 131.013 93.196 130.957 93.2238 cv
131.332 93.5316 131.512 94.035 131.876 94.3517 cv
131.977 95.0318 132.276 95.5112 132.67 95.8979 cv
132.657 96.332 132.965 96.7238 133.297 96.942 cv
133.341 97.2045 133.459 97.3925 133.631 97.5275 cv
133.608 97.8423 133.699 98.0435 133.923 98.1116 cv
133.835 98.482 133.987 98.7406 134.3 98.822 cv
134.214 99.1286 134.556 99.1873 134.383 99.4484 cv
134.431 99.5399 134.527 99.5828 134.634 99.6156 cv
134.416 100.001 134.814 99.9745 134.759 100.409 cv
134.798 100.497 134.883 100.537 135.01 100.535 cv
135.041 100.664 134.895 100.616 134.926 100.744 cv
135.133 101.293 135.457 101.544 135.428 102.164 cv
135.431 102.272 135.592 102.224 135.595 102.331 cv
135.602 102.449 135.475 102.436 135.428 102.499 cv
135.504 102.617 135.673 102.644 135.762 102.749 cv
135.547 103.278 136.256 103.445 136.013 104.003 cv
136.05 104.064 136.046 104.165 136.181 104.128 cv
136.014 104.437 136.661 104.659 136.263 104.922 cv
136.389 105.145 136.406 105.476 136.64 105.59 cv
136.518 105.72 136.645 106.097 136.472 106.175 cv
136.716 106.386 136.908 106.74 136.681 107.094 cv
136.768 107.161 136.896 107.185 136.932 107.303 cv
136.973 107.482 136.728 107.376 136.724 107.512 cv
136.752 107.679 136.92 107.515 136.974 107.595 cv
136.958 108.001 136.856 108.497 137.016 108.724 cv
137.043 108.904 136.967 108.982 136.889 109.058 cv
136.922 109.234 137.126 109.24 137.182 109.393 cv
137.037 110.229 137.197 110.9 137.392 111.606 cv
137.436 111.762 137.234 111.673 137.267 111.815 cv
137.527 112.168 137.381 112.637 137.349 113.069 cv
137.315 113.536 137.615 114.112 137.267 114.448 cv
137.255 114.584 137.427 114.536 137.434 114.656 cv
137.427 115.168 137.576 115.464 137.392 115.868 cv
137.379 115.964 137.513 115.914 137.516 115.993 cv
137.527 116.501 137.408 116.71 137.224 116.955 cv
137.535 117.104 137.35 117.383 137.349 117.664 cv
137.434 117.79 li
137.402 117.899 137.281 117.914 137.267 117.999 cv
137.222 118.266 137.402 118.679 137.14 118.918 cv
137.154 118.975 137.245 118.953 137.308 118.96 cv
137.333 119.123 137.272 119.202 137.224 119.294 cv
137.248 119.388 137.289 119.243 137.349 119.335 cv
137.15 119.487 137.094 119.979 137.14 120.13 cv
137.166 120.294 136.911 120.179 136.807 120.213 cv
136.814 120.386 137.027 120.354 137.056 120.506 cv
137.02 120.579 137.043 120.714 136.974 120.756 cv
137.323 121.027 136.703 121.318 136.932 121.634 cv
136.92 121.774 136.791 121.8 136.681 121.843 cv
136.906 122.516 136.665 123.068 136.429 123.513 cv
136.401 123.724 136.585 123.722 136.597 123.89 cv
136.469 123.858 136.517 124.004 136.389 123.973 cv
136.482 124.518 136.154 124.596 136.263 125.102 cv
136.029 125.229 136.189 125.751 135.929 125.853 cv
136.009 125.94 135.977 126.139 136.053 126.23 cv
136.017 126.317 135.932 126.357 135.805 126.355 cv
135.773 126.483 135.876 126.478 135.845 126.605 cv
135.617 126.878 135.63 127.392 135.386 127.65 cv
135.385 127.971 135.462 128.194 135.218 128.318 cv
135.195 129.055 134.586 129.547 134.634 130.491 cv
134.438 130.545 134.29 130.648 134.341 130.95 cv
134.25 131.063 134.203 130.962 134.091 131.034 cv
134.08 131.157 134.185 131.162 134.175 131.285 cv
133.874 131.583 133.799 132.107 133.381 132.287 cv
133.438 132.419 133.585 132.23 133.631 132.329 cv
133.139 133.326 132.751 134.135 132.378 135.086 cv
132.257 135.16 132.176 135.276 132.17 135.462 cv
131.993 135.5 131.957 135.587 131.835 135.588 cv
131.883 135.969 131.693 136.402 131.333 136.507 cv
131.353 136.886 130.97 137.157 130.875 137.551 cv
130.755 137.517 130.765 137.61 130.664 137.593 cv
130.555 137.654 130.818 137.687 130.748 137.844 cv
130.476 138.198 130.237 138.585 129.871 138.847 cv
129.949 139.439 129.114 139.571 129.203 140.184 cv
129.106 140.24 128.966 140.253 128.869 140.309 cv
128.767 140.74 128.621 140.921 128.325 141.103 cv
128.343 141.183 128.416 141.208 128.408 141.312 cv
127.922 141.535 127.829 142.153 127.239 142.272 cv
127.17 142.551 126.977 142.706 126.905 142.983 cv
126.72 143.047 126.694 143.07 126.529 143.192 cv
126.421 143.892 125.657 143.935 125.526 144.612 cv
125.112 144.909 124.924 145.43 124.399 145.615 cv
124.297 146.154 123.829 146.327 123.604 146.743 cv
123.52 146.743 123.436 146.743 123.353 146.743 cv
122.784 147.498 121.814 147.85 121.224 148.582 cv
121.105 148.616 121.114 148.522 121.014 148.539 cv
120.628 149.129 119.881 149.355 119.51 149.96 cv
119.413 149.96 119.315 149.96 119.218 149.96 cv
119.078 149.961 119.176 150.196 119.092 150.253 cv
118.556 150.238 118.447 150.846 117.88 150.92 cv
117.807 150.959 117.804 151.067 117.755 151.129 cv
117.215 151.13 116.642 151.785 116.167 151.923 cv
115.34 152.164 114.419 152.935 113.576 152.842 cv
112.751 152.753 111.209 153.184 110.736 152.759 cv
110.003 152.609 108.988 152.69 108.688 152.007 cv
108.509 152.011 108.344 152.001 108.439 151.839 cv
108.037 152.024 108.052 151.49 107.644 151.547 cv
107.549 151.378 107.412 151.251 107.184 151.213 cv
107.166 151.133 107.065 151.137 107.1 151.004 cv
106.024 150.536 105.341 149.674 104.344 149.125 cv
104.121 148.762 103.841 148.457 103.341 148.372 cv
103.184 147.985 102.705 147.921 102.548 147.537 cv
102.092 147.529 101.791 147.155 101.754 146.868 cv
101.3 146.625 101.007 146.221 100.5 146.032 cv
100.172 145.441 99.7215 144.973 99.1632 144.612 cv
99.0913 144.225 98.692 144.164 98.6201 143.776 cv
98.1343 143.608 97.9848 143.103 97.5337 142.899 cv
97.5211 142.536 97.2612 142.42 97.0322 142.272 cv
97.0271 142.17 97.0259 142.071 97.0744 142.022 cv
96.6064 141.835 96.542 141.244 96.113 141.019 cv
96.0878 140.886 96.1906 140.89 96.113 140.81 cv
95.4677 140.203 94.8734 139.543 94.4425 138.721 cv
94.4255 138.585 94.2438 138.614 94.1498 138.554 cv
94.1668 138.454 94.0728 138.463 94.1075 138.346 cv
93.5927 138.178 93.6142 137.474 93.1884 137.217 cv
93.0698 136.891 92.9171 136.598 92.7285 136.34 cv
92.6938 136.222 92.7884 136.232 92.7707 136.131 cv
92.3525 135.923 92.3506 135.298 91.9348 135.086 cv
91.9178 134.783 91.6245 134.535 91.7683 134.209 cv
91.5355 134.149 91.5122 133.88 91.35 133.75 cv
91.4175 133.678 91.432 133.554 91.5185 133.499 cv
90.9507 133.216 90.8371 132.48 90.6403 131.828 cv
90.5842 131.758 90.4548 131.764 90.3892 131.702 cv
90.3703 131.571 90.5022 131.592 90.5141 131.494 cv
90.3426 130.853 89.7565 130.494 89.8044 129.864 cv
89.6694 129.752 89.5546 129.433 89.6795 129.195 cv
89.4392 129.057 89.3243 128.433 89.5962 128.318 cv
89.5357 128.225 89.3477 128.26 89.2613 128.193 cv
89.2499 127.987 89.2442 127.786 89.3874 127.734 cv
89.337 127.519 89.0985 127.492 89.0102 127.315 cv
89.118 126.775 88.6266 126.254 88.7181 125.811 cv
88.6771 125.7 88.549 125.673 88.467 125.603 cv
88.6449 124.76 87.9383 124.477 88.467 123.806 cv
88.4639 123.699 88.3276 123.723 88.2178 123.723 cv
88.2582 123.422 88.2967 123.167 88.3844 123.012 cv
88.3358 122.879 88.1289 122.905 88.05 122.803 cv
88.1989 122.52 88.0096 122.132 88.1339 121.8 cv
88.1219 121.713 88.0216 121.861 87.9661 121.759 cv
88.332 121.431 87.5668 120.884 88.05 120.589 cv
87.7358 120.364 87.9352 119.823 87.7989 119.42 cv
87.8746 119.414 87.8872 119.471 87.9661 119.461 cv
87.9983 119.262 87.8248 119.269 87.715 119.211 cv
87.7011 118.821 87.7264 118.595 87.5907 118.333 cv
87.5819 118.186 87.7308 118.196 87.7579 118.082 cv
87.681 117.618 87.4848 117.25 87.715 116.871 cv
87.4942 116.306 87.568 115.633 87.6324 115.074 cv
87.7037 114.445 87.4034 113.768 87.674 113.236 cv
87.5649 113.137 87.4677 112.77 87.6324 112.651 cv
87.5163 112.499 87.4318 112.219 87.5485 112.066 cv
87.4602 111.91 87.44 111.847 87.4229 111.69 cv
87.8343 110.998 87.5756 109.683 87.7579 109.058 cv
87.8923 109.006 87.7901 109.193 87.9251 109.142 cv
cp
ef
112.741 83.0294 mo
112.608 83.2029 112.496 83.3972 112.282 83.4893 cv
112.298 83.6439 112.289 83.7745 112.157 83.7814 cv
112.182 83.8679 112.221 83.9398 112.365 83.907 cv
112.389 84.0426 112.337 84.1013 112.323 84.1997 cv
112.834 84.3738 113.099 83.743 113.618 83.5726 cv
113.76 83.5568 113.685 83.7581 113.869 83.6975 cv
113.867 83.9738 113.67 84.0546 113.576 84.2413 cv
113.682 84.5568 113.726 84.8179 113.912 85.1182 cv
113.55 85.3075 113.158 85.0059 112.867 84.8678 cv
112.519 84.7037 112.438 84.922 112.282 85.286 cv
112.424 85.5743 112.842 85.5882 112.825 86.038 cv
112.741 86.1213 li
112.132 86.0797 111.763 86.1989 110.944 86.1629 cv
111.043 85.7169 111.435 85.5668 111.53 85.1182 cv
111.378 85.0469 111.3 84.9031 111.154 84.8261 cv
111.031 84.8148 111.025 84.9208 110.903 84.9094 cv
110.903 84.9927 110.903 85.0766 110.903 85.1605 cv
110.602 85.0646 110.201 85.5964 109.901 85.2438 cv
109.868 85.1012 110.071 85.1908 110.025 85.035 cv
109.755 84.9454 109.974 84.635 110.109 84.5751 cv
109.894 84.442 110.016 83.9732 109.775 83.8654 cv
109.813 83.6812 110.042 83.6855 110.068 83.4893 cv
110.397 83.4969 110.692 83.7051 110.61 83.9909 cv
110.876 83.8931 111.143 84.2009 111.404 83.9909 cv
111.316 83.8395 111.316 83.7657 111.404 83.6143 cv
111.413 83.4395 111.2 83.4849 111.236 83.2805 cv
111.038 83.3259 110.984 83.2269 110.903 83.155 cv
110.917 82.9607 111.14 82.9739 111.236 82.8622 cv
111.686 83.0648 112.011 82.7209 112.449 82.8622 cv
112.518 82.8843 112.595 83.0654 112.741 83.0294 cv
cp
ef
116.836 86.372 mo
116.831 86.4749 116.829 86.5726 116.877 86.6225 cv
117.032 86.5682 117.164 86.6174 117.254 86.5809 cv
117.266 86.4073 117.199 86.4181 117.254 86.2881 cv
117.067 86.2692 116.949 86.3178 116.836 86.372 cv
cp
116.126 86.2465 mo
116.259 86.2408 116.31 86.1519 116.293 85.996 cv
116.235 85.9979 116.2 85.9758 116.166 85.9538 cv
116.104 86.0131 116.035 86.1569 116.126 86.2465 cv
cp
117.17 85.9122 mo
117.272 85.8888 117.384 85.8762 117.379 85.7456 cv
117.349 85.7122 117.147 85.6522 117.128 85.7456 cv
117.19 85.7532 117.167 85.8459 117.17 85.9122 cv
cp
116.126 85.8705 mo
116.276 85.7841 116.404 85.6756 116.585 85.6194 cv
116.611 85.6642 116.761 85.8863 116.752 85.7033 cv
116.639 85.6775 116.693 85.485 116.626 85.4113 cv
116.394 85.4977 116.084 85.5078 116.126 85.8705 cv
cp
117.797 86.2465 mo
117.506 86.3367 117.435 86.4963 117.421 86.7903 cv
116.736 87.1871 116.139 86.8086 115.707 86.4137 cv
115.729 86.2686 115.821 86.1929 115.875 86.08 cv
115.398 85.6138 116.414 84.8283 117.002 85.0353 cv
117.354 85.1583 117.309 85.5298 117.629 85.6194 cv
117.546 85.9065 117.809 85.933 117.797 86.2465 cv
cp
ef
107.227 86.5808 mo
107.103 86.5373 107.104 86.3695 106.892 86.4136 cv
106.864 86.584 107.117 86.6868 107.227 86.5808 cv
cp
107.686 86.4559 mo
107.783 86.4427 107.733 86.5764 107.811 86.5808 cv
107.954 86.5013 107.986 86.3102 108.062 86.1626 cv
108.045 86.1102 108.008 86.0774 107.936 86.08 cv
107.867 86.2181 107.745 86.3052 107.686 86.4559 cv
cp
106.6 85.9121 mo
106.832 85.9159 106.659 86.1373 106.808 86.1626 cv
106.998 85.9626 107.05 85.6245 107.393 85.5778 cv
107.543 85.5834 107.761 85.8175 107.854 85.6194 cv
107.381 85.3071 106.829 85.4667 106.6 85.9121 cv
cp
108.395 85.5778 mo
108.375 85.6825 108.316 85.75 108.271 85.8289 cv
108.7 86.483 108.061 86.8584 107.519 87.0817 cv
107.102 87.254 106.837 86.8918 106.516 86.748 cv
106.571 86.3064 106.295 85.9992 106.475 85.4945 cv
106.824 85.2554 107.423 85.0743 107.854 85.1608 cv
107.914 85.4207 108.281 85.3734 108.395 85.5778 cv
cp
ef
96.5728 104.797 mo
96.7325 104.816 96.8328 104.779 96.8649 104.672 cv
96.7653 104.582 96.5381 104.622 96.5728 104.797 cv
cp
97.4081 102.206 mo
97.4018 102.394 97.5967 102.38 97.7847 102.373 cv
97.8018 102.272 97.7078 102.283 97.7425 102.165 cv
97.6226 102.17 97.4693 102.142 97.4081 102.206 cv
cp
97.8257 101.078 mo
97.8995 101.117 97.9715 101.156 97.9519 101.287 cv
98.0352 101.287 98.1191 101.287 98.2017 101.287 cv
98.2093 101.086 98.008 101.091 98.0774 100.828 cv
97.8775 100.796 97.885 100.97 97.8257 101.078 cv
cp
98.2856 99.8664 mo
98.2932 99.9837 98.3588 100.044 98.4951 100.034 cv
98.5935 99.9446 98.408 99.7352 98.2856 99.8664 cv
cp
101.754 99.3655 mo
101.653 99.115 101.198 99.3093 101.378 99.5743 cv
101.79 99.585 102.013 99.5257 102.38 99.5743 cv
102.369 99.4519 102.475 99.4456 102.464 99.3232 cv
102.235 99.2853 101.919 99.2361 101.754 99.3655 cv
cp
98.7878 98.9056 mo
98.9531 98.9056 li
99.0029 98.8564 99.0023 98.7579 98.9966 98.6552 cv
98.7405 98.6154 98.6528 98.7655 98.7878 98.9056 cv
cp
101.419 98.864 mo
101.75 98.7441 102.027 99.0185 102.171 98.6968 cv
101.818 98.5763 101.509 98.3801 101.419 98.864 cv
cp
99.3303 97.652 mo
99.4521 97.6414 99.4597 97.7467 99.5808 97.736 cv
99.5808 97.6249 99.5965 97.4969 99.5398 97.4432 cv
99.3663 97.4098 99.3253 97.507 99.3303 97.652 cv
cp
100.543 95.4794 mo
100.714 95.6188 101.01 95.3954 100.919 95.2712 cv
100.712 95.2598 100.511 95.2542 100.543 95.4794 cv
cp
101.378 95.4794 mo
101.529 95.4781 101.707 95.5034 101.754 95.3961 cv
101.662 95.3059 101.702 95.0845 101.461 95.145 cv
101.346 95.2377 101.343 95.3192 101.378 95.4794 cv
cp
101.335 94.6857 mo
101.505 94.6284 101.468 94.7766 101.586 94.769 cv
101.634 94.7198 101.633 94.622 101.629 94.5186 cv
101.574 94.4612 101.447 94.4776 101.335 94.4769 cv
101.335 94.5463 101.335 94.6163 101.335 94.6857 cv
cp
102.171 94.4347 mo
102.235 94.5015 102.41 94.4965 102.38 94.3514 cv
102.297 94.265 102.202 94.3502 102.171 94.4347 cv
cp
102.965 92.8064 mo
103.17 92.8815 103.246 92.5888 103.09 92.5554 cv
103.033 92.6229 102.943 92.6575 102.965 92.8064 cv
cp
103.633 91.7195 mo
103.633 91.7895 103.633 91.8589 103.633 91.9283 cv
103.748 91.9951 103.886 92.038 104.051 92.0538 cv
104.24 91.7453 103.854 91.5182 103.633 91.7195 cv
cp
104.47 91.1763 mo
104.573 91.2116 104.693 91.2311 104.845 91.2179 cv
104.773 91.0955 104.734 90.941 104.51 90.9675 cv
104.476 91.0161 104.455 91.0792 104.47 91.1763 cv
cp
105.346 90.4243 mo
105.407 90.4476 105.448 90.4893 105.472 90.5499 cv
105.662 90.5877 105.708 90.4805 105.848 90.4659 cv
105.811 90.295 105.593 90.3026 105.513 90.1732 cv
105.423 90.2218 105.379 90.3177 105.346 90.4243 cv
cp
106.392 89.7562 mo
106.524 89.8187 106.67 89.7581 106.725 89.6307 cv
106.609 89.584 106.402 89.584 106.392 89.7562 cv
cp
107.352 89.0875 mo
107.396 89.2515 107.439 89.4187 107.644 89.4219 cv
107.787 89.1777 107.549 88.8774 107.352 89.0875 cv
cp
109.44 88.1267 mo
109.588 88.1488 109.655 88.0914 109.691 88.0012 cv
109.606 87.9469 109.615 87.7986 109.44 87.834 cv
109.44 87.9318 109.44 88.0289 109.44 88.1267 cv
cp
112.784 87.7084 mo
112.855 87.7286 113.202 87.7267 113.325 87.6668 cv
113.273 87.2372 112.917 87.5432 112.784 87.7084 cv
cp
110.485 87.458 mo
110.454 87.5867 110.599 87.5388 110.569 87.6668 cv
110.69 87.6485 110.759 87.5791 110.777 87.458 cv
110.722 87.3987 110.541 87.3987 110.485 87.458 cv
cp
111.78 87.2492 mo
111.794 87.164 111.893 87.1672 111.906 87.082 cv
111.835 87.082 111.765 87.082 111.696 87.082 cv
111.685 87.1772 111.707 87.2391 111.78 87.2492 cv
cp
98.9966 97.9871 mo
98.9695 98.1384 99.0824 98.1511 99.2048 98.1536 cv
99.283 98.1473 99.2313 98.0123 99.2887 97.9871 cv
99.2256 97.77 99.0181 98.0394 98.9531 97.9442 cv
99.0086 97.7095 98.7745 97.7625 98.8288 97.5272 cv
98.8237 97.3127 99.1196 97.3997 99.0799 97.1505 cv
99.3057 97.1404 99.4615 97.0287 99.8319 97.0673 cv
99.7959 96.9083 99.6615 96.8471 99.5398 96.7745 cv
99.6338 96.6553 99.4615 96.4843 99.6641 96.4408 cv
99.6533 96.355 99.4792 96.4307 99.4969 96.3152 cv
99.5536 95.9115 100.07 95.9689 100.249 95.6888 cv
99.9303 95.48 100.371 95.2611 100.249 95.0201 cv
100.531 95.0233 100.583 94.7961 100.835 94.769 cv
100.841 93.9123 101.643 93.8511 102.213 93.5578 cv
102.114 93.308 101.971 93.5817 101.754 93.5578 cv
101.808 93.1528 102.223 93.1093 102.631 93.0569 cv
102.562 92.9023 102.384 92.8582 102.38 92.6386 cv
102.468 92.6146 102.5 92.5345 102.631 92.5554 cv
102.555 92.2986 102.919 92.1938 103.258 92.221 cv
103.372 92.0059 103.282 91.8336 103.341 91.5523 cv
103.623 91.4728 103.88 91.3668 104.134 91.2596 cv
104.1 90.8905 104.37 90.8262 104.386 90.5082 cv
104.647 90.6868 104.721 90.3732 105.053 90.5082 cv
105.083 90.353 104.983 90.3284 105.013 90.1732 cv
105.171 89.9001 105.66 89.9581 105.973 89.8395 cv
105.801 89.0906 106.901 89.3064 106.976 88.6699 cv
107.207 88.6327 107.506 88.4623 107.895 88.4604 cv
107.933 88.1646 108.215 88.1135 108.313 87.8763 cv
108.972 87.9791 109.097 87.5854 109.524 87.3748 cv
109.688 87.3646 109.741 87.4637 109.859 87.4996 cv
110.056 86.9236 110.67 86.829 111.195 86.9565 cv
111.175 86.7823 111.219 86.6738 111.279 86.5811 cv
111.654 86.4934 112.515 86.5388 112.24 87.2075 cv
112.57 87.4252 112.804 86.9003 113.242 86.9565 cv
113.375 87.0889 113.426 87.3022 113.66 87.3325 cv
113.569 87.7557 113.393 88.0958 113.033 88.2516 cv
112.776 88.0901 112.481 88.0781 112.365 87.7084 cv
112.405 87.6227 112.581 87.6731 112.573 87.5413 cv
112.614 87.3905 112.394 87.499 112.365 87.4164 cv
111.973 87.639 111.729 87.8289 111.279 87.6252 cv
111.084 87.6384 111.123 87.8864 111.029 88.0012 cv
110.697 87.9917 110.492 87.9595 110.068 87.9179 cv
110.034 88.0624 110.13 88.0781 110.109 88.21 cv
109.859 88.6175 108.721 88.3027 108.898 89.0042 cv
108.73 89.0881 108.514 89.2484 108.271 89.1292 cv
108.084 89.5064 107.742 89.9285 107.101 89.7139 cv
107.071 89.842 107.173 89.837 107.144 89.965 cv
107.072 90.0609 106.988 90.1442 106.892 90.2155 cv
106.761 90.1202 106.518 90.2496 106.349 90.1732 cv
106.046 90.5991 105.852 91.1447 105.096 91.0091 cv
105.332 91.1921 105.045 91.4822 104.97 91.7195 cv
104.761 91.6532 104.575 91.7901 104.426 91.6362 cv
104.317 91.8008 104.444 92.1409 104.386 92.2626 cv
104.149 92.2216 104.146 92.4128 104.051 92.5131 cv
103.922 92.5446 103.971 92.3989 103.842 92.4298 cv
103.759 92.5554 li
104.159 92.614 104.317 92.9168 104.761 92.9313 cv
104.881 92.8834 104.899 92.7339 105.013 92.6809 cv
105.179 92.6664 105.244 92.7553 105.429 92.7225 cv
105.527 93.1969 106.282 93.4953 106.392 94.0587 cv
106.431 94.2713 106.642 94.241 106.433 94.4347 cv
106.425 94.5817 106.573 94.5728 106.6 94.6857 cv
106.354 95.0561 106.75 95.7696 106.474 96.0648 cv
106.265 96.1064 li
106.118 96.22 106.144 96.5563 105.932 96.4824 cv
105.956 96.6181 105.903 96.6768 105.889 96.7745 cv
105.64 96.7335 105.534 96.8364 105.429 96.9423 cv
105.057 96.9802 104.701 96.8925 104.386 96.8585 cv
104.25 96.6591 103.953 96.374 103.801 96.0648 cv
103.88 95.8491 103.908 95.61 104.009 95.5217 cv
103.974 95.4592 103.904 95.4321 103.801 95.4377 cv
103.826 95.0176 104.37 95.1147 104.51 94.8113 cv
104.708 94.8214 104.785 94.8283 104.886 94.8529 cv
104.923 94.986 104.821 94.9822 104.804 95.0618 cv
104.84 95.1652 105.094 95.0497 105.137 95.145 cv
104.83 95.2882 104.538 95.8503 105.137 95.8976 cv
105.336 95.7052 105.481 95.4611 105.681 95.2712 cv
105.596 95.0378 105.672 94.8428 105.389 94.769 cv
105.384 94.6397 105.52 94.6505 105.472 94.4769 cv
105.313 94.3716 105.088 94.3312 105.053 94.101 cv
104.77 94.0618 104.582 94.1924 104.26 94.101 cv
104.173 94.1262 104.103 94.1653 104.134 94.3098 cv
103.529 94.4429 103.209 94.8611 102.881 95.2712 cv
103.006 95.4377 li
102.793 95.7866 102.707 95.9361 102.757 96.4824 cv
102.623 96.5153 102.574 96.6339 102.464 96.6913 cv
102.587 96.8464 102.606 97.1057 102.631 97.36 cv
102.5 97.4886 102.408 97.5474 102.422 97.736 cv
102.186 97.7694 102.187 97.2079 102.38 97.1928 cv
102.183 96.8616 102.318 96.5752 102.213 96.2736 cv
102.316 96.2503 102.302 96.1115 102.464 96.1481 cv
102.432 96.027 102.266 96.0402 102.297 95.8553 cv
102.353 95.7311 102.501 95.6983 102.589 95.6049 cv
102.336 95.3898 102.534 95.0315 102.923 95.0201 cv
103.131 94.3514 103.738 94.0807 104.302 93.7672 cv
104.443 93.7508 104.481 93.8392 104.553 93.8922 cv
104.712 93.8701 104.828 93.8051 104.97 93.7672 cv
105.335 93.9457 105.578 94.2448 105.848 94.5186 cv
105.908 94.9261 105.956 95.0857 106.016 95.4794 cv
105.985 95.6453 105.769 95.6232 105.848 95.8976 cv
105.693 95.8989 105.4 95.9292 105.389 96.1897 cv
104.96 96.273 104.833 95.9897 104.426 96.0225 cv
104.349 95.7954 104.477 95.6478 104.426 95.4377 cv
104.27 95.4194 104.232 95.5204 104.134 95.5633 cv
104.257 95.6882 104.226 95.9342 104.134 96.0648 cv
104.408 96.367 104.865 96.7777 105.305 96.5241 cv
105.396 96.4717 105.477 96.3071 105.64 96.1481 cv
105.966 95.8257 106.345 95.5759 106.392 95.0618 cv
106.245 94.887 106.045 94.412 106.14 94.1842 cv
105.961 94.017 105.701 93.9287 105.64 93.6411 cv
105.556 93.6411 105.472 93.6411 105.389 93.6411 cv
105.423 93.5231 105.33 93.5332 105.346 93.4329 cv
104.817 93.2651 104.404 93.4877 103.884 93.3073 cv
103.623 93.5104 103.339 93.8492 103.006 93.8505 cv
102.938 93.8436 102.938 94.1079 103.006 94.101 cv
102.565 94.451 102.098 94.9583 102.13 95.6472 cv
101.952 95.5948 102.018 95.7859 101.921 95.8137 cv
101.91 95.9639 102.046 95.967 102.046 96.1064 cv
101.95 96.1639 101.948 96.3146 101.838 96.3569 cv
101.861 96.7657 101.903 97.006 101.878 97.5272 cv
101.78 97.5883 101.801 97.6148 101.67 97.5682 cv
101.777 97.7139 101.776 97.9296 101.629 98.0281 cv
101.776 98.0754 101.931 98.1145 102.046 98.1953 cv
102.094 98.129 102.121 97.8003 102.422 97.8609 cv
102.526 98.1088 102.403 98.5365 102.881 98.6552 cv
103.104 99.0822 102.878 99.3497 102.798 99.7831 cv
102.666 99.7762 102.658 99.8935 102.505 99.8664 cv
102.326 100.379 102.114 100.861 102.38 101.245 cv
101.911 101.626 102.753 102.399 102.088 102.749 cv
102.289 103.496 102.175 104.265 102.004 104.838 cv
102.08 105.331 102.151 105.62 102.13 106.092 cv
102.008 106.138 101.846 106.143 101.838 106.301 cv
101.683 106.218 101.606 106.058 101.586 105.841 cv
101.651 105.795 101.674 105.706 101.794 105.716 cv
101.771 105.69 101.698 105.518 101.794 105.507 cv
101.777 105.401 101.615 105.437 101.586 105.34 cv
101.557 105.185 101.733 105.235 101.794 105.173 cv
101.688 104.691 101.881 104.404 101.754 103.835 cv
101.791 103.804 101.847 103.791 101.921 103.794 cv
101.943 103.631 101.74 103.696 101.711 103.585 cv
102.071 103.025 101.761 101.733 102.046 101.203 cv
101.87 101.047 102.022 100.7 101.921 100.41 cv
101.981 100.303 102.138 100.293 102.088 100.075 cv
102.027 99.9604 101.887 100.054 101.794 99.908 cv
101.579 99.9705 101.578 100.247 101.419 100.368 cv
101.567 100.576 101.458 100.786 101.629 100.953 cv
101.442 101.256 101.454 101.682 101.67 101.914 cv
101.633 102.044 101.473 102.051 101.419 102.165 cv
101.567 102.413 101.238 102.735 101.502 102.791 cv
101.475 103.065 101.314 103.513 101.586 103.627 cv
101.547 103.781 101.507 103.937 101.419 104.045 cv
101.442 104.161 101.564 104.179 101.586 104.295 cv
101.48 104.44 101.445 104.655 101.253 104.713 cv
101.271 104.861 101.44 104.86 101.419 105.048 cv
101.432 105.227 101.248 105.21 101.211 105.34 cv
101.463 105.489 101.41 105.824 101.461 106.092 cv
101.392 106.262 101.284 106.135 101.211 106.301 cv
101.313 106.473 101.328 106.764 101.168 106.885 cv
101.532 107.108 101.002 107.537 101.378 107.721 cv
101.248 107.901 101.112 108.262 101.378 108.389 cv
101.384 108.536 101.236 108.527 101.211 108.64 cv
101.198 108.75 101.372 108.673 101.335 108.808 cv
101.311 108.991 101.071 108.96 101.084 109.184 cv
101.051 109.384 101.268 109.334 101.211 109.559 cv
101.132 109.606 101.012 109.613 100.919 109.643 cv
100.879 109.529 100.817 109.438 100.709 109.392 cv
100.723 109.252 100.848 109.225 100.959 109.184 cv
101.037 108.741 100.88 108.422 100.875 108.097 cv
100.873 107.883 100.999 107.705 101.002 107.512 cv
101.004 107.287 100.794 107.085 100.875 106.802 cv
101.002 106.718 li
101.085 106.304 101.016 105.969 101.043 105.59 cv
101.063 105.46 100.938 105.473 100.875 105.424 cv
100.907 105.301 101.003 105.243 101.084 105.173 cv
100.941 104.809 100.851 104.54 101.084 104.212 cv
101.118 104.039 100.885 104.133 100.919 103.961 cv
101.164 103.985 101.308 103.905 101.335 103.71 cv
101.334 103.572 101.1 103.668 101.043 103.585 cv
101.081 103.455 101.148 103.354 101.211 103.25 cv
101.229 103.065 100.979 103.147 101.043 102.917 cv
101.068 102.803 101.158 102.753 101.294 102.749 cv
101.187 102.06 101.275 101.7 101.211 100.994 cv
101.248 100.962 101.304 100.95 101.378 100.953 cv
101.361 100.789 101.193 100.774 101.168 100.618 cv
101.414 99.9799 100.825 99.7125 100.919 99.2399 cv
100.931 99.1434 100.796 99.1938 100.792 99.1144 cv
100.771 98.7794 101.079 98.7693 101.002 98.4873 cv
101.099 98.4741 101.162 98.4943 101.211 98.5289 cv
101.277 98.2874 101.326 98.1769 101.335 97.9442 cv
101.419 97.8192 li
101.365 97.5966 101.051 97.5505 101.002 97.2767 cv
101.174 97.0862 101.396 96.9461 101.545 96.7335 cv
101.488 96.4837 101.533 96.1317 101.253 96.1064 cv
101.265 96.0087 101.334 95.9336 101.253 95.8553 cv
101.135 95.8541 100.875 95.9052 100.751 96.0225 cv
100.691 96.0793 100.459 96.5045 100.459 96.4824 cv
100.458 96.6673 100.82 96.6591 100.709 96.9001 cv
100.397 96.8597 100.361 97.071 100.04 97.1089 cv
99.9561 97.4666 100.088 97.5675 100.124 97.7776 cv
99.9934 97.7997 99.8912 97.8508 99.7896 97.9031 cv
99.7234 98.0205 99.8375 98.0804 99.748 98.1953 cv
99.5606 98.1984 99.2944 98.199 99.2464 98.4463 cv
99.3486 98.4829 99.3833 98.5883 99.4559 98.6552 cv
99.4231 98.8444 99.3329 98.9781 99.3726 99.2399 cv
99.2218 99.5049 98.7682 99.2153 98.7039 99.5743 cv
98.7304 99.7427 98.9543 99.7118 98.9966 99.8664 cv
98.9203 100.251 98.5197 100.309 98.3695 100.618 cv
98.7783 100.975 98.4642 101.902 97.8257 101.789 cv
98.1203 102.095 98.1904 102.874 97.5746 102.874 cv
97.4441 102.91 97.4567 103.089 97.3242 103.125 cv
97.5488 103.209 97.7765 103.287 97.7847 103.585 cv
97.75 103.718 97.5564 103.691 97.6175 103.919 cv
97.3223 103.915 97.2453 104.132 97.116 104.295 cv
97.1255 104.41 97.239 104.422 97.3242 104.462 cv
97.2889 104.748 97.3551 104.959 97.1583 105.13 cv
97.0965 105.108 96.9425 105.179 96.9488 105.089 cv
96.6776 105.492 96.1577 105.092 96.0707 104.797 cv
96.1079 104.555 96.3584 104.527 96.3647 104.253 cv
96.5924 104.273 96.6555 104.127 96.6978 103.961 cv
96.7123 103.809 96.5855 103.795 96.4889 103.752 cv
96.5161 103.604 96.4877 103.426 96.6978 103.376 cv
96.6511 103.271 96.4965 103.271 96.5312 103.084 cv
96.7394 102.986 96.9785 102.918 97.1999 102.833 cv
97.0731 102.709 96.9697 102.562 96.8239 102.457 cv
96.8813 102.26 97.0536 102.159 96.9488 101.914 cv
97.1507 101.701 97.5317 101.917 97.6175 101.58 cv
97.3355 101.212 97.4548 100.606 97.8686 100.493 cv
97.8686 100.396 97.8686 100.299 97.8686 100.201 cv
97.8566 100.115 97.7128 100.161 97.7008 100.075 cv
97.7185 99.5226 98.1651 99.397 98.5361 99.1983 cv
98.5134 99.0122 98.3323 98.9844 98.2017 98.9056 cv
98.2188 98.546 98.4799 98.4312 98.579 98.1536 cv
98.825 98.2059 98.8547 98.0406 98.9966 97.9871 cv
cp
ef
122.099 88.2938 mo
122.271 88.3247 122.244 88.1588 122.435 88.2105 cv
122.405 88.3928 122.506 88.4452 122.477 88.6282 cv
122.398 88.7095 122.323 88.6414 122.225 88.6282 cv
122.289 89.0533 121.641 89.4975 121.557 88.9208 cv
121.587 88.7833 121.75 88.7802 121.767 88.6282 cv
121.774 88.4376 121.593 88.4376 121.472 88.3771 cv
121.552 87.7046 120.563 87.4005 120.305 87.9178 cv
120.589 88.2799 120.62 88.8048 121.14 89.0042 cv
121.159 89.1574 121.156 89.2786 121.348 89.3385 cv
121.236 89.5745 121.466 89.7347 121.348 89.965 cv
121.533 90.0198 122.219 90.1239 122.142 89.6722 cv
122.271 89.6173 122.262 89.6842 122.435 89.6722 cv
122.437 89.3688 122.691 89.317 122.643 88.9625 cv
122.845 89.1505 123.14 89.2451 123.27 89.5051 cv
123.482 89.4615 123.799 89.5959 123.813 89.8817 cv
123.61 89.9561 123.297 89.9221 123.228 90.1321 cv
122.747 90.0539 122.336 90.7712 121.724 90.4242 cv
121.54 90.5239 121.338 90.486 121.14 90.4658 cv
121.083 90.4936 121.062 90.5554 121.056 90.633 cv
120.702 90.4816 120.38 91.1282 120.053 90.6753 cv
119.954 90.6885 119.895 90.7409 119.761 90.7169 cv
119.678 90.6324 119.7 90.4438 119.469 90.5081 cv
119.433 90.3895 119.527 90.3996 119.51 90.2986 cv
119.505 90.2065 119.332 90.281 119.258 90.257 cv
119.16 89.6766 118.702 89.7971 118.298 89.7561 cv
118.483 89.6577 118.259 89.6085 118.256 89.4634 cv
118.394 89.3088 118.54 89.1619 118.715 89.0458 cv
118.715 88.9341 118.715 88.8224 118.715 88.7114 cv
118.928 88.572 119.137 88.4181 119.385 88.6282 cv
119.384 88.7524 119.276 88.7701 119.258 88.8786 cv
119.634 89.0363 119.242 89.2394 119.385 89.6306 cv
119.389 89.7227 119.561 89.6483 119.635 89.6722 cv
119.368 90.1119 120.023 90.4463 120.429 90.3409 cv
120.451 89.9984 120.026 90.1037 120.01 89.7978 cv
120.065 89.7826 120.076 89.7239 120.137 89.7139 cv
120.308 89.753 120.309 89.9593 120.513 89.965 cv
120.637 89.9233 li
120.499 89.4905 120.151 89.2678 119.929 88.9208 cv
119.938 88.6723 119.85 88.524 119.718 88.4187 cv
119.718 88.3354 119.718 88.2521 119.718 88.1683 cv
119.648 88.1285 119.635 88.0295 119.551 88.0011 cv
119.586 87.9115 119.654 87.8535 119.802 87.8762 cv
119.762 87.7342 119.746 87.5702 119.718 87.4163 cv
120.793 87.0579 121.747 87.5551 122.099 88.2938 cv
cp
ef
100.792 88.8785 mo
101.007 88.982 100.823 89.1719 100.835 89.2968 cv
100.934 89.351 101.071 89.3661 101.168 89.4217 cv
101.211 89.5611 101.159 89.7933 101.378 89.756 cv
101.201 90.0336 100.589 89.8885 100.249 89.9655 cv
100.003 90.2128 99.6965 90.4229 99.7054 90.7175 cv
99.7186 90.8436 99.9268 90.7742 99.9565 90.884 cv
100.436 90.761 100.931 90.0664 101.378 90.4241 cv
101.513 90.4355 101.498 90.2948 101.587 90.2576 cv
101.737 90.274 101.866 90.3112 102.004 90.3408 cv
102.072 90.5925 102.289 90.696 102.506 90.8007 cv
102.507 90.9276 102.417 90.9629 102.38 91.0512 cv
102.45 91.3294 102.603 91.7603 102.255 91.8871 cv
102.246 92.3785 101.956 92.5905 101.587 92.7224 cv
101.515 92.7375 101.508 92.6895 101.503 92.6384 cv
101.275 92.6889 101.171 92.8636 101.084 93.0567 cv
100.821 93.0144 100.713 92.8163 100.667 92.5552 cv
100.413 92.6006 100.358 92.4467 100.375 92.2208 cv
100.56 92.2668 100.582 92.1501 100.708 92.1375 cv
101.25 92.5293 102.468 92.0309 102.088 91.1345 cv
101.903 90.925 101.348 90.8234 101.253 91.1345 cv
101.217 91.2549 101.339 91.1925 101.168 91.3016 cv
100.992 91.4146 100.704 91.7067 100.291 91.7615 cv
100.122 91.7836 99.9489 91.6234 99.7893 91.7193 cv
99.6385 91.3427 99.2871 91.1641 99.1635 90.7585 cv
99.2486 90.7188 99.3288 90.6733 99.4127 90.6335 cv
99.3748 90.2657 99.5609 90.0885 99.6644 89.7144 cv
99.9994 89.7283 100.061 89.4703 100.416 89.5056 cv
100.637 89.3907 100.57 88.9902 100.792 88.8785 cv
cp
ef
97.5746 92.5552 mo
97.4535 92.7495 97.4945 92.9823 97.6175 93.1406 cv
97.5349 93.169 97.5058 93.2516 97.492 93.3488 cv
97.5759 93.5413 97.7916 93.5381 97.9519 93.5576 cv
97.8459 93.8989 98.1354 94.097 98.4111 94.1847 cv
98.2711 94.425 98.7404 94.3727 98.7448 94.6024 cv
98.7221 94.7045 98.584 94.6913 98.6199 94.8528 cv
99.165 94.7367 99.8211 94.9562 100.04 94.3936 cv
99.9277 94.1387 99.8419 94.1039 99.9157 93.8081 cv
99.6918 93.8295 99.7738 93.7028 99.7895 93.5576 cv
99.664 93.4308 99.529 93.4492 99.4558 93.3488 cv
99.4218 93.2308 99.5139 93.241 99.4968 93.1406 cv
99.2968 93.1034 99.1738 92.9899 99.1208 92.8063 cv
98.9801 92.8176 98.8817 92.8726 98.7038 92.8473 cv
98.543 92.4025 97.9676 92.4656 97.5746 92.5552 cv
cp
99.7479 92.1376 mo
99.811 92.248 99.6709 92.4713 99.9157 92.4719 cv
99.8318 93.0283 100.314 93.0195 100.333 93.4744 cv
100.296 93.5065 100.239 93.5192 100.166 93.516 cv
100.234 93.6844 100.318 93.8378 100.292 94.1008 cv
100.124 94.1008 li
100.514 94.5286 99.9031 94.743 99.8318 95.1871 cv
99.1997 95.0414 98.6912 95.543 98.2017 95.02 cv
98.0805 95.0093 98.0736 95.1146 97.9519 95.1039 cv
97.8112 95.0358 97.7342 94.9033 97.5336 94.8951 cv
97.5519 94.7746 97.714 94.796 97.7424 94.6863 cv
97.7115 94.502 97.4743 94.7411 97.3664 94.6024 cv
97.3248 94.4352 97.4913 94.4762 97.4503 94.3096 cv
97.3948 94.2408 97.2642 94.2453 97.1999 94.1847 cv
97.3752 93.9702 97.2283 93.7198 97.0743 93.5993 cv
97.2346 93.234 97.1002 93.0656 97.1582 92.5969 cv
97.3734 92.5199 97.6024 92.4562 97.5746 92.1376 cv
98.1777 91.532 98.9688 92.1748 99.7479 92.1376 cv
cp
ef
100.04 133.541 mo
100.166 133.498 100.115 133.633 100.124 133.709 cv
100.366 133.726 100.569 133.706 100.583 133.499 cv
100.477 133.425 100.415 133.306 100.249 133.29 cv
100.159 133.353 100.097 133.444 100.04 133.541 cv
cp
105.724 132.454 mo
105.747 132.305 105.6 132.328 105.472 132.329 cv
105.414 132.516 105.641 132.532 105.724 132.454 cv
cp
101.002 132.496 mo
101.134 132.488 101.251 132.467 101.253 132.329 cv
101.16 132.376 101.022 132.377 101.002 132.496 cv
cp
100.083 132.412 mo
99.9505 132.406 99.9695 132.247 99.9562 132.121 cv
99.62 132.051 99.413 132.352 99.372 132.329 cv
99.4982 132.524 99.936 132.703 100.083 132.412 cv
cp
111.154 131.744 mo
110.931 131.759 110.873 131.937 110.777 132.078 cv
110.881 132.073 110.98 132.07 110.986 132.162 cv
110.967 132.278 110.897 132.456 110.861 132.663 cv
111.033 132.571 111.148 132.721 111.321 132.746 cv
111.663 132.271 112.272 132.071 112.449 131.535 cv
112.054 131.325 110.833 130.811 111.154 131.744 cv
cp
111.738 130.616 mo
112.056 130.633 112.183 130.84 112.407 130.95 cv
112.665 130.846 112.726 130.372 112.784 130.198 cv
112.404 130.311 111.602 129.764 111.738 130.616 cv
cp
104.218 129.697 mo
104.297 129.679 104.47 129.754 104.426 129.613 cv
104.358 129.613 104.288 129.613 104.218 129.613 cv
104.218 129.697 li
cp
110.569 129.655 mo
110.765 129.801 110.436 130.028 110.695 130.156 cv
110.596 130.17 110.522 130.207 110.443 130.24 cv
110.487 130.499 110.469 130.54 110.36 130.7 cv
110.469 130.841 110.551 131.009 110.527 131.285 cv
110.661 131.249 110.656 131.35 110.736 131.368 cv
110.741 131.318 110.748 131.269 110.819 131.285 cv
110.789 131.19 110.782 131.071 110.736 130.992 cv
110.986 130.964 110.973 130.672 111.237 130.658 cv
111.291 130.267 111.536 130.065 111.738 129.822 cv
111.472 129.566 110.9 129.415 110.569 129.655 cv
cp
110.235 129.739 mo
110.367 129.715 110.363 129.817 110.443 129.739 cv
110.49 129.552 110.315 129.588 110.235 129.53 cv
110.235 129.6 110.235 129.669 110.235 129.739 cv
cp
115.583 129.112 mo
115.755 129.165 115.739 129.678 115.457 129.53 cv
115.559 129.817 115.954 129.814 115.999 130.156 cv
116.37 130.071 116.606 130.021 117.046 130.072 cv
117.05 129.884 117.215 129.855 117.211 129.655 cv
116.94 129.617 116.947 129.234 117.087 129.112 cv
116.98 128.94 116.782 128.86 116.67 128.694 cv
116.344 128.845 116.11 128.71 115.791 128.652 cv
115.754 128.838 115.62 128.927 115.583 129.112 cv
cp
104.218 129.404 mo
104.452 129.429 104.478 129.247 104.553 129.112 cv
104.177 129.014 104.608 128.586 104.26 128.444 cv
104.037 128.714 104.206 129.142 104.218 129.404 cv
cp
114.747 128.36 mo
114.695 128.354 114.611 128.425 114.539 128.402 cv
114.243 128.309 113.992 128.008 113.66 127.984 cv
113.501 128.218 113.616 128.545 113.452 128.82 cv
113.667 129.453 114.651 129.207 115.332 129.238 cv
115.265 129.017 115.258 128.899 115.291 128.652 cv
115.041 128.676 114.985 128.385 114.747 128.36 cv
cp
104.093 127.608 mo
104.154 127.784 104.34 127.816 104.218 128.067 cv
104.37 128.065 104.563 128.414 104.636 128.11 cv
104.517 128.118 104.424 128.099 104.386 128.026 cv
104.503 127.97 104.566 127.704 104.469 127.567 cv
104.243 127.549 104.293 127.683 104.093 127.608 cv
cp
109.985 127.734 mo
110.179 127.727 110.222 127.725 110.318 127.691 cv
110.369 127.364 110.2 127.321 110.276 127.065 cv
110.198 127.074 110.184 127.018 110.109 127.023 cv
110.03 127.267 110.138 127.519 109.985 127.734 cv
cp
110.945 124.725 mo
110.851 124.827 110.791 124.962 110.652 125.017 cv
110.831 125.169 110.679 125.403 110.819 125.603 cv
110.745 125.76 110.43 125.92 110.318 125.687 cv
110.379 125.65 110.449 125.624 110.443 125.519 cv
110.256 125.492 110.515 125.206 110.235 125.226 cv
110.149 125.338 110.078 125.461 110.025 125.603 cv
110.075 125.665 110.13 125.721 110.193 125.77 cv
110.077 125.808 109.963 125.846 109.941 125.979 cv
110.147 126.061 110.359 126.159 110.569 126.021 cv
110.571 126.428 110.753 126.837 110.569 127.232 cv
110.743 127.501 110.7 127.867 110.443 128.067 cv
110.584 128.255 110.697 128.653 110.443 128.778 cv
109.917 128.517 110.249 129.158 109.941 129.363 cv
109.991 129.411 110.09 129.41 110.193 129.404 cv
110.255 129.285 110.278 129.128 110.36 129.029 cv
110.536 128.979 110.726 128.978 110.695 129.238 cv
111.1 129.234 111.187 129.173 111.57 129.238 cv
111.539 129.109 111.686 129.157 111.654 129.029 cv
111.592 128.979 111.469 128.992 111.487 128.862 cv
111.465 128.294 111.196 127.884 111.487 127.315 cv
111.209 127.208 111.283 126.686 111.446 126.563 cv
111.309 126.547 111.338 126.365 111.278 126.271 cv
111.317 126.227 111.433 126.258 111.404 126.146 cv
111.199 125.958 111.396 125.548 111.069 125.435 cv
111.169 125.422 111.095 125.237 111.237 125.269 cv
111.062 125.138 111.111 124.878 111.237 124.725 cv
111.132 124.594 111.108 124.382 110.903 124.349 cv
110.823 124.573 110.854 124.532 110.945 124.725 cv
cp
110.025 123.681 mo
110.22 123.878 109.969 123.94 109.941 124.14 cv
110.086 124.219 110.218 124.309 110.485 124.265 cv
110.476 124.109 110.498 123.831 110.652 123.723 cv
110.59 123.359 110.13 123.306 110.025 123.681 cv
cp
109.985 122.72 mo
109.969 122.93 110.121 122.973 110.276 123.012 cv
110.416 122.902 110.57 122.805 110.61 122.594 cv
110.259 122.502 110.283 122.691 109.985 122.72 cv
cp
107.476 120.881 mo
107.503 121.148 107.77 121.173 108.02 121.216 cv
108.016 121.143 108.031 121.086 108.062 121.049 cv
107.822 120.963 107.683 120.837 107.476 120.881 cv
cp
106.6 120.631 mo
106.674 120.668 106.706 120.748 106.851 120.715 cv
106.923 120.519 106.616 120.49 106.6 120.631 cv
cp
114.58 120.464 mo
114.689 120.476 114.759 120.448 114.747 120.339 cv
114.615 120.386 114.645 120.273 114.58 120.255 cv
114.58 120.464 li
cp
107.144 120.339 mo
107.309 120.339 li
107.339 120.199 107.239 120.186 107.144 120.172 cv
107.144 120.339 li
cp
107.393 120.046 mo
107.836 120.211 107.485 119.717 107.393 120.046 cv
cp
111.948 119.712 mo
111.936 119.896 112.255 119.93 112.324 119.795 cv
112.28 119.656 112.087 119.642 111.948 119.712 cv
cp
112.867 119.085 mo
112.896 118.962 113.107 119.018 113.117 118.876 cv
112.986 118.732 112.709 118.948 112.867 119.085 cv
cp
114.12 117.456 mo
114.322 117.491 114.401 117.403 114.412 117.247 cv
114.261 117.297 114.084 117.164 114.036 117.247 cv
114.123 117.258 114.048 117.43 114.12 117.456 cv
cp
115.165 115.909 mo
115.208 115.8 115.33 115.769 115.373 115.659 cv
115.2 115.648 115.21 115.714 115.08 115.659 cv
115.082 115.77 115.058 115.905 115.165 115.909 cv
cp
116.46 115.534 mo
116.205 115.752 116.107 116.128 115.791 116.286 cv
115.865 116.296 115.886 116.357 115.875 116.453 cv
115.624 116.633 115.526 116.969 115.207 117.08 cv
115.287 117.407 114.891 117.447 115.039 117.706 cv
114.854 117.862 114.412 117.962 114.539 118.292 cv
113.978 118.376 114.201 118.989 113.701 118.918 cv
113.634 118.986 113.739 119.093 113.701 119.252 cv
113.62 119.309 113.463 119.292 113.368 119.335 cv
113.251 120.026 112.418 120.001 112.197 120.589 cv
112.141 120.591 112.106 120.569 112.073 120.547 cv
111.971 120.739 111.807 120.866 111.738 121.09 cv
111.988 121.105 111.941 121.309 111.864 121.466 cv
112.238 121.595 112.232 122.094 112.114 122.428 cv
112.25 122.458 112.298 122.578 112.365 122.678 cv
112.342 122.78 112.204 122.768 112.24 122.929 cv
112.385 122.922 112.507 122.94 112.573 123.012 cv
112.491 123.148 112.489 123.458 112.449 123.513 cv
112.322 123.544 112.296 123.471 112.197 123.472 cv
112.148 123.589 112.152 123.76 112.157 123.932 cv
112.259 123.925 112.359 123.924 112.365 124.015 cv
112.372 124.119 112.3 124.144 112.281 124.224 cv
112.358 124.301 112.447 124.366 112.491 124.475 cv
112.502 124.611 112.44 124.676 112.324 124.683 cv
112.206 124.586 112.071 124.629 112.031 124.391 cv
111.91 124.383 111.818 124.402 111.78 124.475 cv
111.897 124.641 112.142 124.743 112.031 125.017 cv
112.189 125.013 112.255 125.1 112.281 125.226 cv
112.117 125.302 112.337 125.501 112.157 125.561 cv
112.025 125.568 112.016 125.449 111.864 125.477 cv
111.652 125.757 111.998 125.943 111.948 126.187 cv
112.405 126.409 112.235 126.999 112.157 127.399 cv
112.421 127.578 112.39 128.248 112.157 128.444 cv
112.155 128.641 112.249 128.741 112.365 128.82 cv
112.427 129.146 112.258 129.242 112.114 129.363 cv
112.092 129.511 112.263 129.465 112.24 129.613 cv
112.787 129.687 113.38 129.515 113.076 128.987 cv
113.191 128.759 113.102 128.549 113.242 128.318 cv
112.96 127.942 113.431 127.75 113.242 127.315 cv
113.31 127.187 113.464 127.147 113.493 126.981 cv
113.351 126.823 113.337 126.461 113.452 126.271 cv
113.359 126.278 113.319 126.237 113.325 126.146 cv
113.529 126.042 113.516 125.722 113.66 125.561 cv
113.459 125.403 113.694 124.705 113.911 124.559 cv
113.735 124.232 114.229 124.198 114.036 123.848 cv
114.099 123.826 114.142 123.786 114.204 123.764 cv
114.145 123.26 114.348 123.048 114.204 122.72 cv
114.269 122.646 114.395 122.633 114.412 122.511 cv
114.4 122.329 114.23 122.303 114.161 122.177 cv
114.217 122.149 114.239 122.087 114.246 122.01 cv
114.144 121.971 114.075 121.901 114.036 121.8 cv
114.095 121.72 114.253 121.739 114.328 121.676 cv
114.01 121.24 113.934 120.889 114.036 120.339 cv
113.929 120.307 113.86 120.237 113.828 120.13 cv
113.969 119.951 114.111 119.773 114.496 119.837 cv
114.496 119.685 114.25 119.776 114.287 119.586 cv
114.647 119.464 114.925 119.502 115.08 119.211 cv
115.028 119.11 114.832 119.153 114.831 119.002 cv
114.982 118.932 115.04 118.835 115.039 118.709 cv
115.226 118.731 115.303 118.863 115.373 119.002 cv
115.279 119.073 115.359 119.321 115.332 119.461 cv
115.616 119.511 115.396 120.064 115.708 120.088 cv
115.651 120.155 115.673 120.303 115.583 120.339 cv
115.341 120.297 115.133 120.157 115.207 119.92 cv
115.118 119.884 115.083 119.794 114.956 119.795 cv
114.788 119.946 114.947 120.278 115.08 120.38 cv
115.033 120.707 115.228 120.79 115.332 120.965 cv
115.34 121.056 115.297 121.098 115.207 121.09 cv
115.246 121.263 115.521 121.395 115.332 121.55 cv
115.519 121.746 115.753 122.01 115.625 122.344 cv
115.954 122.531 116.078 122.921 116.251 123.263 cv
116.14 123.263 116.013 123.248 115.959 123.304 cv
115.923 123.129 115.58 123.063 115.791 122.887 cv
115.69 122.759 115.606 122.831 115.54 122.72 cv
115.579 122.619 115.708 122.609 115.666 122.428 cv
115.509 122.383 115.547 122.531 115.415 122.511 cv
115.261 122.125 114.92 121.785 114.997 121.3 cv
114.943 121.215 114.776 121.242 114.747 121.132 cv
114.863 120.98 114.739 120.847 114.705 120.631 cv
114.161 120.679 114.727 121.106 114.371 121.341 cv
114.533 121.61 114.709 122.041 114.663 122.469 cv
114.807 122.603 114.976 122.713 115.165 122.804 cv
115.067 122.832 114.987 122.836 114.872 122.929 cv
115.052 123.025 115.159 123.131 115.08 123.388 cv
115.4 123.542 115.632 123.784 115.916 123.973 cv
115.986 124.25 115.695 124.17 115.666 124.349 cv
115.87 124.88 116.613 124.706 116.71 125.394 cv
116.901 125.385 116.901 125.565 116.962 125.687 cv
116.609 125.821 116.427 125.484 116.042 125.519 cv
115.973 125.211 115.66 125.149 115.499 124.934 cv
115.465 125.08 115.413 125.211 115.332 125.31 cv
115.376 125.406 115.629 125.29 115.666 125.394 cv
115.578 125.662 116.045 125.941 115.708 126.23 cv
115.837 126.295 115.914 126.413 116.042 126.48 cv
115.896 126.589 116.094 126.703 116.167 126.731 cv
116.148 126.866 116.222 127.092 116.084 127.107 cv
115.893 127.137 115.772 126.947 115.875 126.815 cv
115.704 126.847 115.66 126.75 115.499 126.772 cv
115.526 126.969 115.716 127.001 115.749 127.19 cv
115.637 127.216 115.646 127.365 115.499 127.357 cv
115.44 127.262 115.404 127.146 115.207 127.19 cv
115.108 127.272 115.386 127.572 115.165 127.65 cv
115.032 127.67 115.07 127.522 114.915 127.567 cv
114.851 127.643 114.783 127.713 114.705 127.775 cv
114.489 127.517 114.111 127.421 113.911 127.148 cv
114.02 127.807 114.897 128.26 115.625 128.11 cv
115.711 128.161 115.781 128.231 115.833 128.318 cv
115.981 128.271 116.177 128.272 116.335 128.235 cv
116.579 128.579 116.996 128.388 117.337 128.235 cv
117.384 128.001 117.297 127.841 117.505 127.734 cv
117.479 127.662 117.307 127.737 117.295 127.65 cv
117.357 127.409 117.346 127.256 117.254 127.065 cv
117.326 127.008 117.452 126.893 117.379 126.815 cv
117.259 126.756 117.167 126.928 117.128 126.815 cv
117.197 126.572 117.143 126.476 117.046 126.313 cv
117.085 126.143 117.229 126.079 117.295 125.937 cv
117.209 125.883 117.083 125.87 117.087 125.728 cv
117.198 125.714 117.228 125.618 117.254 125.519 cv
117.131 125.347 116.982 124.851 117.254 124.767 cv
117.191 124.704 117.077 124.692 117.046 124.6 cv
117.01 124.275 117.203 124.035 117.295 123.723 cv
117.288 123.605 117.097 123.67 117.128 123.513 cv
117.447 123.077 117.16 122.647 117.337 122.093 cv
117.625 122.051 117.527 121.756 117.421 121.592 cv
117.496 121.46 117.639 121.393 117.671 121.216 cv
117.585 121.149 117.456 121.125 117.421 121.007 cv
117.798 120.794 117.492 120.105 117.629 119.67 cv
117.262 119.264 117.922 118.345 117.462 118.041 cv
117.51 117.59 117.705 117.417 117.546 116.996 cv
117.707 116.963 117.807 116.867 118.006 116.871 cv
118.016 116.7 118.148 116.651 118.173 116.494 cv
117.988 116.321 117.7 115.908 117.921 115.701 cv
117.77 115.686 117.593 115.696 117.587 115.534 cv
117.276 115.566 116.798 115.754 116.46 115.534 cv
cp
104.97 115.617 mo
105.049 115.599 105.223 115.674 105.18 115.534 cv
105.11 115.534 105.04 115.534 104.97 115.534 cv
104.97 115.617 li
cp
115.499 115.409 mo
115.631 115.44 115.749 115.246 115.666 115.2 cv
115.601 115.259 115.521 115.305 115.499 115.409 cv
cp
116.878 114.489 mo
116.835 114.901 116.679 114.945 116.584 115.283 cv
116.966 115.33 116.958 114.988 117.002 114.699 cv
117.138 114.722 117.198 114.67 117.295 114.656 cv
117.267 114.387 117.069 114.407 116.878 114.489 cv
cp
112.825 114.865 mo
112.557 114.659 112.284 114.969 112.031 115.033 cv
111.85 115.047 111.797 114.932 111.654 114.908 cv
111.406 115.099 111.175 115.063 111.069 115.241 cv
110.899 115.531 111.249 115.885 111.029 116.035 cv
111.34 115.824 111.875 115.474 112.24 115.785 cv
111.897 116.08 111.854 116.555 111.654 116.913 cv
111.733 117.224 111.525 117.673 111.906 117.915 cv
111.901 118.035 111.728 117.988 111.738 118.124 cv
111.814 118.217 111.971 118.226 112.073 118.292 cv
111.995 118.678 111.913 118.892 112.073 119.252 cv
112.437 119.17 112.388 118.676 112.825 118.668 cv
112.982 118.379 113.124 118.075 113.409 117.915 cv
113.621 117.374 113.944 116.946 114.371 116.62 cv
114.305 116.457 114.261 116.49 114.246 116.328 cv
114.351 116.28 114.449 116.225 114.539 116.161 cv
114.635 115.687 114.831 115.311 115.332 115.241 cv
115.181 114.812 115.467 114.608 115.583 114.322 cv
114.436 114.298 113.671 114.563 112.825 114.865 cv
cp
111.237 114.239 mo
111.17 114.392 111.555 114.434 111.53 114.281 cv
111.471 114.216 111.313 114.161 111.237 114.239 cv
cp
111.989 114.155 mo
112.098 114.171 112.115 114.28 112.24 114.281 cv
112.353 114.213 112.503 114.18 112.491 113.988 cv
112.26 113.982 112.077 114.019 111.989 114.155 cv
cp
113.409 113.863 mo
113.181 113.902 112.876 114.033 112.741 113.821 cv
112.741 114.205 113.306 114.062 113.409 113.863 cv
cp
116.835 114.197 mo
117.08 114.385 117.622 114.274 117.88 114.448 cv
117.989 114.333 117.813 114.269 117.797 114.155 cv
117.824 114.043 117.957 114.038 117.963 113.904 cv
117.493 113.518 117.167 114.135 116.835 114.197 cv
cp
113.536 113.904 mo
113.688 113.816 114.061 114.087 114.079 113.737 cv
113.876 113.818 113.416 113.623 113.536 113.904 cv
cp
104.761 119.795 mo
104.632 119.856 104.601 119.789 104.51 119.712 cv
104.919 119.302 104.477 118.587 104.804 118.124 cv
104.522 118.028 104.681 117.571 104.678 117.289 cv
104.741 117.225 104.916 117.276 104.886 117.121 cv
104.627 116.844 104.654 116.303 104.845 115.993 cv
104.599 115.708 104.911 115.346 104.636 115.074 cv
104.707 115.021 104.801 114.988 104.804 114.865 cv
104.479 114.552 105.039 113.646 104.386 113.779 cv
104.46 114.019 104.215 114.006 104.26 114.406 cv
104.549 114.584 104.295 114.829 104.344 115.2 cv
104.485 115.17 104.481 115.286 104.553 115.325 cv
104.549 115.461 104.303 115.354 104.344 115.534 cv
104.454 115.8 104.486 116.239 104.26 116.411 cv
104.529 116.869 104.426 117.305 104.344 117.748 cv
104.41 117.835 104.479 117.918 104.51 118.041 cv
104.368 118.023 104.386 118.165 104.302 118.208 cv
104.424 118.376 104.232 118.458 104.386 118.668 cv
104.307 118.685 104.28 118.757 104.177 118.751 cv
104.355 118.953 104.361 119.335 104.26 119.586 cv
104.264 119.693 104.423 119.646 104.426 119.754 cv
104.199 119.92 104.381 120.265 104.426 120.506 cv
104.343 120.575 104.233 120.618 104.218 120.756 cv
104.279 120.821 104.437 120.789 104.426 120.924 cv
104.355 120.99 104.169 120.944 104.134 121.049 cv
104.276 121.122 104.422 121.317 104.426 121.466 cv
104.26 121.676 li
104.206 121.881 104.341 122.245 104.134 122.344 cv
104.249 122.438 104.349 122.548 104.344 122.762 cv
104.279 122.891 104.137 122.944 104.093 123.096 cv
104.191 123.083 104.273 123.007 104.302 123.138 cv
104.305 123.722 104.261 124.128 104.177 124.642 cv
104.05 124.642 li
104.019 124.827 104.276 124.724 104.26 124.893 cv
104.28 125.024 104.069 124.924 104.05 125.017 cv
104.274 125.166 104.124 125.499 104.093 125.811 cv
104.295 126.022 104.341 126.429 104.134 126.647 cv
104.235 126.755 104.31 126.97 104.218 127.148 cv
104.498 127.099 104.433 127.498 104.678 127.357 cv
104.699 127.197 104.53 127.226 104.469 127.148 cv
104.444 126.466 104.344 126.028 104.51 125.352 cv
104.498 125.184 104.314 125.186 104.344 124.976 cv
104.613 124.79 104.515 124.482 104.51 124.099 cv
104.658 124.092 104.698 123.979 104.845 123.973 cv
104.896 124.603 104.809 125.459 105.013 126.063 cv
104.447 126.57 105.074 127.137 104.804 127.691 cv
104.915 128.103 104.803 128.42 104.929 128.987 cv
104.892 129.048 104.866 129.119 104.761 129.112 cv
104.732 129.226 104.845 129.196 104.845 129.279 cv
104.809 129.411 104.615 129.383 104.594 129.53 cv
104.937 129.538 104.707 129.86 104.804 130.115 cv
104.753 130.163 104.655 130.162 104.553 130.156 cv
104.512 130.323 104.678 130.282 104.636 130.45 cv
104.31 130.586 103.903 130.371 103.55 130.45 cv
103.471 130.769 102.943 130.867 102.839 131.285 cv
102.601 131.193 102.238 131.456 102.13 131.744 cv
102.232 131.767 102.218 131.907 102.38 131.87 cv
102.483 131.833 102.473 131.685 102.63 131.702 cv
102.748 131.738 102.803 131.837 102.965 131.828 cv
103.022 131.564 103.29 131.513 103.466 131.368 cv
103.546 131.429 103.684 131.43 103.717 131.535 cv
103.551 131.62 103.202 131.521 103.258 131.828 cv
103.545 131.751 104.102 131.99 104.093 131.535 cv
104.032 131.513 103.878 131.584 103.885 131.494 cv
103.883 131.422 103.917 131.386 103.968 131.368 cv
104.152 131.529 104.556 131.512 104.761 131.535 cv
104.775 131.632 104.755 131.695 104.72 131.744 cv
104.993 131.794 105.238 131.694 105.472 131.828 cv
105.472 131.911 105.472 131.995 105.472 132.078 cv
105.589 132.029 105.759 132.032 105.932 132.037 cv
105.965 132.241 106.219 132.223 106.224 132.454 cv
106.422 132.437 106.511 132.529 106.725 132.496 cv
106.73 132.632 106.84 132.659 106.935 132.706 cv
107.002 132.926 106.757 132.836 106.808 133.039 cv
107.317 133.175 108.076 133.216 108.688 133.122 cv
108.678 133.202 108.735 133.215 108.73 133.29 cv
109.617 133.141 110.509 133.487 111.321 133.331 cv
111.407 133.316 111.457 133.252 111.53 133.248 cv
111.902 133.228 112.272 133.412 112.616 133.331 cv
112.686 133.315 112.724 133.186 112.784 133.165 cv
112.936 133.109 113.142 133.208 113.325 133.165 cv
113.517 133.121 113.775 132.871 113.995 132.83 cv
114.677 132.955 115.718 132.584 116.418 133.039 cv
116.324 133.133 116.42 133.249 116.46 133.331 cv
117.524 133.332 118.244 133.298 119.258 133.331 cv
119.369 133.247 119.423 133.107 119.51 132.998 cv
119.732 132.958 120.004 132.929 120.221 132.998 cv
120.289 132.926 120.31 132.81 120.388 132.746 cv
120.771 132.9 121.332 132.935 121.432 132.496 cv
121.786 132.425 122.065 132.445 122.059 132.83 cv
122.156 132.817 122.214 132.764 122.351 132.789 cv
122.303 132.558 122.207 132.394 122.391 132.246 cv
122.089 131.856 122.123 131.354 121.64 131.117 cv
121.557 131.032 121.658 131.036 121.683 130.95 cv
121.586 130.829 121.29 130.811 121.432 130.574 cv
121.042 130.344 120.792 129.774 120.221 129.864 cv
120.115 129.802 120.033 129.716 119.886 129.697 cv
119.836 129.745 119.737 129.744 119.635 129.739 cv
119.527 129.694 119.48 129.588 119.342 129.572 cv
119.055 129.607 118.558 129.706 118.423 129.53 cv
118.254 129.775 117.824 129.511 117.629 129.697 cv
117.654 129.875 117.599 129.973 117.587 130.115 cv
117.693 130.092 117.734 130.06 117.797 130.156 cv
117.828 130.284 117.726 130.28 117.755 130.407 cv
118.11 130.496 117.952 130.918 118.256 130.992 cv
118.114 131.26 118.502 131.248 118.381 131.619 cv
118.493 131.619 118.627 131.596 118.632 131.702 cv
118.471 131.915 118.724 132.013 118.758 132.162 cv
118.647 132.205 118.594 132.306 118.466 132.329 cv
118.382 132.03 117.665 131.956 118.047 131.578 cv
117.774 131.544 117.628 131.318 117.546 130.992 cv
117.637 131 117.68 130.958 117.671 130.867 cv
117.523 130.75 117.41 130.6 117.337 130.407 cv
116.984 130.511 116.841 130.711 116.46 130.658 cv
116.405 130.783 116.417 130.978 116.418 131.16 cv
116.689 131.185 116.67 131.358 116.626 131.619 cv
117.251 131.505 117.183 132.384 117.88 132.329 cv
117.899 132.408 117.824 132.581 117.963 132.538 cv
118.039 132.431 118.186 132.398 118.381 132.412 cv
118.381 132.495 118.495 132.466 118.466 132.58 cv
118.262 132.915 117.822 132.778 117.337 132.789 cv
117.187 132.549 116.971 132.375 116.626 132.329 cv
116.511 131.944 116.268 131.685 116.126 131.326 cv
116.015 131.326 115.88 131.35 115.875 131.242 cv
115.892 131.163 115.994 131.167 115.959 131.034 cv
115.854 130.979 115.786 131.157 115.749 131.034 cv
115.686 130.832 115.941 130.947 115.916 130.783 cv
115.43 130.737 115.187 130.109 115.248 129.781 cv
114.723 129.406 113.636 129.499 113.159 129.906 cv
113.115 130.062 113.315 129.972 113.284 130.115 cv
113.085 130.32 113.097 130.737 112.825 130.867 cv
113.217 131.363 112.426 131.766 112.491 132.203 cv
111.909 132.463 111.494 133.606 110.61 132.914 cv
110.522 132.69 110.589 132.569 110.443 132.412 cv
110.409 132.224 110.541 132.204 110.569 132.078 cv
110.502 132.006 110.394 131.975 110.235 131.995 cv
110.16 132.311 109.888 132.43 109.524 132.454 cv
109.444 132.259 109.065 132.186 109.022 131.995 cv
109 131.887 109.228 131.509 109.231 131.452 cv
108.983 131.13 109.428 130.376 109.106 130.072 cv
109.165 129.896 109.322 129.834 109.231 129.613 cv
108.678 129.371 107.935 129.945 107.56 129.404 cv
107.332 129.486 106.763 129.578 106.265 129.572 cv
106.06 129.569 105.674 129.56 105.556 129.53 cv
105.21 129.441 105.365 129.181 105.43 128.987 cv
106.445 129.534 107.703 128.826 108.73 129.238 cv
108.87 129.188 108.943 129.024 108.855 128.862 cv
108.971 128.782 109.242 128.858 109.274 128.694 cv
109.225 128.632 109.154 128.592 109.148 128.486 cv
108.925 128.472 108.853 128.828 108.605 128.652 cv
108.597 128.407 108.962 128.283 109.106 128.444 cv
109.044 128.214 109.258 128.26 109.274 128.11 cv
109.015 128.013 109.121 127.659 109.231 127.483 cv
109.086 127.353 109.061 127.288 109.106 127.19 cv
109.234 126.918 108.873 126.24 109.19 126.021 cv
108.967 125.945 108.919 125.423 109.148 125.269 cv
109.097 125.124 108.941 125.085 108.981 124.851 cv
109.01 124.741 109.172 124.762 109.19 124.642 cv
109.063 124.53 109.189 124.422 109.106 124.265 cv
109.193 124.212 109.318 124.199 109.314 124.056 cv
109.29 123.985 109.117 124.06 109.106 123.973 cv
109.23 123.701 108.991 123.596 108.939 123.304 cv
109.073 123.342 109.026 123.197 109.106 123.18 cv
109.118 123.014 108.928 123.051 108.939 122.887 cv
108.931 122.614 109.198 122.617 109.148 122.302 cv
108.641 122.393 108.588 122.028 108.103 122.093 cv
108.067 121.964 108.024 121.838 107.936 121.759 cv
107.354 121.66 106.997 121.334 106.433 121.216 cv
106.373 120.893 105.965 120.913 105.724 120.881 cv
105.64 120.512 105.291 120.652 105.013 120.464 cv
104.945 120.785 105.079 121.031 104.929 121.341 cv
105.132 121.436 105.043 121.905 104.886 122.01 cv
105.196 122.374 104.844 122.908 105.054 123.18 cv
105.024 123.274 104.928 123.304 104.845 123.347 cv
104.914 123.511 104.901 123.81 104.804 123.932 cv
104.742 123.839 104.473 123.956 104.469 123.806 cv
104.701 123.366 104.555 123.001 104.51 122.594 cv
104.678 122.594 li
104.711 122.422 104.478 122.516 104.51 122.344 cv
104.677 122.231 104.765 121.81 104.553 121.676 cv
104.826 121.458 104.508 121.09 104.761 120.84 cv
104.477 120.719 104.655 120.31 104.678 120.046 cv
104.604 120.037 104.469 120.088 104.51 119.963 cv
104.553 119.891 104.835 119.845 104.761 119.795 cv
cp
105.472 113.153 mo
105.472 113.32 li
105.633 113.437 106.015 113.391 106.016 113.111 cv
105.837 113.127 105.585 113.071 105.472 113.153 cv
cp
116.584 113.236 mo
116.292 113.144 115.702 113.237 115.457 113.444 cv
115.181 113.443 114.739 113.39 114.58 113.612 cv
114.527 113.477 114.366 113.568 114.287 113.57 cv
114.27 113.878 114.567 113.669 114.705 113.654 cv
115.065 113.715 115.849 113.619 116.292 113.361 cv
116.393 113.553 116.693 113.546 116.962 113.57 cv
116.994 113.426 116.884 113.394 116.962 113.32 cv
117.122 113.285 117.334 113.302 117.337 113.111 cv
117.022 113.014 116.782 113.035 116.584 113.236 cv
cp
120.596 112.86 mo
120.675 112.841 120.848 112.917 120.805 112.777 cv
120.735 112.777 120.667 112.777 120.596 112.777 cv
120.596 112.86 li
cp
109.482 112.902 mo
109.415 112.834 109.215 112.758 109.065 112.818 cv
109.024 113.059 109.358 112.988 109.19 113.236 cv
109.486 113.3 109.659 113.211 109.859 113.236 cv
109.813 113.41 109.848 113.42 109.859 113.612 cv
109.765 113.644 109.695 113.7 109.566 113.695 cv
109.6 113.87 109.745 113.935 109.859 114.03 cv
109.724 114.244 109.553 114.421 109.44 114.656 cv
109.498 114.753 109.648 114.755 109.691 114.865 cv
109.618 114.876 109.595 114.937 109.608 115.033 cv
109.662 115.187 109.955 115.102 110.025 115.241 cv
109.977 115.388 109.796 115.402 109.691 115.492 cv
109.662 115.689 109.953 115.566 109.901 115.785 cv
109.769 115.917 109.456 115.869 109.482 116.161 cv
109.577 116.133 109.833 116.053 109.859 116.203 cv
109.885 116.493 109.564 116.437 109.44 116.578 cv
109.559 116.626 109.833 116.521 109.859 116.829 cv
109.646 116.937 109.299 116.909 109.231 117.164 cv
109.33 117.329 109.632 117.292 109.776 117.414 cv
109.667 117.529 109.482 117.565 109.44 117.748 cv
109.774 117.665 109.943 118.248 109.649 118.458 cv
109.721 118.512 109.813 118.545 109.817 118.668 cv
109.676 118.75 109.622 118.919 109.358 118.876 cv
109.4 119.098 109.752 119.011 109.859 119.169 cv
109.701 119.331 109.815 119.562 109.901 119.712 cv
109.768 119.705 109.761 119.823 109.608 119.795 cv
109.595 119.973 109.76 119.977 109.817 120.088 cv
109.61 120.361 109.743 120.765 109.941 120.965 cv
109.82 121.103 109.753 121.187 109.817 121.424 cv
109.001 121.566 108.747 121.108 108.103 121.132 cv
108.019 121.654 108.968 121.453 109.022 121.968 cv
109.376 121.902 109.684 122.601 109.901 122.135 cv
109.836 122.06 109.655 122.101 109.649 121.968 cv
109.774 121.634 110.276 121.663 110.61 121.759 cv
110.516 121.489 110.698 121.522 110.777 121.341 cv
110.645 121.139 110.457 120.994 110.318 120.798 cv
110.496 120.684 110.549 120.445 110.777 120.38 cv
110.757 120.136 110.712 119.916 110.61 119.754 cv
110.613 119.616 110.789 119.654 110.777 119.503 cv
110.575 119.302 110.543 118.928 110.193 118.876 cv
110.193 118.709 li
110.412 118.692 110.487 118.531 110.652 118.458 cv
110.541 118.259 110.664 118.094 110.736 117.957 cv
110.549 117.523 110.409 117.293 110.15 116.955 cv
110.244 116.783 110.491 116.764 110.61 116.62 cv
110.575 116.335 110.577 116.259 110.736 116.119 cv
110.661 115.733 110.755 115.294 110.36 115.074 cv
110.473 114.965 110.416 114.946 110.36 114.824 cv
110.534 114.649 110.779 114.547 111.029 114.448 cv
110.86 114.154 110.555 114.233 110.443 113.863 cv
110.492 113.828 110.555 113.808 110.652 113.821 cv
110.726 113.681 110.63 113.635 110.652 113.444 cv
110.461 113.358 110.386 113.341 110.402 113.111 cv
110.077 113.018 109.878 112.798 109.566 112.693 cv
109.494 112.718 109.569 112.891 109.482 112.902 cv
cp
118.173 112.902 mo
118.039 112.953 118.142 112.767 118.006 112.818 cv
117.924 112.932 117.832 113.034 117.671 113.069 cv
117.607 112.994 117.602 112.859 117.421 112.902 cv
117.33 112.989 117.442 113.021 117.421 113.153 cv
117.839 113.257 118.194 112.777 118.715 112.985 cv
118.744 112.888 118.823 112.841 118.883 112.777 cv
119.104 112.833 119.481 112.864 119.51 112.609 cv
119.083 112.65 118.464 112.572 118.173 112.902 cv
cp
119.677 112.609 mo
119.899 112.622 120.071 112.587 120.095 112.401 cv
119.859 112.261 119.815 112.527 119.677 112.609 cv
cp
117.046 110.687 mo
117.133 110.779 117.201 110.773 117.254 110.646 cv
117.201 110.589 117.049 110.581 117.046 110.687 cv
cp
109.817 110.604 mo
109.985 110.604 li
110.017 110.443 109.784 110.443 109.817 110.604 cv
cp
116.544 110.228 mo
116.627 110.132 116.721 110.042 116.794 109.935 cv
116.591 109.922 116.345 110.087 116.544 110.228 cv
cp
110.025 109.894 mo
110.316 110.008 110.16 110.326 110.025 110.478 cv
110.065 110.523 110.179 110.492 110.15 110.604 cv
109.894 110.872 110.294 111.707 109.901 111.899 cv
109.761 111.967 109.61 111.702 109.399 111.774 cv
109.327 111.876 109.528 111.985 109.524 112.15 cv
109.875 112.148 109.969 112.401 110.402 112.317 cv
110.342 112.724 110.884 112.531 110.777 112.985 cv
110.842 113.046 110.973 113.041 111.029 113.111 cv
110.816 113.378 111.131 113.545 111.237 113.737 cv
111.498 113.698 111.633 113.787 111.822 113.821 cv
112.041 113.621 112.301 113.667 112.532 113.444 cv
112.437 113.296 112.5 113.235 112.491 112.985 cv
112.28 112.931 112.304 112.642 112.073 112.609 cv
111.912 112.616 111.937 112.808 111.864 112.902 cv
111.703 112.936 111.703 112.813 111.654 112.734 cv
111.963 112.536 111.501 112.115 111.696 111.899 cv
111.457 111.916 111.477 111.673 111.487 111.439 cv
111.391 111.425 111.308 111.397 111.278 111.314 cv
111.339 111.203 111.355 110.767 111.195 110.687 cv
111.022 110.681 111.111 110.938 110.986 110.98 cv
110.835 111.057 110.743 110.912 110.569 110.896 cv
110.478 110.628 110.596 110.565 110.652 110.354 cv
110.608 110.272 110.461 110.295 110.402 110.228 cv
110.374 109.866 110.724 109.881 110.695 109.518 cv
110.416 109.589 110.184 109.704 110.025 109.894 cv
cp
117.629 109.434 mo
117.546 109.434 117.462 109.434 117.379 109.434 cv
117.36 109.582 117.665 109.619 117.629 109.434 cv
cp
129.161 109.685 mo
129.263 109.735 129.407 109.745 129.537 109.768 cv
129.626 109.525 129.459 109.417 129.411 109.267 cv
129.342 109.267 129.272 109.267 129.203 109.267 cv
129.15 109.396 129.124 109.578 129.161 109.685 cv
cp
127.574 109.058 mo
127.697 109.417 127.203 109.702 126.947 109.685 cv
126.193 110.394 125.208 110.871 124.147 111.273 cv
124.141 111.35 124.119 111.412 124.064 111.439 cv
123.985 111.421 123.959 111.35 123.855 111.356 cv
123.801 111.539 123.662 111.637 123.396 111.606 cv
123.342 112.138 122.669 112.049 122.435 112.401 cv
121.976 112.422 121.527 111.848 121.306 112.358 cv
121.626 112.387 121.574 112.787 121.724 112.985 cv
122.292 113.122 122.448 112.78 122.893 112.693 cv
123.068 112.143 123.906 112.257 124.189 111.815 cv
124.22 111.91 124.423 111.832 124.523 111.857 cv
124.633 111.716 124.775 111.607 124.939 111.524 cv
125.304 111.607 125.331 111.357 125.485 111.23 cv
125.915 111.049 126.261 110.781 126.57 110.478 cv
127.138 110.596 127.216 110.015 127.614 110.103 cv
127.645 109.988 127.532 110.018 127.531 109.935 cv
127.879 109.963 127.8 109.565 128.2 109.643 cv
128.042 109.297 128.162 108.875 127.866 108.724 cv
127.773 108.841 127.669 108.946 127.574 109.058 cv
cp
115.332 108.306 mo
115.2 108.455 115.359 108.667 115.415 108.765 cv
115.555 108.765 115.558 108.629 115.708 108.64 cv
115.718 108.476 115.557 108.485 115.583 108.306 cv
115.436 108.286 115.446 108.258 115.332 108.306 cv
cp
117.629 108.474 mo
117.802 108.453 117.837 108.571 117.921 108.64 cv
117.845 108.647 117.895 108.781 117.839 108.808 cv
117.963 108.822 118.093 108.832 118.131 108.933 cv
118.119 108.996 118.015 109.076 118.089 109.225 cv
118.151 109.232 118.243 109.21 118.256 109.267 cv
118.3 109.49 118.2 109.572 118.089 109.643 cv
118.16 109.697 118.254 109.729 118.256 109.852 cv
118.204 109.94 118.098 109.973 118.089 110.103 cv
118.221 110.123 118.184 109.974 118.339 110.018 cv
118.473 110.16 118.438 110.502 118.298 110.604 cv
118.518 111.143 118.268 111.548 118.507 111.983 cv
118.493 112.08 118.324 112.023 118.298 112.108 cv
118.68 112.317 119.194 112.172 119.718 112.191 cv
119.76 111.954 119.895 111.998 120.137 112.025 cv
120.033 111.883 119.891 111.778 119.929 111.606 cv
119.772 111.539 119.63 111.459 119.551 111.314 cv
119.671 111.309 119.628 111.14 119.635 111.022 cv
119.395 110.97 119.283 110.789 119.302 110.478 cv
119.171 110.309 118.848 110.181 118.966 109.894 cv
118.809 109.829 118.779 109.705 118.842 109.518 cv
118.755 109.493 118.568 109.569 118.548 109.475 cv
118.529 109.261 118.662 109.198 118.758 109.1 cv
118.661 109.1 118.562 109.1 118.466 109.1 cv
118.25 108.703 118.036 108.305 117.714 108.014 cv
117.652 108.2 117.704 108.272 117.629 108.474 cv
cp
127.741 108.682 mo
128.06 108.381 127.467 107.87 127.155 107.679 cv
127.248 108.115 127.508 108.385 127.741 108.682 cv
cp
126.989 107.345 mo
126.991 107.467 127.084 107.501 127.155 107.554 cv
127.19 107.487 127.314 107.299 127.197 107.219 cv
127.146 107.28 127.038 107.283 126.989 107.345 cv
cp
107.686 107.387 mo
107.811 107.387 li
107.805 107.324 107.826 107.233 107.77 107.219 cv
107.752 107.286 107.639 107.255 107.686 107.387 cv
cp
126.821 106.969 mo
126.863 107.011 li
126.9 106.896 127.016 107.093 127.03 106.927 cv
126.982 106.893 126.917 106.872 126.821 106.886 cv
126.821 106.969 li
cp
112.281 105.966 mo
112.204 106.028 112.219 106.182 112.073 106.175 cv
111.968 106.182 111.943 106.11 111.864 106.091 cv
111.695 106.249 111.504 106.49 111.195 106.384 cv
110.876 106.792 110.147 106.534 109.776 106.886 cv
109.659 107.529 109.6 107.881 109.524 108.556 cv
109.61 108.624 109.798 108.589 109.859 108.682 cv
109.876 108.896 109.698 108.911 109.691 109.1 cv
110.034 109.347 110.555 108.952 110.736 109.058 cv
110.885 108.803 111.029 108.543 111.404 108.515 cv
111.628 108.132 111.408 107.934 111.237 107.638 cv
111.396 107.607 111.516 107.489 111.654 107.554 cv
111.688 107.727 111.591 107.768 111.614 107.93 cv
111.738 108.003 112.084 108.001 112.157 107.888 cv
112.109 107.643 112.067 107.393 111.906 107.262 cv
112.161 107.11 112.249 107.283 112.532 107.303 cv
112.549 107.12 112.413 107.088 112.407 106.927 cv
112.47 106.864 112.483 106.751 112.573 106.719 cv
112.648 106.867 112.828 106.91 112.95 107.011 cv
113.088 106.995 113.134 106.889 113.242 106.844 cv
113.123 106.35 112.639 106.221 112.281 105.966 cv
cp
125.777 105.339 mo
125.861 105.449 126.199 105.568 126.153 105.256 cv
126.079 105.232 125.908 105.307 125.902 105.215 cv
125.83 105.078 126.102 105.013 125.902 105.006 cv
125.777 105.034 125.763 105.172 125.777 105.339 cv
cp
117.087 105.006 mo
117.37 105.1 117.27 105.321 117.462 105.507 cv
117.294 105.624 117.068 105.501 116.962 105.423 cv
116.753 105.76 116.615 106.164 116.292 106.384 cv
116.28 106.481 116.3 106.544 116.335 106.593 cv
116.158 106.612 116.157 106.806 115.999 106.844 cv
116.116 107.431 115.918 107.818 116.126 108.306 cv
115.956 108.638 115.82 109.005 115.625 109.309 cv
115.572 109.251 115.42 109.291 115.415 109.183 cv
115.514 109.065 115.435 108.855 115.332 108.808 cv
115.159 108.759 115.168 108.896 115.039 108.891 cv
114.741 108.701 114.971 108.173 115.039 107.93 cv
114.952 107.795 114.877 107.646 114.872 107.429 cv
115.132 107.479 115.159 107.297 115.207 107.136 cv
115.145 107.113 114.99 107.185 114.997 107.094 cv
115.347 106.651 115.965 106.637 115.959 105.925 cv
115.659 105.905 115.913 105.722 115.833 105.59 cv
115.704 105.621 115.753 105.476 115.625 105.507 cv
115.575 105.556 115.576 105.654 115.583 105.758 cv
115.273 105.824 115.172 106.1 114.956 106.259 cv
114.214 105.991 114.214 106.827 113.576 106.802 cv
113.544 107.243 113.126 107.299 112.992 107.638 cv
112.908 107.638 112.825 107.638 112.741 107.638 cv
112.623 107.882 112.379 108.125 112.197 108.181 cv
112.201 108.49 111.957 108.552 111.696 108.598 cv
111.635 108.829 111.403 108.889 111.362 109.142 cv
111.445 109.227 111.609 109.229 111.614 109.393 cv
111.609 109.5 111.45 109.452 111.446 109.559 cv
111.621 109.598 111.67 109.548 111.822 109.643 cv
111.634 109.832 112.021 110.172 111.78 110.437 cv
112.023 110.61 112.161 111.07 112.114 111.398 cv
112.139 111.47 112.312 111.394 112.324 111.481 cv
112.219 111.742 112.407 111.878 112.532 112.025 cv
112.376 112.093 112.531 112.435 112.657 112.484 cv
112.538 112.591 112.616 112.684 112.616 112.86 cv
112.726 112.888 112.83 112.926 112.908 112.985 cv
112.734 113.096 112.885 113.327 112.95 113.444 cv
113.153 113.457 113.291 113.348 113.409 113.486 cv
113.722 113.122 114.426 113.401 114.747 113.069 cv
115.643 113.201 116.159 112.731 116.919 112.734 cv
117.105 112.35 117.968 112.716 118.089 112.191 cv
118.075 112.093 117.892 112.167 117.921 112.025 cv
117.973 111.977 117.998 111.905 118.131 111.941 cv
118.206 111.498 117.935 111.497 117.671 111.481 cv
117.435 111.625 117.608 112.03 117.421 112.15 cv
117.309 112.064 117.299 112.074 117.337 111.899 cv
117.092 111.904 117.152 112.215 116.962 112.274 cv
116.825 112.244 116.695 112.206 116.71 112.025 cv
116.748 111.951 116.857 111.948 116.919 111.899 cv
116.795 111.688 117.017 111.62 117.046 111.439 cv
117.007 111.24 116.862 111.149 116.71 111.063 cv
116.693 110.893 116.848 110.894 116.794 110.687 cv
116.516 110.743 116.626 110.41 116.418 110.395 cv
116.359 110.489 116.388 110.671 116.251 110.687 cv
116.239 110.601 116.066 110.678 116.084 110.562 cv
116.196 109.991 116.504 109.618 116.584 109.016 cv
116.716 109.036 116.748 108.957 116.835 108.933 cv
116.704 108.752 116.986 108.619 116.835 108.431 cv
116.924 108.301 117.022 108.422 117.128 108.348 cv
116.988 108.137 116.949 107.707 116.584 107.846 cv
116.622 107.665 116.252 107.582 116.46 107.345 cv
116.348 107.344 116.213 107.368 116.21 107.262 cv
116.263 107.106 116.455 107.09 116.584 107.011 cv
116.644 107.133 116.804 107.155 116.752 107.387 cv
117.054 107.363 116.997 107.699 117.211 107.763 cv
117.414 107.727 117.372 107.45 117.629 107.47 cv
117.661 106.695 118.179 106.283 118.715 105.841 cv
118.521 105.688 118.233 105.628 118.131 105.381 cv
118.23 105.341 118.396 105.368 118.381 105.215 cv
118.259 105.162 118.132 105.242 117.921 105.215 cv
117.956 105.096 117.862 105.106 117.88 105.006 cv
117.917 104.917 118.058 104.933 118.047 104.796 cv
117.663 104.439 117.329 104.771 117.087 105.006 cv
cp
125.358 105.006 mo
125.499 105.02 125.544 105.126 125.734 105.089 cv
125.698 104.857 125.814 104.779 125.818 104.587 cv
125.62 104.555 125.633 104.736 125.442 104.713 cv
125.432 104.563 125.568 104.56 125.567 104.42 cv
125.307 104.422 125.365 104.877 125.358 105.006 cv
cp
113.744 104.42 mo
113.583 104.384 113.595 104.522 113.493 104.546 cv
113.626 104.827 113.322 104.822 113.284 105.047 cv
113.332 105.264 113.168 105.551 112.95 105.633 cv
112.986 105.82 113.117 105.911 113.284 105.966 cv
113.284 106.064 113.284 106.162 113.284 106.259 cv
113.517 106.168 113.52 106.438 113.785 106.426 cv
113.948 106.24 114.046 105.99 114.204 105.799 cv
114.492 105.703 114.737 105.921 114.997 105.716 cv
115.002 105.391 114.74 105.333 114.747 105.006 cv
114.899 105.019 115.019 104.999 115.123 104.964 cv
115.05 104.633 114.557 104.722 114.496 104.379 cv
114.58 104.267 114.797 104.289 114.831 104.128 cv
114.619 104.042 114.494 104.013 114.287 104.003 cv
114.325 103.781 114.129 103.735 113.995 103.585 cv
113.834 103.837 113.621 104.112 113.744 104.42 cv
cp
113.995 103.502 mo
114.142 103.483 114.171 103.413 114.12 103.293 cv
114.169 103.374 114.445 103.199 114.328 103.125 cv
114.204 103.114 113.923 103.189 113.995 103.502 cv
cp
124.565 102.833 mo
124.733 103.082 124.767 103.262 124.858 103.627 cv
125.101 103.634 125.03 103.956 125.318 103.919 cv
125.522 103.477 124.798 103.483 125.066 103.125 cv
124.752 103.017 124.822 102.617 124.607 102.499 cv
124.625 102.642 124.591 102.733 124.565 102.833 cv
cp
107.393 102.707 mo
107.402 102.588 107.398 102.48 107.268 102.499 cv
107.088 102.6 107.163 102.805 107.393 102.707 cv
cp
114.705 102.958 mo
114.774 103.237 114.322 103.621 114.705 103.878 cv
114.875 103.88 114.906 103.745 115.08 103.752 cv
115.179 103.765 115.106 103.95 115.248 103.919 cv
115.28 103.948 115.526 103.837 115.499 103.668 cv
115.472 103.541 115.275 103.587 115.248 103.459 cv
115.371 103.242 115.102 102.82 115.373 102.54 cv
115.22 102.567 115.15 102.513 115.08 102.457 cv
114.993 102.661 114.868 102.829 114.705 102.958 cv
cp
122.267 101.83 mo
122.099 101.83 li
121.885 101.926 121.851 102.129 121.683 102.29 cv
121.603 102.364 121.47 102.367 121.432 102.499 cv
121.201 102.512 121.081 102.64 120.846 102.54 cv
120.016 103.528 118.547 103.62 117.421 104.295 cv
117.647 104.348 117.969 104.304 118.047 104.504 cv
118.245 104.382 118.642 104.458 118.883 104.379 cv
118.997 104.57 119.356 104.601 119.594 104.546 cv
119.594 104.922 120.194 104.697 120.095 105.172 cv
120.436 105.134 120.296 105.493 120.305 105.59 cv
120.376 105.642 120.582 105.558 120.763 105.59 cv
120.642 105.859 120.191 105.799 120.053 106.05 cv
119.485 106.259 118.854 105.914 118.466 106.3 cv
118.573 106.499 118.577 106.802 118.758 106.927 cv
118.893 107.53 119.247 107.914 119.551 108.348 cv
119.718 108.348 li
120.182 107.963 120.783 107.715 121.264 107.345 cv
121.73 107.295 121.985 107.035 122.225 106.76 cv
122.292 106.778 122.262 106.892 122.391 106.844 cv
122.516 106.619 122.731 106.486 122.936 106.343 cv
123.41 106.368 123.723 105.654 124.272 105.758 cv
124.109 106.347 123.328 106.316 123.019 106.76 cv
122.938 106.682 122.914 106.756 122.81 106.76 cv
122.81 106.858 122.81 106.955 122.81 107.053 cv
122.273 107.278 121.903 107.809 121.306 107.846 cv
121.236 107.928 121.258 108.104 121.18 108.181 cv
121.083 108.194 121.024 108.247 120.888 108.222 cv
120.788 108.318 120.746 108.469 120.68 108.598 cv
120.46 108.478 120.37 108.807 120.305 108.974 cv
120.315 109.06 120.46 109.014 120.469 109.1 cv
120.34 109.372 120.786 109.595 120.637 109.978 cv
120.759 110.094 120.747 109.84 120.929 109.894 cv
121.05 110.224 121.092 110.42 121.224 110.771 cv
121.287 110.85 121.385 110.711 121.472 110.813 cv
121.457 110.892 121.384 110.918 121.39 111.022 cv
121.619 111.2 121.767 111.425 121.683 111.815 cv
121.868 111.854 122.111 112.054 122.267 111.983 cv
122.214 111.965 122.181 111.929 122.183 111.857 cv
122.52 111.692 122.597 111.268 123.102 111.273 cv
123.328 111.102 123.707 110.746 124.147 110.813 cv
124.231 110.618 124.463 110.57 124.607 110.437 cv
124.831 110.526 125.259 110.272 125.401 110.018 cv
126.17 109.803 126.799 109.372 127.406 108.891 cv
127.19 108.486 127.136 108.16 126.779 107.93 cv
126.742 107.571 126.607 107.33 126.361 107.011 cv
126.397 106.963 126.417 106.899 126.404 106.802 cv
125.954 106.618 126.208 105.783 125.61 105.925 cv
125.61 105.799 125.61 105.674 125.61 105.548 cv
125.282 105.472 125.312 105.039 125.066 104.88 cv
125.133 104.821 125.172 104.736 125.192 104.629 cv
124.981 104.381 124.799 104.103 124.733 103.71 cv
124.486 103.541 124.317 103.112 124.315 102.833 cv
124.231 102.791 124.136 102.76 124.106 102.666 cv
124.106 102.583 124.219 102.612 124.189 102.499 cv
123.746 102.342 123.632 101.858 123.478 101.412 cv
122.951 101.205 122.612 101.644 122.267 101.83 cv
cp
106.976 99.4075 mo
106.875 99.4245 106.885 99.3305 106.767 99.3652 cv
106.562 99.55 106.47 99.8484 106.265 100.034 cv
106.44 100.026 106.394 100.239 106.6 100.2 cv
106.908 99.7986 107.111 99.292 107.77 99.2396 cv
107.897 99.2787 107.9 99.4434 108.062 99.4485 cv
108.413 99.215 108.747 99.5519 109.19 99.3652 cv
109.267 99.4554 109.436 99.4529 109.399 99.6579 cv
109.526 99.6882 109.521 99.5854 109.649 99.6157 cv
109.69 99.7292 109.8 99.7721 109.859 99.8668 cv
109.229 100.13 109.104 99.4478 108.355 99.6989 cv
108.065 100.009 107.683 100.226 107.519 100.66 cv
107.624 100.708 107.755 100.73 107.811 100.828 cv
107.629 101.398 107.203 101.969 107.393 102.457 cv
107.6 102.473 107.901 102.394 107.936 102.583 cv
107.696 102.957 108.051 103.521 107.727 103.961 cv
107.738 104.118 107.885 104.138 107.895 104.295 cv
107.46 104.592 108.099 104.941 107.855 105.381 cv
108.091 105.367 108.199 105.481 108.313 105.59 cv
108.449 105.588 108.473 105.472 108.647 105.507 cv
108.688 105.59 li
108.67 105.948 108.195 105.849 108.271 106.3 cv
108.156 106.304 108.186 106.231 108.103 106.3 cv
108.114 106.383 108.028 106.614 108.103 106.719 cv
108.395 106.76 li
108.356 106.954 108.449 107.012 108.48 107.136 cv
108.357 107.139 108.325 107.232 108.271 107.303 cv
108.398 107.371 108.532 107.432 108.563 107.595 cv
108.54 107.682 108.483 107.738 108.395 107.763 cv
108.431 107.951 108.436 108.169 108.521 108.306 cv
108.473 108.369 108.347 108.355 108.355 108.474 cv
108.516 108.673 108.601 108.951 108.814 109.1 cv
108.949 109.041 109.187 109.082 109.19 108.891 cv
109.048 108.445 109.415 107.653 109.358 107.178 cv
109.423 107.174 109.502 107.183 109.482 107.094 cv
109.479 106.987 109.304 107.051 109.358 106.886 cv
109.348 106.667 109.63 106.741 109.691 106.593 cv
109.608 106.551 109.514 106.521 109.482 106.426 cv
109.658 106.392 109.803 106.329 109.901 106.217 cv
109.883 106.04 109.688 106.04 109.691 105.841 cv
109.357 105.869 109.227 105.693 109.148 105.465 cv
109.227 105.461 109.177 105.327 109.274 105.339 cv
109.619 105.423 109.979 105.391 110.235 105.633 cv
110.198 105.827 110.037 105.638 109.985 105.799 cv
110.04 105.896 110.225 105.864 110.318 105.925 cv
110.244 106.149 110.564 106.311 110.819 106.343 cv
110.782 106.049 111.179 106.142 111.362 106.008 cv
111.186 105.895 110.931 105.549 111.111 105.339 cv
111.022 105.263 110.77 105.348 110.695 105.256 cv
110.905 105.054 110.581 104.865 110.527 104.671 cv
110.615 104.633 110.712 104.606 110.777 104.546 cv
110.695 104.348 110.685 104.205 110.777 104.003 cv
110.774 103.895 110.615 103.943 110.61 103.835 cv
110.85 103.623 110.545 103.369 110.736 103.125 cv
110.627 102.795 110.409 102.281 110.61 101.913 cv
110.489 101.925 110.467 101.835 110.402 101.788 cv
110.563 101.344 109.751 100.757 110.025 100.2 cv
110.425 100.402 110.528 100.871 110.527 101.371 cv
110.855 101.503 110.857 101.959 111.278 101.997 cv
111.276 102.244 111.321 102.54 111.154 102.624 cv
111.371 102.803 111.219 103.304 111.278 103.543 cv
111.495 103.495 111.497 103.66 111.53 103.794 cv
111.431 103.793 111.407 103.866 111.278 103.835 cv
111.376 104.034 111.066 104.035 111.195 104.128 cv
111.233 104.037 111.429 104.001 111.404 104.17 cv
111.421 104.27 111.215 104.147 111.278 104.295 cv
111.408 104.676 111.129 105.187 111.53 105.465 cv
111.516 105.563 111.385 105.543 111.404 105.674 cv
111.599 106.038 111.732 105.793 112.031 105.716 cv
112.472 105.602 112.744 105.319 112.95 105.256 cv
112.956 105.153 112.957 105.055 112.908 105.006 cv
112.958 104.943 113.066 104.941 113.117 104.88 cv
112.942 104.687 113.363 104.536 113.117 104.379 cv
113.192 104.258 113.312 104.183 113.452 104.128 cv
113.491 103.95 113.286 104.015 113.284 103.878 cv
113.452 103.878 li
113.46 103.714 113.484 103.653 113.66 103.585 cv
113.664 103.512 113.65 103.455 113.617 103.418 cv
114.007 103.012 114.152 102.364 114.622 102.039 cv
114.769 102.185 115.198 102.362 115.248 102.039 cv
115.021 101.885 114.683 101.636 114.788 101.287 cv
114.511 101.335 114.588 101.071 114.622 100.911 cv
114.492 100.874 114.427 100.772 114.287 100.744 cv
114.201 100.756 114.205 100.857 114.12 100.869 cv
114.167 101.129 114.249 101.352 114.287 101.621 cv
114.204 101.663 li
114.049 101.651 113.918 101.615 113.869 101.496 cv
113.91 101.177 113.827 101 113.869 100.577 cv
113.796 100.538 113.66 100.563 113.617 100.493 cv
113.737 100.528 113.727 100.435 113.828 100.452 cv
113.915 99.9986 113.535 99.7651 113.576 99.2813 cv
113.132 99.1324 112.879 99.5778 112.491 99.6157 cv
112.132 99.651 111.85 99.4964 111.487 99.5323 cv
111.457 99.4113 111.29 99.4245 111.321 99.2396 cv
111.164 99.222 111.173 99.3708 111.069 99.4075 cv
110.582 99.1904 110.068 99.5172 109.691 99.198 cv
109.141 99.3406 108.668 98.7318 107.979 98.7388 cv
107.914 99.2314 107.035 98.9103 106.976 99.4075 cv
cp
112.449 98.446 mo
111.809 98.5577 110.869 98.5955 110.235 98.5716 cv
110.179 98.6757 110.429 98.6725 110.276 98.7388 cv
110.08 98.6908 109.912 98.6113 109.691 98.6971 cv
109.76 99.046 110.276 98.9476 110.443 99.198 cv
110.599 99.0479 110.895 99.0372 111.069 98.9059 cv
111.186 98.9299 111.245 99.0094 111.362 99.0315 cv
111.853 98.7672 112.922 99.2207 113.117 98.7388 cv
113.025 98.6769 112.893 98.6573 112.825 98.5716 cv
112.677 98.5489 112.722 98.7192 112.573 98.6971 cv
112.435 98.6334 112.481 98.5425 112.449 98.446 cv
cp
108.898 97.778 mo
109.05 97.8044 109.057 97.6871 109.19 97.694 cv
109.377 97.8549 109.586 97.995 109.608 98.3211 cv
109.896 98.2889 110.073 98.1458 110.443 98.1949 cv
110.354 97.7559 109.825 97.7546 109.691 97.3597 cv
109.277 97.3483 109.026 97.5023 108.898 97.778 cv
cp
109.985 96.8582 mo
109.985 96.691 li
109.823 96.6588 109.823 96.8916 109.985 96.8582 cv
cp
107.017 95.9813 mo
107.099 96.192 107.438 96.1459 107.519 96.3572 cv
107.342 96.7238 107.963 96.8077 107.811 97.1503 cv
107.877 97.1547 107.956 97.1452 107.936 97.2341 cv
107.957 97.3666 107.73 97.2499 107.77 97.402 cv
107.967 97.4966 107.937 97.6619 107.855 97.8606 cv
108.295 98.2827 108.926 98.5148 109.608 98.6971 cv
109.541 98.424 109.295 98.4782 109.358 98.1533 cv
108.736 98.1766 108.492 97.5647 108.688 97.0253 cv
108.458 97.0064 108.422 96.7913 108.355 96.6077 cv
108.203 96.568 107.825 96.4096 107.936 96.1068 cv
107.696 95.7844 107.407 95.8141 107.017 95.9813 cv
cp
110.443 94.059 mo
110.542 94.0331 110.638 94.0029 110.652 93.8918 cv
110.582 93.8918 110.513 93.8918 110.443 93.8918 cv
110.443 94.059 li
cp
109.649 93.9341 mo
109.63 94.1417 109.921 94.042 109.901 93.8918 cv
109.773 93.8616 109.748 93.9348 109.649 93.9341 cv
cp
109.19 93.8086 mo
109.247 93.9493 109.168 94.03 109.231 94.1006 cv
109.385 94.0168 109.631 93.8061 109.482 93.5582 cv
109.437 93.6944 109.298 93.7348 109.19 93.8086 cv
cp
110.193 93.3487 mo
110.169 93.4269 109.972 93.5411 110.068 93.5991 cv
110.186 93.5872 110.272 93.0566 110.193 93.3487 cv
cp
113.368 92.9727 mo
113.235 93.2818 112.893 93.1317 112.532 93.1821 cv
112.327 93.4137 112.59 93.7032 112.491 93.9341 cv
112.53 94.0193 112.705 93.9688 112.7 94.1006 cv
112.67 94.1833 112.587 94.2123 112.491 94.2269 cv
112.724 94.647 112.079 94.8835 112.197 95.3126 cv
111.955 95.2678 111.992 95.5699 111.948 95.6053 cv
111.785 95.6172 111.616 95.5989 111.57 95.8135 cv
111.67 95.8279 111.751 95.857 111.78 95.939 cv
111.71 96.1333 111.442 96.1308 111.404 96.3572 cv
111.416 96.4431 111.56 96.3964 111.57 96.4822 cv
111.441 96.7717 110.909 96.8632 110.695 96.6077 cv
110.652 96.7333 110.546 96.7944 110.569 96.9837 cv
110.663 97.0285 110.752 97.0783 110.819 97.1503 cv
110.794 97.3199 110.593 97.3149 110.443 97.3597 cv
110.388 97.1749 110.033 97.1382 109.941 97.3181 cv
110.326 97.4631 110.558 97.7609 110.903 97.9445 cv
111.409 97.988 111.638 98.1514 112.073 98.1949 cv
112.177 98.0631 112.38 98.0291 112.407 97.819 cv
112.208 97.4896 111.71 97.4575 111.614 97.0253 cv
111.55 97.0184 111.459 97.0405 111.446 96.9837 cv
111.45 96.9111 111.436 96.8538 111.404 96.8171 cv
111.917 96.5251 112.467 96.8878 112.657 97.3181 cv
113.13 97.3729 113.658 97.6202 113.785 97.1503 cv
113.828 96.9982 113.621 96.8619 113.744 96.6494 cv
113.666 96.6437 113.605 96.6222 113.576 96.5661 cv
113.804 96.4835 113.701 96.3232 113.66 96.1068 cv
113.715 96.0488 113.857 96.0809 113.911 96.0223 cv
113.892 95.8463 113.746 95.7977 113.785 95.5637 cv
113.963 95.399 114.364 95.4747 114.328 95.7725 cv
114.494 95.7415 114.497 95.7415 114.663 95.7725 cv
115.032 95.3832 114.709 94.8211 114.956 94.3934 cv
114.925 94.3265 114.752 94.4028 114.788 94.2685 cv
115.068 93.8584 115.048 93.4232 115.248 93.0143 cv
115.12 92.9979 115.036 93.1248 114.997 92.9727 cv
115.018 92.8629 115.228 92.8326 115.123 92.7222 cv
114.474 92.7759 114.109 92.9077 113.368 92.9727 cv
cp
109.817 92.5974 mo
109.817 92.5273 109.817 92.4573 109.817 92.3879 cv
109.747 92.3879 109.676 92.3879 109.608 92.3879 cv
109.626 92.5084 109.695 92.5784 109.817 92.5974 cv
cp
110.485 92.5551 mo
110.326 92.4068 110.025 92.5147 109.941 92.6806 cv
110.166 92.6238 110.071 92.885 110.193 92.931 cv
110.2 92.8825 110.258 92.8856 110.318 92.8894 cv
110.366 92.798 110.326 92.6194 110.443 92.5974 cv
110.493 92.6585 110.601 92.6617 110.652 92.7222 cv
110.805 92.7084 110.821 92.5569 111.029 92.5974 cv
110.977 92.285 110.586 92.3135 110.485 92.5551 cv
cp
115.123 91.7192 mo
113.804 91.6561 112.708 92.374 111.446 92.263 cv
111.345 92.3563 111.14 92.3469 111.111 92.5134 cv
111.406 92.656 111.26 92.9039 111.195 93.1821 cv
111.308 93.2219 111.396 93.2869 111.404 93.4326 cv
111.562 93.4648 111.604 93.3815 111.738 93.3909 cv
111.619 93.8641 112.057 93.9663 111.822 94.3095 cv
111.876 94.3676 112.003 94.3511 112.114 94.3517 cv
112.231 93.9348 112.156 93.5468 112.114 93.0143 cv
112.26 92.938 112.442 92.897 112.532 92.7639 cv
112.49 92.586 112.293 92.6263 112.407 92.3879 cv
113.192 92.3444 113.734 92.1229 114.539 92.263 cv
114.559 92.1311 114.439 92.092 114.58 92.0535 cv
114.902 92.1437 115.562 92.2952 115.499 91.887 cv
115.376 91.9943 115.281 91.7167 115.123 91.7192 cv
cp
111.111 89.8815 mo
111.32 89.8966 111.42 90.0197 111.487 90.1736 cv
111.261 90.226 111.133 90.3761 110.861 90.3824 cv
110.842 90.8379 110.545 91.0132 110.235 91.1766 cv
110.206 91.7192 110.797 91.3646 110.945 91.4688 cv
110.986 91.5526 li
110.897 91.7274 110.733 91.8277 110.652 92.0119 cv
111.619 92.3217 112.462 91.5766 113.452 91.5943 cv
113.562 91.5369 113.61 91.4183 113.744 91.3854 cv
114.183 91.41 114.575 91.4669 114.997 91.3432 cv
114.761 90.5395 113.787 90.3294 113.076 90.132 cv
112.676 90.1938 111.956 90.0304 111.822 89.7143 cv
111.609 89.7471 111.197 89.5516 111.111 89.8815 cv
cp
100.208 131.076 mo
100.157 131.2 100.197 131.217 100.249 131.326 cv
100.304 131.311 100.315 131.253 100.375 131.242 cv
100.331 131.107 100.181 131.073 100.124 130.95 cv
100.104 130.819 100.183 130.787 100.208 130.7 cv
100.197 130.613 100.024 130.689 99.9991 130.616 cv
100.151 130.333 100.197 130.035 99.9991 129.781 cv
100.036 129.692 100.127 129.657 100.124 129.53 cv
100.39 129.636 100.492 129.443 100.709 129.53 cv
100.62 129.664 100.514 129.78 100.375 129.864 cv
100.511 130.07 100.46 130.202 100.459 130.533 cv
100.41 130.568 100.347 130.588 100.249 130.574 cv
100.507 130.693 100.448 131.127 100.583 131.368 cv
100.394 131.63 100.415 131.842 100.291 132.162 cv
100.284 132.377 100.771 132.277 100.583 132.538 cv
100.8 132.531 100.694 132.203 100.835 132.121 cv
100.827 132.042 100.692 132.094 100.667 132.037 cv
100.696 131.898 100.811 131.846 100.919 131.786 cv
100.925 131.695 100.771 131.767 100.709 131.744 cv
100.862 131.355 100.636 131.12 100.919 130.825 cv
100.931 130.728 100.797 130.779 100.792 130.7 cv
101.027 130.46 100.785 130.038 100.959 129.781 cv
101.207 129.742 101.173 129.985 101.253 130.115 cv
101.213 130.284 101.058 130.339 101.002 130.491 cv
101.109 130.834 101.201 131.283 101.002 131.535 cv
101.275 131.816 101.003 131.995 101.21 132.287 cv
101.444 132.323 101.666 132.106 101.461 131.953 cv
101.541 131.838 101.656 131.759 101.878 131.786 cv
101.914 131.653 101.842 131.627 101.795 131.578 cv
102.362 130.904 103.273 130.577 103.801 129.864 cv
103.801 129.766 103.801 129.669 103.801 129.572 cv
103.878 129.523 103.942 129.462 104.009 129.404 cv
103.932 129.26 103.794 129.174 103.717 129.029 cv
103.7 128.872 103.848 128.881 103.885 128.778 cv
103.886 128.636 103.787 128.597 103.717 128.527 cv
103.891 128.294 103.559 127.907 103.801 127.65 cv
103.58 127.422 103.837 126.973 103.633 126.731 cv
103.856 126.232 103.479 125.539 103.758 125.185 cv
103.791 125.028 103.6 125.094 103.592 124.976 cv
103.799 124.585 103.441 123.93 103.801 123.555 cv
103.639 123.466 103.663 123.191 103.55 123.055 cv
103.616 122.898 103.81 122.868 103.842 122.678 cv
103.793 122.547 103.7 122.664 103.592 122.553 cv
103.802 122.296 103.436 121.92 103.758 121.676 cv
103.765 121.571 103.695 121.545 103.633 121.508 cv
103.665 121.414 103.76 121.383 103.842 121.341 cv
103.782 121.221 103.771 121.051 103.633 121.007 cv
103.873 120.826 103.565 120.57 103.801 120.422 cv
103.749 120.348 103.679 120.454 103.592 120.38 cv
103.81 120.204 103.629 120.043 103.633 119.754 cv
103.704 119.754 103.772 119.754 103.842 119.754 cv
103.768 119.702 103.673 119.672 103.633 119.586 cv
103.661 119.389 103.764 119.051 103.55 118.96 cv
103.594 118.808 103.688 118.709 103.758 118.584 cv
103.765 118.479 103.695 118.453 103.633 118.417 cv
103.816 118.172 103.786 117.521 103.633 117.247 cv
103.755 117.09 103.705 116.883 103.592 116.745 cv
103.682 116.49 103.867 115.972 103.592 115.701 cv
103.635 115.662 103.604 115.547 103.717 115.575 cv
103.601 115.144 103.549 114.8 103.801 114.406 cv
103.404 114.077 103.813 113.835 103.842 113.403 cv
103.444 113.116 103.861 112.59 103.55 112.191 cv
103.638 112.015 103.777 111.889 103.758 111.606 cv
103.676 111.523 103.589 111.442 103.592 111.273 cv
103.771 111.102 103.687 110.925 103.885 110.771 cv
103.862 110.628 103.683 110.707 103.592 110.729 cv
103.598 110.622 103.652 110.567 103.758 110.562 cv
103.665 110.369 103.547 110.297 103.676 110.06 cv
103.382 109.825 103.207 109.471 102.798 109.35 cv
102.912 109.163 102.774 109.063 102.673 108.974 cv
102.676 108.851 102.768 108.819 102.839 108.765 cv
102.859 108.634 102.728 108.655 102.714 108.556 cv
102.934 108.178 103.104 107.937 103.215 107.512 cv
103.448 107.494 103.599 107.393 103.717 107.262 cv
104.334 107.363 105.083 107.114 105.305 107.721 cv
105.676 107.726 105.657 108.121 105.848 108.306 cv
105.825 108.451 105.65 108.715 105.889 108.765 cv
105.926 109.181 105.402 109.46 105.472 109.978 cv
105.177 109.947 105.161 110.196 104.929 110.228 cv
104.8 110.066 105.141 109.842 104.97 109.643 cv
105.171 109.48 105.215 109.163 105.43 109.016 cv
105.23 108.907 105.448 108.773 105.43 108.598 cv
105.372 108.532 105.286 108.492 105.18 108.474 cv
105.315 108.213 105.077 108.075 105.013 107.888 cv
104.615 107.794 103.983 107.439 103.926 108.097 cv
104.058 108.343 104.364 108.335 104.636 108.348 cv
104.61 108.545 104.373 108.531 104.177 108.556 cv
104.274 108.758 104.206 108.734 104.093 108.891 cv
104.322 108.969 104.499 109.098 104.636 109.267 cv
104.388 109.635 104.423 110.01 104.302 110.395 cv
104.318 110.532 104.424 110.579 104.469 110.687 cv
104.249 110.888 104.442 111.029 104.302 111.273 cv
104.315 111.329 104.406 111.307 104.469 111.314 cv
104.488 111.541 104.329 111.593 104.302 111.774 cv
104.376 111.825 104.471 111.856 104.51 111.941 cv
104.326 112.386 104.508 113.031 104.469 113.612 cv
104.781 113.631 104.708 113.267 104.929 113.194 cv
104.938 113.018 104.77 113.019 104.761 112.86 cv
105.05 112.287 104.65 111.837 104.886 111.273 cv
104.899 111.107 104.708 111.144 104.72 110.98 cv
104.702 110.837 104.845 110.854 104.886 110.771 cv
104.845 110.701 104.694 110.741 104.678 110.646 cv
104.813 110.451 104.928 110.493 105.18 110.437 cv
105.008 110.727 105.285 111.164 105.054 111.481 cv
105.034 111.612 105.16 111.599 105.221 111.648 cv
105.01 111.983 105.301 112.338 105.137 112.693 cv
105.291 112.992 105.995 112.604 106.181 112.818 cv
106.294 112.791 106.335 112.693 106.391 112.609 cv
106.78 112.608 107.122 112.562 107.476 112.526 cv
107.538 112.432 107.59 112.333 107.644 112.233 cv
107.61 112.044 107.456 111.976 107.436 111.774 cv
107.432 111.632 107.558 111.618 107.644 111.565 cv
107.609 111.503 107.539 111.475 107.436 111.481 cv
107.566 111.121 107.087 110.847 107.436 110.562 cv
107.304 110.429 107.279 110.189 107.1 110.103 cv
107.149 109.812 107.152 109.709 106.935 109.559 cv
106.881 109.395 107.056 109.458 107.06 109.35 cv
106.832 109.217 106.725 108.961 106.767 108.556 cv
106.743 108.455 106.609 108.463 106.517 108.431 cv
106.562 108.232 106.464 108.178 106.391 108.097 cv
106.539 107.544 106.175 107.009 105.932 106.593 cv
106.009 106.273 105.926 106.062 105.724 105.925 cv
105.753 105.741 105.745 105.705 105.848 105.548 cv
105.831 105.455 105.625 105.548 105.597 105.465 cv
105.789 105.197 105.46 105.037 105.64 104.839 cv
105.616 104.737 105.481 104.745 105.389 104.713 cv
105.332 104.472 105.417 104.317 105.513 104.128 cv
105.117 103.574 105.457 102.734 105.18 102.248 cv
105.236 102.096 105.427 102.078 105.513 101.956 cv
105.374 101.711 105.365 101.575 105.305 101.287 cv
105.773 101.209 105.532 100.99 105.43 100.703 cv
105.484 100.645 105.612 100.66 105.724 100.66 cv
105.657 100.453 105.75 100.334 105.597 100.2 cv
105.616 100.08 105.685 100.011 105.807 99.9916 cv
105.761 99.5425 106.009 99.3867 106.224 99.198 cv
106.252 99.0447 106.133 99.0378 106.141 98.9059 cv
106.202 98.8839 106.245 98.8434 106.308 98.822 cv
106.338 98.694 106.193 98.7413 106.224 98.6132 cv
106.311 98.576 106.347 98.4864 106.474 98.4877 cv
106.371 98.089 106.761 97.7054 106.851 97.3597 cv
106.868 97.084 106.712 96.7793 106.935 96.6494 cv
106.658 96.4607 106.629 96.0166 106.725 95.7725 cv
107.133 95.604 107.617 95.3548 107.519 94.8116 cv
107.764 94.7687 107.952 94.5234 107.895 94.3095 cv
108.194 94.2615 108.304 94.0225 108.563 93.9341 cv
108.563 93.7808 108.416 93.7739 108.355 93.683 cv
108.357 93.1348 108.7 92.6232 109.065 92.304 cv
108.809 91.8251 109.565 91.7495 109.482 91.1766 cv
109.817 91.0227 109.929 90.648 110.235 90.4663 cv
110.208 90.3256 110.288 90.0783 110.193 90.007 cv
110.493 89.7358 110.84 89.5112 111.195 89.2967 cv
112.142 89.1055 112.462 90.0777 113.368 89.7982 cv
113.565 89.8922 113.744 90.007 114.079 89.9654 cv
114.115 90.0386 114.178 90.0865 114.204 90.1736 cv
114.41 90.0543 114.655 90.2108 114.663 90.424 cv
114.689 90.3521 114.862 90.4278 114.872 90.3408 cv
115.316 91.0334 115.737 91.5053 115.999 92.3463 cv
115.996 92.4535 115.844 92.4138 115.791 92.4718 cv
115.779 92.5815 115.954 92.5046 115.916 92.639 cv
115.767 92.8617 115.479 92.9406 115.625 93.3487 cv
115.457 93.3487 li
115.356 93.5411 115.566 93.6407 115.499 93.767 cv
115.343 93.8111 115.363 93.6786 115.291 93.6414 cv
115.147 93.8004 115.379 93.9398 115.415 94.059 cv
115.403 94.1448 115.302 94.1411 115.291 94.2269 cv
115.367 94.982 115.159 95.787 114.831 96.2734 cv
114.675 96.1895 114.551 96.3831 114.371 96.2734 cv
114.272 96.5081 114.125 96.6973 113.995 96.8998 cv
114.144 97.1206 113.944 97.2285 114.036 97.4846 cv
113.764 97.4839 113.47 97.9067 113.117 97.9445 cv
112.901 97.9678 112.576 97.8543 112.616 98.2372 cv
113.006 98.4347 113.301 98.5274 113.828 98.5293 cv
113.828 98.711 113.828 98.8914 113.828 99.0731 cv
113.75 99.0788 113.688 99.1002 113.66 99.1564 cv
113.698 99.3784 113.845 99.3822 113.995 99.4075 cv
113.958 99.6238 114.142 99.6213 114.287 99.6579 cv
114.378 99.9279 114.463 100.205 114.788 100.243 cv
114.812 100.378 114.775 100.453 114.705 100.493 cv
114.74 100.556 114.81 100.583 114.915 100.577 cv
114.96 100.745 114.839 100.894 115.123 100.869 cv
115.091 101.109 115.181 101.103 115.291 101.12 cv
115.065 101.6 115.603 101.766 115.625 102.248 cv
115.598 102.374 115.46 102.39 115.415 102.499 cv
115.543 102.487 115.602 102.672 115.791 102.583 cv
115.625 102.877 115.967 103.425 115.666 103.585 cv
115.706 103.794 115.907 103.846 115.999 104.003 cv
115.79 104.451 116.052 104.72 115.916 105.089 cv
116.173 105.29 115.955 105.928 116.418 105.799 cv
116.196 105.61 116.636 105.35 116.418 105.131 cv
116.697 105.151 116.723 104.799 116.584 104.629 cv
116.801 104.428 116.904 104.112 117.087 103.878 cv
117.29 103.94 117.576 103.952 117.587 103.71 cv
117.968 103.925 118.097 103.298 118.423 103.585 cv
118.56 103.405 118.777 103.213 119.05 103.293 cv
119.662 102.731 120.635 102.513 121.14 101.956 cv
121.257 101.999 121.426 101.887 121.432 101.956 cv
121.99 101.566 122.59 101.219 123.186 100.869 cv
123.334 100.95 123.428 100.868 123.604 100.869 cv
123.651 101.31 124.17 101.279 124.565 101.371 cv
124.539 101.723 124.921 101.87 124.858 102.123 cv
124.985 102.272 125.27 102.476 125.107 102.666 cv
125.141 102.822 125.254 102.668 125.318 102.749 cv
125.266 103.158 125.273 103.446 125.65 103.502 cv
125.588 103.859 125.79 104.271 126.11 104.379 cv
126.144 104.497 126.052 104.487 126.069 104.587 cv
126.303 105.106 126.623 105.538 126.863 106.05 cv
126.96 106.049 126.986 106.122 127.114 106.091 cv
126.971 106.232 127.064 106.382 127.239 106.426 cv
127.059 106.731 127.361 107.017 127.574 107.178 cv
127.531 107.344 127.547 107.449 127.614 107.595 cv
127.712 107.595 127.809 107.595 127.908 107.595 cv
127.686 108.209 128.536 108.486 128.408 109.058 cv
128.529 109.25 129.149 109.256 129.077 108.891 cv
129.53 108.673 129.936 109.005 130.08 109.434 cv
130.037 109.533 129.807 109.56 129.913 109.81 cv
129.481 110.336 129.033 109.697 128.576 109.852 cv
128.545 109.979 128.648 109.974 128.617 110.103 cv
128.498 110.179 128.446 110.322 128.2 110.27 cv
127.922 110.479 127.744 110.789 127.281 110.813 cv
127.234 110.851 127.267 110.89 127.239 111.022 cv
126.629 111.107 126.396 111.572 125.777 111.648 cv
125.684 111.722 125.63 111.835 125.61 111.983 cv
125.319 112.131 125.03 112.023 124.899 112.317 cv
124.579 112.288 124.418 112.42 124.355 112.651 cv
124.106 112.613 123.846 112.802 123.688 112.985 cv
123.526 112.877 123.441 112.917 123.27 112.985 cv
123.217 113.266 122.945 113.329 122.769 113.486 cv
122.298 113.31 122.202 113.828 121.767 113.821 cv
121.683 113.946 li
121.487 113.946 121.291 113.946 121.096 113.946 cv
120.928 113.741 120.866 113.425 120.68 113.236 cv
119.816 113.191 119.245 113.454 118.466 113.654 cv
118.505 114.108 118.445 114.125 118.507 114.573 cv
118.388 114.539 118.399 114.632 118.298 114.615 cv
118.271 114.915 118.539 115.349 118.173 115.409 cv
118.509 115.67 118.18 116.2 118.466 116.453 cv
118.321 116.644 118.237 117.021 118.423 117.205 cv
118.227 117.603 118.112 118.167 118.173 118.625 cv
117.916 119.075 118.037 119.896 118.131 120.631 cv
118.047 120.631 117.963 120.631 117.88 120.631 cv
117.902 121.11 118.08 121.706 117.755 122.01 cv
118.025 122.414 117.638 122.747 117.546 123.055 cv
117.559 123.111 117.651 123.089 117.714 123.096 cv
117.714 123.492 117.625 123.865 117.421 124.099 cv
117.702 124.354 117.514 124.851 117.546 125.143 cv
117.671 125.31 li
117.648 125.497 117.378 125.681 117.379 125.853 cv
117.521 126.06 117.516 126.28 117.337 126.438 cv
117.522 126.56 117.567 126.822 117.714 126.981 cv
117.743 127.095 117.629 127.066 117.629 127.148 cv
117.755 127.19 li
117.709 127.807 117.639 128.401 117.211 128.694 cv
117.222 128.838 117.336 128.876 117.462 128.903 cv
117.462 129.014 117.479 129.142 117.421 129.195 cv
118.261 129.44 119.196 129.044 120.01 129.363 cv
120.424 129.381 120.893 129.344 121.014 129.655 cv
121.385 129.464 121.344 129.973 121.683 129.947 cv
121.716 130.092 121.621 130.108 121.64 130.24 cv
122.165 130.716 122.366 131.317 122.81 131.911 cv
122.815 132.111 122.713 132.205 122.643 132.329 cv
122.612 132.471 122.813 132.382 122.769 132.538 cv
122.502 132.79 122.691 133.173 122.601 133.415 cv
122.226 133.57 122.048 133.92 121.683 134.084 cv
121.551 134.103 121.565 133.979 121.515 133.917 cv
121.326 134.093 121.151 134.109 120.929 134.001 cv
120.288 134.182 119.485 134.188 118.758 134.126 cv
118.148 134.073 117.347 134.294 116.919 134.084 cv
116.742 134.158 116.536 134.202 116.376 134.293 cv
116.222 134.293 116.216 134.146 116.126 134.084 cv
116.054 134.222 115.802 134.177 115.708 134.293 cv
115.585 134.303 115.579 134.199 115.457 134.209 cv
114.779 134.52 114.038 133.981 113.325 134.334 cv
113.195 134.355 113.216 134.223 113.117 134.209 cv
112.824 134.31 112.438 134.356 112.157 134.251 cv
111.303 134.392 110.44 134.271 109.691 134.418 cv
109.146 134.089 108.089 134.813 107.56 134.209 cv
106.932 134.398 106.364 134.211 105.765 134.377 cv
105.442 134.015 104.457 134.344 104.009 134.168 cv
103.516 134.29 103.309 134.155 102.714 134.293 cv
102.654 134.228 102.627 134.13 102.589 134.042 cv
102.407 134.262 102.007 134.083 101.754 134.168 cv
101.675 134.426 101.384 134.594 101.168 134.377 cv
100.962 134.384 100.993 134.536 100.959 134.627 cv
101.021 134.692 101.122 134.715 101.253 134.71 cv
101.367 134.729 101.292 134.555 101.378 134.544 cv
101.526 134.521 101.561 134.611 101.629 134.669 cv
101.631 134.866 101.482 134.913 101.419 135.045 cv
101.137 135.031 100.853 135.14 100.626 134.92 cv
100.733 134.707 100.601 134.544 100.5 134.334 cv
100.846 133.99 101.314 134.129 101.502 133.75 cv
101.185 133.784 101.143 133.268 101.043 132.956 cv
100.893 132.945 100.841 133.033 100.709 133.039 cv
100.755 133.189 100.865 133.274 101.084 133.248 cv
101.048 133.601 100.702 133.645 100.709 134.042 cv
100.184 133.992 99.6793 134.147 99.7058 133.415 cv
99.8054 133.348 99.8906 133.265 99.9991 133.206 cv
100.008 133.072 99.924 133.03 99.9562 132.872 cv
99.5815 132.926 99.4004 132.788 99.1632 132.706 cv
99.215 132.473 99.0591 132.447 98.9531 132.371 cv
99.0768 132.312 99.1676 132.222 99.1209 131.995 cv
99.4736 131.861 99.7638 131.792 100.04 131.661 cv
99.8811 131.505 99.9695 131.192 100.04 131.076 cv
100.208 131.076 li
cp
ef
121.264 93.5994 mo
121.376 93.7162 121.572 93.831 121.724 93.6833 cv
121.832 93.2449 121.198 93.096 121.264 93.5994 cv
cp
121.224 92.973 mo
121.703 92.9667 122.044 93.0986 122.183 93.4329 cv
122.203 93.5635 122.079 93.5502 122.017 93.5994 cv
122.171 93.971 121.645 94.002 121.515 94.2265 cv
121.258 94.065 120.933 93.9723 120.846 93.6411 cv
120.954 93.6373 120.993 93.5648 121.056 93.5162 cv
121.103 93.3427 120.967 93.3528 120.972 93.2234 cv
121.081 93.1654 121.174 93.091 121.224 92.973 cv
cp
ef
127.365 93.6832 mo
127.655 93.74 127.759 93.9854 127.949 94.1431 cv
127.993 94.2983 127.808 94.2251 127.782 94.3096 cv
127.858 94.526 128.011 94.6661 128.242 94.7279 cv
128.221 95.1115 128.603 95.0912 128.785 95.2711 cv
128.723 95.4988 128.855 95.5335 128.993 95.5638 cv
129.035 95.7297 128.869 95.6887 128.91 95.8552 cv
128.966 95.9846 129.097 95.7776 129.161 95.8975 cv
129.182 96.0287 129.102 96.0609 129.077 96.1479 cv
129.203 96.2464 129.3 96.3713 129.285 96.6078 cv
128.968 96.6791 128.953 97.0539 128.827 97.3182 cv
128.622 97.4066 128.366 97.4431 128.368 97.7358 cv
127.825 97.7762 127.676 97.4236 127.489 97.1094 cv
127.304 97.2381 127.238 97.0627 127.071 97.1094 cv
126.399 97.2993 127.119 98.0708 127.448 98.2374 cv
127.362 98.467 127.117 98.2986 126.947 98.3213 cv
126.991 98.1648 126.858 98.1857 126.821 98.1118 cv
126.616 98.2809 126.577 98.0626 126.361 98.028 cv
126.491 97.816 126.183 97.6494 126.404 97.527 cv
126.409 97.4091 126.285 97.4223 126.237 97.3599 cv
126.328 97.257 126.347 97.0804 126.361 96.9 cv
127.088 96.7214 127.911 97.0015 128.45 96.4407 cv
128.545 96.153 128.305 95.9858 128.534 95.8136 cv
128.43 95.4717 128.224 95.2326 127.992 95.02 cv
127.703 94.9834 127.566 95.0982 127.406 95.1872 cv
127.372 95.3051 127.465 95.2957 127.448 95.396 cv
126.968 95.5714 126.71 95.9675 126.194 96.1063 cv
126.161 96.2786 126.395 96.1846 126.361 96.3568 cv
126.147 96.435 126.088 96.6678 125.86 96.7334 cv
125.776 96.5303 125.52 96.3057 125.61 96.0647 cv
125.355 96.006 125.189 95.9152 124.94 95.7726 cv
125.026 95.3556 125.539 95.5884 125.86 95.4799 cv
126.142 95.3846 126.259 95.0616 126.445 94.9367 cv
126.831 95.0143 127.004 94.5967 127.365 94.5184 cv
127.341 94.4169 127.203 94.4295 127.239 94.268 cv
127.326 94.2856 127.35 94.2396 127.406 94.2264 cv
127.471 93.9778 127.233 93.8655 127.365 93.6832 cv
cp
ef
96.0295 98.9056 mo
95.9715 98.4351 95.2182 98.6577 95.07 98.2786 cv
94.6309 98.1909 94.5098 98.3411 94.1073 98.3625 cv
94.0593 98.6558 93.6247 98.6388 93.8581 98.989 cv
93.8089 99.0514 93.6833 99.0381 93.6903 99.1567 cv
93.6379 99.5012 93.9571 99.4734 93.983 99.7416 cv
94.7318 100.089 95.321 100.628 96.3645 100.452 cv
96.4124 100.082 96.7335 99.9857 96.6982 99.5327 cv
96.4755 99.4072 96.4137 99.1208 96.2806 98.9056 cv
96.1973 98.9056 96.1134 98.9056 96.0295 98.9056 cv
cp
95.3614 97.6944 mo
95.5021 97.5992 95.8945 97.5607 95.9456 97.7777 cv
96.0585 97.8067 96.0276 97.6913 96.0705 97.6522 cv
96.4509 98.0117 96.6294 98.5707 96.9903 98.9473 cv
96.9871 99.0135 97.0117 99.1069 96.9487 99.1145 cv
96.9871 99.1877 97.095 99.1915 97.1581 99.2401 cv
97.177 99.44 97.1531 99.5971 96.9903 99.6154 cv
96.9941 99.7516 97.0117 99.8728 97.0742 99.9498 cv
97.025 100.053 96.9316 100.113 96.8244 100.159 cv
96.8036 100.291 96.8982 100.307 96.8647 100.452 cv
96.7266 100.605 96.5708 100.742 96.4894 100.953 cv
96.1601 100.925 95.856 101.073 95.6535 101.287 cv
95.4112 101.266 95.0636 101.172 94.9432 101.413 cv
95.1381 101.48 95.2926 101.626 95.2781 101.789 cv
95.3885 101.789 95.5166 101.773 95.5696 101.83 cv
95.5828 101.927 95.5639 101.991 95.528 102.039 cv
95.9273 102.064 96.0579 102.581 96.0295 103.084 cv
95.938 103.131 95.8592 103.191 95.6951 103.167 cv
95.7027 102.982 95.7708 102.903 95.5696 102.874 cv
95.5355 102.757 95.6289 102.767 95.6119 102.666 cv
95.3097 102.356 94.8599 102.447 94.4422 102.248 cv
94.0763 102.425 93.8701 102.763 93.7742 103.209 cv
93.7527 103.433 93.9918 103.36 94.1073 103.418 cv
94.1565 103.442 94.2404 103.709 94.4833 103.543 cv
94.9122 103.823 95.3778 103.706 95.8623 103.919 cv
95.7746 104.04 95.6503 104.125 95.6535 104.337 cv
95.5355 104.372 95.5462 104.278 95.4453 104.295 cv
95.3873 104.336 95.3614 104.407 95.3191 104.462 cv
95.4346 104.543 95.5576 104.614 95.5696 104.797 cv
95.2914 105.016 94.9249 104.723 94.8182 104.504 cv
94.3117 104.526 93.742 104.375 93.3969 104.003 cv
93.2537 103.985 93.1635 104.019 93.0638 104.045 cv
92.8802 103.848 92.5251 104.036 92.3528 103.794 cv
92.4166 103.906 92.2342 104.179 92.0191 104.253 cv
91.8229 104.226 91.7996 104.028 91.727 103.878 cv
91.9491 103.753 91.8866 103.34 92.1863 103.293 cv
92.1876 103.041 92.0734 102.904 92.0191 102.708 cv
92.1024 102.582 li
92.6178 102.754 92.8525 102.997 93.2304 103.25 cv
93.3237 103.218 93.3351 103.105 93.3969 103.042 cv
93.3149 102.681 93.2953 102.351 93.3559 102.081 cv
93.5502 102.047 93.7855 101.946 93.648 101.705 cv
93.8246 101.56 94.0902 101.506 94.2751 101.37 cv
94.2233 101.243 94.2429 101.208 94.3173 101.12 cv
94.2259 101.051 94.0719 100.893 94.1502 100.786 cv
93.9893 100.765 94.0164 100.558 93.8152 100.577 cv
93.8877 100.552 93.8114 100.379 93.8991 100.368 cv
93.725 100.11 93.1389 99.7384 93.5231 99.3233 cv
93.4701 99.153 93.3004 99.1006 93.272 98.9056 cv
93.5622 98.6104 93.7565 98.2206 94.0234 97.9033 cv
94.5129 97.8742 94.9343 97.2749 95.3614 97.6944 cv
cp
ef
130.664 99.5325 mo
130.711 99.6638 130.669 99.6272 130.664 99.783 cv
130.764 99.7836 130.789 99.7111 130.916 99.742 cv
131.089 100.033 131.249 100.296 131.208 100.703 cv
130.941 100.825 130.976 101.231 130.581 101.12 cv
130.492 101.155 130.515 101.303 130.456 101.371 cv
130.171 101.363 130.155 101.396 129.955 101.496 cv
129.764 101.283 129.446 101.479 129.203 101.413 cv
129.061 101.577 128.876 101.699 128.701 101.83 cv
128.752 101.947 128.749 102.084 128.66 102.164 cv
128.824 102.404 129.124 102.507 129.285 102.749 cv
130.207 102.646 131.374 102.485 131.543 101.496 cv
131.831 101.485 132.037 101.552 132.044 101.913 cv
132.018 101.971 131.883 101.92 131.876 101.997 cv
131.835 102.091 131.924 102.351 132.127 102.332 cv
132.076 102.592 132.261 102.616 132.378 102.708 cv
132.148 102.913 131.827 102.813 131.5 102.833 cv
130.957 103.386 129.898 103.254 129.411 103.794 cv
129.22 103.762 129.132 103.629 128.953 103.585 cv
129.009 103.475 129.128 103.426 129.161 103.292 cv
128.921 102.911 128.673 102.459 128.325 102.081 cv
128.363 101.941 128.602 101.643 128.284 101.621 cv
128.332 100.619 128.925 100.334 129.829 100.577 cv
129.846 100.686 129.954 100.703 129.955 100.828 cv
130.169 100.729 130.268 100.763 130.415 100.911 cv
130.7 100.743 131.093 100.384 130.79 99.9918 cv
130.586 99.9836 130.391 99.9824 130.289 100.075 cv
130.331 100.19 130.331 100.254 130.289 100.368 cv
130.016 100.449 129.754 100.226 129.745 99.9079 cv
130.097 99.9086 130.137 99.3629 130.664 99.5325 cv
cp
ef
131.417 105.047 mo
131.38 105.122 131.301 105.153 131.333 105.298 cv
131.382 105.333 131.446 105.353 131.543 105.339 cv
131.637 105.081 131.488 104.732 131.167 104.755 cv
131.056 104.946 131.319 104.946 131.417 105.047 cv
cp
133.213 105.131 mo
133.124 105.208 132.908 105.159 132.754 105.172 cv
132.816 104.902 132.584 104.925 132.546 104.755 cv
132.233 104.804 131.969 104.717 131.793 104.839 cv
131.861 104.909 131.884 105.026 131.959 105.089 cv
131.842 105.239 131.837 105.416 131.835 105.59 cv
131.828 105.681 131.982 105.609 132.044 105.633 cv
132.006 105.865 132.15 105.916 132.211 106.05 cv
132.294 106.05 132.378 106.05 132.462 106.05 cv
132.551 105.802 132.96 105.709 132.878 105.423 cv
133.066 105.334 133.158 105.213 133.422 105.298 cv
133.302 105.484 133.306 105.795 133.005 105.799 cv
132.941 105.989 133.164 105.89 133.213 105.966 cv
133.091 106.213 133.396 106.284 133.381 106.551 cv
133.121 106.316 132.744 106.37 132.419 106.51 cv
132.371 106.46 132.372 106.362 132.378 106.259 cv
132.179 106.226 132.186 106.401 132.127 106.51 cv
131.821 106.467 131.709 106.62 131.5 106.677 cv
131.558 106.354 131.259 106.389 131.124 106.259 cv
131.181 106.133 131.167 105.939 131.167 105.758 cv
131.115 105.697 131.006 105.694 130.957 105.633 cv
131.061 105.373 130.926 105.183 130.832 105.006 cv
129.675 104.931 129.84 106.38 130.748 106.426 cv
130.846 106.462 130.928 106.28 130.957 106.384 cv
131.094 106.414 131.121 106.556 131.124 106.719 cv
130.952 106.838 130.744 106.966 130.581 106.886 cv
130.528 107.151 130.249 107.194 130.122 107.387 cv
129.815 107.214 130.095 106.857 130.164 106.593 cv
130.138 106.409 129.906 106.432 129.955 106.175 cv
129.846 106.13 129.75 106.074 129.579 106.091 cv
129.562 105.896 129.708 105.859 129.745 105.716 cv
129.61 105.578 129.708 105.457 129.663 105.256 cv
129.905 105.069 129.971 104.702 130.122 104.42 cv
130.423 104.345 130.585 104.133 130.832 104.003 cv
130.869 103.241 131.609 103.774 131.835 104.003 cv
132.117 103.866 132.257 104.141 132.546 104.128 cv
132.791 104.439 133.084 104.703 133.213 105.131 cv
cp
ef
91.9769 104.588 mo
91.9239 104.906 92.0053 105.182 91.7681 105.381 cv
91.8015 105.538 91.9145 105.384 91.9769 105.465 cv
91.8905 105.573 92.0387 105.713 92.1447 105.757 cv
92.052 105.913 92.0766 105.962 92.1447 106.133 cv
92.0103 106.097 92.0583 106.242 91.9769 106.259 cv
92.0469 106.357 92.2034 106.366 92.3119 106.426 cv
92.274 106.499 92.2968 106.634 92.228 106.677 cv
92.481 106.785 92.7939 106.836 92.8551 107.136 cv
93.4235 107.324 94.1389 107.465 94.4833 106.969 cv
94.4619 106.642 94.4089 106.283 94.5262 105.966 cv
94.4575 105.896 94.2997 105.914 94.2335 105.841 cv
94.2821 105.791 94.2808 105.693 94.2751 105.59 cv
94.2146 105.432 93.8203 105.514 93.6903 105.549 cv
93.6903 105.424 li
93.2468 105.407 92.8046 105.807 92.4368 105.59 cv
92.534 105.366 92.8311 105.344 92.8961 105.089 cv
94.1162 104.719 94.5477 105.409 95.0271 106.259 cv
94.9609 106.36 94.9407 106.507 94.8593 106.593 cv
94.8366 106.686 94.9401 106.653 94.9432 106.718 cv
94.8429 107.129 94.8454 107.196 94.7773 107.596 cv
94.383 107.758 94.2537 108.188 93.8991 108.389 cv
93.7439 108.331 93.4153 108.314 93.3143 108.432 cv
92.8803 108.253 92.7163 107.804 92.228 107.679 cv
92.3769 107.51 92.0905 107.507 92.0608 107.388 cv
92.1466 107.166 92.0646 107.001 91.852 106.969 cv
91.9479 106.794 91.9145 106.668 91.852 106.468 cv
91.734 106.433 91.7441 106.526 91.6432 106.509 cv
91.6836 106.729 91.7675 106.977 91.6432 107.136 cv
91.6785 107.414 92.0331 107.699 91.8104 107.972 cv
91.3776 107.888 91.1688 107.582 91.0167 107.22 cv
91.0048 107.083 91.1776 107.131 91.1833 107.011 cv
91.0268 106.902 91.0287 106.637 90.8489 106.551 cv
90.9221 106.458 90.8836 106.251 91.0577 106.259 cv
91.0098 105.536 91.2502 105 91.6848 104.504 cv
91.7536 104.559 91.8242 104.615 91.9769 104.588 cv
cp
ef
93.397 109.142 mo
93.5257 109.617 93.3478 110.046 93.1478 110.311 cv
92.8601 110.137 92.5832 110.443 92.3119 110.27 cv
92.2507 109.969 92.0974 109.76 91.8104 109.685 cv
91.8331 109.265 91.9492 108.922 92.2703 108.808 cv
92.7163 108.648 93.0626 108.978 93.397 109.142 cv
cp
ef
132.211 111.607 mo
132.044 111.913 131.775 112.118 131.375 112.191 cv
131.406 112.516 131.201 112.603 131.124 112.818 cv
131.065 113.003 131.267 112.928 131.249 113.069 cv
131.184 113.184 131.131 113.312 131.04 113.403 cv
131.124 113.403 131.208 113.403 131.292 113.403 cv
131.315 113.57 131.315 113.529 131.292 113.695 cv
131.417 113.764 131.658 113.721 131.667 113.904 cv
131.767 113.809 131.984 113.831 132.127 113.779 cv
132.144 113.678 132.052 113.688 132.086 113.57 cv
132.219 113.606 132.214 113.504 132.294 113.487 cv
132.252 113.282 132.336 113.176 132.211 113.027 cv
132.345 112.882 132.361 112.62 132.546 112.526 cv
132.538 112.381 132.398 112.367 132.378 112.234 cv
132.65 111.808 132.938 111.4 133.757 111.523 cv
133.931 111.601 133.905 111.876 134.175 111.856 cv
134.162 111.993 134.224 112.058 134.341 112.066 cv
134.337 112.244 134.393 112.271 134.467 112.442 cv
134.465 112.607 134.374 112.684 134.341 112.818 cv
134.393 112.878 134.501 112.882 134.551 112.943 cv
134.494 113.138 134.317 113.21 134.215 113.361 cv
134.187 113.586 134.361 113.606 134.508 113.654 cv
134.464 113.776 134.39 113.87 134.426 114.071 cv
134.132 114.159 133.702 114.01 133.422 114.155 cv
133.274 114.178 133.319 114.008 133.172 114.03 cv
133.23 113.975 133.213 113.848 133.213 113.738 cv
133.894 113.641 134.088 112.918 134.215 112.4 cv
134.014 112.281 133.878 112.099 133.673 111.983 cv
133.403 111.991 133.53 112.397 133.255 112.4 cv
133.262 112.834 132.861 113.008 133.13 113.361 cv
133.137 113.508 132.983 113.493 132.922 113.57 cv
133.076 113.974 132.555 114.14 132.462 114.489 cv
131.363 114.693 130.691 113.78 130.79 112.651 cv
130.784 112.533 130.909 112.547 130.957 112.484 cv
130.823 112.342 130.923 112.242 131 112.108 cv
130.873 111.956 130.62 111.93 130.581 111.69 cv
131.19 111.6 131.901 111.24 132.211 111.607 cv
cp
ef
90.6819 110.06 mo
91.5134 110.191 91.5973 110.836 92.3947 111.021 cv
92.6704 111.466 93.1587 111.455 93.6476 111.648 cv
93.7927 111.964 94.1712 112.044 94.1914 112.484 cv
94.0375 112.497 93.8217 112.448 93.7315 112.526 cv
93.7593 112.569 93.8274 112.569 93.8154 112.651 cv
93.7088 112.761 93.4628 112.637 93.3972 112.86 cv
93.2458 112.887 93.1745 112.832 93.1044 112.777 cv
92.9764 112.815 92.9486 112.954 92.8546 113.027 cv
92.748 112.931 92.7493 112.886 92.5619 112.943 cv
92.6092 112.994 92.6818 113.019 92.6458 113.152 cv
92.3127 113.111 92.1418 113.234 92.0187 113.403 cv
91.468 113.259 91.227 113.778 90.933 114.03 cv
90.7211 113.946 90.5413 114.088 90.3892 113.946 cv
90.3974 113.785 90.3899 113.638 90.3482 113.528 cv
90.4454 113.515 90.5204 113.478 90.598 113.444 cv
90.5293 113.087 90.4662 112.865 90.557 112.526 cv
91.297 112.652 92.0313 112.424 92.7284 112.484 cv
92.8471 112.351 92.9846 112.237 93.0634 112.066 cv
93.0363 111.926 92.8628 111.933 92.6881 111.94 cv
92.6736 111.788 92.4748 111.82 92.4786 111.648 cv
92.3405 111.756 92.1865 111.6 92.1443 111.481 cv
91.9254 111.581 91.7121 111.328 91.4756 111.356 cv
91.2056 111.388 91.1299 111.685 90.8491 111.607 cv
90.7677 111.584 90.593 111.364 90.598 111.189 cv
90.6025 111.061 90.7677 110.967 90.7652 110.813 cv
90.7879 110.72 90.6864 110.753 90.6819 110.687 cv
90.6706 110.551 90.7324 110.486 90.8491 110.479 cv
90.8125 110.32 90.6327 110.306 90.6819 110.06 cv
cp
ef
134.508 114.865 mo
134.446 115.302 134.326 115.453 134.132 115.785 cv
134.103 115.939 134.198 115.969 134.341 115.952 cv
134.336 116.071 134.167 116.028 134.049 116.035 cv
134.019 116.19 134.195 116.139 134.259 116.203 cv
134.207 116.379 134.243 116.427 134.259 116.62 cv
134.156 116.657 134.077 116.717 133.923 116.704 cv
133.875 116.487 133.681 116.418 133.548 116.286 cv
132.732 116.213 131.857 115.869 131.249 116.369 cv
131.146 116.334 131.025 116.314 130.875 116.328 cv
130.869 116.101 130.816 115.793 131 115.659 cv
130.944 115.422 130.793 115.281 130.79 114.991 cv
131.118 114.848 131.508 115.06 131.751 115.241 cv
132.25 115.125 132.6 115.315 133.046 115.366 cv
133.164 115.332 133.16 115.176 133.297 115.158 cv
133.505 115.103 133.475 115.286 133.631 115.283 cv
133.929 115.149 133.977 114.765 134.508 114.865 cv
cp
ef
91.5592 116.829 mo
91.1984 116.827 91.211 117.36 90.8079 117.456 cv
90.7366 117.816 91.0665 117.994 91.2671 118.208 cv
91.5895 118.196 91.8179 118.089 92.1863 118.124 cv
92.2273 117.97 92.3686 117.917 92.4367 117.79 cv
92.1888 117.754 92.3263 117.626 92.3528 117.456 cv
92.0185 117.317 91.881 116.831 91.5592 116.829 cv
cp
94.359 116.161 mo
94.152 116.47 94.0284 116.861 93.607 116.955 cv
93.6127 117.058 93.6127 117.155 93.5641 117.205 cv
93.0853 117.143 93.1414 117.617 92.7288 117.623 cv
92.7332 117.758 92.8752 117.881 92.7711 117.999 cv
93.096 118.314 93.6303 117.931 93.8581 117.748 cv
94.0789 117.721 94.1949 117.801 94.2751 117.915 cv
94.2549 118.119 94.1148 118.201 94.0234 118.333 cv
94.0152 118.537 94.1975 118.55 94.2751 118.668 cv
94.2511 118.755 94.1716 118.786 94.1912 118.918 cv
94.2366 119.012 94.3962 118.992 94.4422 119.085 cv
94.393 119.416 94.0864 119.208 93.8991 119.252 cv
93.8928 119.177 93.9508 119.164 93.9407 119.085 cv
93.4291 118.734 92.4897 119.01 91.6848 118.918 cv
91.5977 118.943 91.5422 118.999 91.5188 119.085 cv
91.3832 119.122 91.4602 118.947 91.3498 118.96 cv
91.1283 119.197 90.9466 119.474 90.5568 119.544 cv
90.4943 119.045 91.0835 118.381 90.5568 117.957 cv
90.6142 117.904 90.582 117.76 90.6401 117.706 cv
90.5959 117.598 90.4211 117.618 90.3896 117.497 cv
90.3801 117.28 90.5145 117.204 90.5984 117.08 cv
90.5492 116.584 90.8583 116.448 91.0993 116.244 cv
91.8885 116.014 92.0298 116.603 92.4784 116.829 cv
92.7213 116.723 92.7276 116.381 92.9799 116.286 cv
93.5799 116.41 93.8265 115.968 94.359 116.161 cv
cp
ef
128.993 119.168 mo
129.313 119.12 129.743 118.979 129.663 118.668 cv
129.391 118.698 128.807 118.566 128.993 119.168 cv
cp
129.537 118.333 mo
129.608 118.471 129.644 118.644 129.871 118.625 cv
129.961 118.993 129.696 119.219 129.537 119.461 cv
129.406 119.481 129.366 119.409 129.328 119.335 cv
128.868 119.617 128.554 119.099 128.576 118.625 cv
128.785 118.542 li
128.773 118.479 128.605 118.366 128.701 118.333 cv
128.901 118.282 129.208 118.318 129.537 118.333 cv
cp
ef
134.341 117.706 mo
134.305 117.851 134.177 117.903 134.091 117.999 cv
134.361 118.221 134.071 118.463 133.923 118.625 cv
134.109 118.97 134.034 119.278 133.799 119.503 cv
133.766 119.646 133.968 119.556 133.923 119.712 cv
133.845 119.774 133.819 119.886 133.715 119.92 cv
133.905 120.26 133.657 120.45 133.631 120.756 cv
133.173 120.806 133.086 120.546 132.586 120.589 cv
132.743 120.313 132.847 119.987 133.213 119.92 cv
133.151 119.765 133.024 119.58 133.089 119.42 cv
132.765 119.519 132.428 119.365 132.127 119.503 cv
132.086 119.404 131.919 119.433 131.919 119.294 cv
131.358 119.264 130.595 119.905 130.54 119.085 cv
130.502 118.95 130.677 119.027 130.707 118.96 cv
130.492 118.779 130.759 118.639 130.832 118.5 cv
130.81 118.314 130.629 118.286 130.497 118.208 cv
130.506 118.077 130.47 117.901 130.54 117.832 cv
130.776 117.882 131.164 117.975 131.083 118.208 cv
131.658 118.179 132.071 118.779 132.586 118.417 cv
132.7 118.695 133.144 118.704 133.381 118.542 cv
133.369 118.398 133.237 118.287 133.381 118.208 cv
133.15 118.203 133.216 117.899 132.963 117.915 cv
133.013 117.711 132.897 117.677 132.796 117.623 cv
132.86 117.478 133.058 117.468 133.089 117.289 cv
133.606 117.443 134.066 117.302 134.341 117.706 cv
cp
ef
96.4891 125.017 mo
96.5471 125.127 96.5951 125.247 96.7402 125.269 cv
96.8108 125.143 97.0177 125.156 97.1584 125.102 cv
97.19 124.754 96.5831 124.806 96.4891 125.017 cv
cp
96.2386 123.931 mo
96.3894 123.956 96.5194 124.002 96.6569 123.931 cv
96.6316 123.831 96.5963 123.74 96.6146 123.597 cv
96.3143 123.533 96.2683 123.724 96.2386 123.931 cv
cp
95.7377 121.257 mo
95.8544 121.375 96.0929 121.554 96.3219 121.424 cv
96.3881 121.177 95.867 120.942 95.7377 121.257 cv
cp
96.2386 120.13 mo
96.1333 119.942 96.0317 119.751 95.7787 119.712 cv
95.6443 119.759 95.7005 119.996 95.6115 120.088 cv
95.7895 120.274 96.0184 120.026 96.2386 120.13 cv
96.2487 120.203 96.1957 120.339 96.3219 120.296 cv
96.3093 120.493 96.074 120.466 96.0292 120.631 cv
96.2008 120.711 96.2657 120.896 96.5307 120.881 cv
96.578 120.989 96.6096 121.11 96.6979 121.174 cv
96.5913 121.401 96.4891 121.634 96.3648 121.843 cv
96.4184 122.039 96.6285 122.081 96.8241 122.135 cv
96.8241 122.204 96.8241 122.274 96.8241 122.344 cv
96.5604 122.443 96.074 122.317 95.9888 122.594 cv
96.1352 122.711 96.3251 122.787 96.5307 122.845 cv
96.6354 122.853 96.6626 122.781 96.6979 122.72 cv
96.7048 122.629 96.5509 122.701 96.4891 122.678 cv
96.5351 122.496 96.8329 122.33 96.949 122.469 cv
96.8474 122.79 96.6884 122.935 96.6146 123.347 cv
96.7282 123.448 96.7641 123.217 96.949 123.263 cv
96.978 123.485 97.1679 123.545 97.1584 123.806 cv
96.9925 123.961 96.9029 124.193 96.6979 124.307 cv
96.7748 124.482 97.0461 124.461 97.2411 124.516 cv
97.2972 124.724 97.4158 124.871 97.4921 125.059 cv
97.2347 125.011 97.3811 125.366 97.2827 125.477 cv
97.1584 125.477 li
97.0253 125.486 97.0903 125.295 96.949 125.31 cv
96.8253 125.34 96.8821 125.55 96.7402 125.561 cv
96.4929 125.558 96.4689 125.331 96.197 125.352 cv
96.2235 125.126 96.2954 124.923 96.2386 124.725 cv
96.3232 124.572 96.5017 124.513 96.573 124.349 cv
96.479 124.278 96.1194 124.335 95.9888 124.099 cv
95.9762 123.988 96.0456 123.962 96.1547 123.973 cv
96.1673 123.793 95.9093 123.885 95.821 123.806 cv
95.9188 123.612 96.1541 123.554 96.2386 123.347 cv
96.1276 123.11 95.8866 123.003 95.6538 122.887 cv
95.6639 122.593 95.8519 122.341 95.7787 122.219 cv
95.8311 122.148 95.8998 122.005 95.9888 122.093 cv
95.992 121.894 95.8336 121.857 95.821 121.676 cv
95.662 121.696 95.5541 121.663 95.4866 121.592 cv
95.4362 121.4 95.6147 121.221 95.4866 121.09 cv
95.6399 121.04 95.8412 120.923 95.9459 120.715 cv
95.7819 120.433 95.346 120.424 95.2355 120.088 cv
95.2879 119.956 95.3567 120.079 95.4456 119.963 cv
95.4141 119.84 95.3434 119.757 95.2778 119.67 cv
95.6841 119.136 96.3907 119.479 96.4487 120.088 cv
96.3288 120.054 96.3396 120.147 96.2386 120.13 cv
cp
ef
132.878 123.221 mo
132.898 123.091 132.79 123.088 132.67 123.096 cv
132.633 123.255 132.809 123.292 132.878 123.221 cv
cp
132.17 122.678 mo
132.309 122.733 132.419 122.818 132.628 122.804 cv
132.715 122.71 132.816 122.629 132.963 122.594 cv
132.978 122.356 132.744 122.367 132.754 122.135 cv
132.184 122.016 132.436 122.477 132.17 122.678 cv
cp
130.33 119.754 mo
130.4 119.754 130.47 119.754 130.54 119.754 cv
130.652 120.114 130.924 120.316 131.04 120.673 cv
131.42 120.628 131.55 120.833 131.627 121.09 cv
132.044 121.02 131.957 121.457 132.211 121.55 cv
132.338 121.581 132.334 121.478 132.462 121.508 cv
132.543 121.719 132.83 121.724 133.005 121.843 cv
133.183 121.7 133.434 121.631 133.464 121.341 cv
133.611 121.277 133.651 121.363 133.799 121.3 cv
133.831 121.392 133.886 121.462 133.881 121.592 cv
133.727 121.59 133.64 121.656 133.548 121.717 cv
133.615 121.775 133.681 121.835 133.757 121.884 cv
133.642 122.021 133.444 122.072 133.338 122.219 cv
133.51 122.582 133.213 122.947 132.963 123.138 cv
132.96 123.28 133.085 123.293 133.172 123.347 cv
133.015 123.484 132.946 123.707 132.878 123.932 cv
132.666 123.963 132.548 123.901 132.546 123.723 cv
131.887 123.882 131.057 123.707 130.497 123.513 cv
130.163 123.562 129.851 123.676 129.496 123.556 cv
129.494 123.358 129.569 123.239 129.579 123.055 cv
130.039 123.076 129.735 122.589 129.955 122.386 cv
129.892 122.323 129.767 122.323 129.788 122.177 cv
130.169 121.92 130.29 122.342 130.497 122.428 cv
130.624 122.344 li
130.775 122.363 130.944 122.539 131.167 122.428 cv
131.372 122.088 131.367 121.747 131.5 121.508 cv
131.495 121.388 131.326 121.432 131.208 121.424 cv
131.103 120.888 130.324 121.448 130.164 121.007 cv
130.254 120.972 130.306 120.899 130.456 120.924 cv
130.345 120.455 130.577 120.096 130.33 119.754 cv
cp
ef
92.2283 126.271 mo
92.2334 126.076 92.2889 126.317 92.3949 126.271 cv
92.4781 126.187 li
92.4043 126.15 92.3564 126.086 92.27 126.063 cv
92.3009 126.156 92.0769 126.196 92.2283 126.271 cv
cp
94.6937 123.472 mo
94.6496 123.666 94.6407 123.704 94.6098 123.848 cv
94.6742 123.95 94.8357 123.955 94.9019 124.056 cv
94.8161 124.68 95.2079 125.141 95.3618 125.811 cv
95.1927 125.88 94.8678 125.787 94.777 125.644 cv
94.3196 125.523 94.283 125.852 93.8578 125.979 cv
93.5481 126.07 93.28 125.973 93.0213 126.146 cv
92.8857 126.235 92.868 126.368 92.6882 126.355 cv
92.5387 126.581 92.2851 126.704 91.9772 126.772 cv
91.9545 126.71 91.9148 126.667 91.8933 126.605 cv
91.8807 126.495 91.9804 126.497 92.0605 126.48 cv
91.8542 126.143 91.6637 125.791 91.3924 125.519 cv
91.6321 125.341 92.1816 125.523 92.4365 125.603 cv
92.6926 125.499 92.8516 125.396 93.1879 125.435 cv
93.5115 125.141 94.2307 125.179 94.6098 125.059 cv
94.6641 124.904 94.5089 124.817 94.6098 124.6 cv
94.0521 124.252 93.1475 124.251 92.9797 123.513 cv
93.0983 123.548 93.0882 123.455 93.1879 123.472 cv
93.2982 123.502 93.3317 123.608 93.4396 123.639 cv
93.9903 123.464 94.1215 123.383 94.6937 123.472 cv
cp
ef
93.2306 127.859 mo
93.1562 127.822 93.124 127.742 92.9802 127.775 cv
92.8433 128.154 92.7461 128.382 92.6881 128.778 cv
93.1675 129.192 93.7498 128.829 94.3586 128.987 cv
94.5214 128.648 95.0279 128.653 95.3617 128.486 cv
95.4714 128.178 95.5944 127.882 95.8216 127.691 cv
95.5377 127.529 95.1535 127.469 95.0696 127.107 cv
94.792 127.322 94.5466 127.24 94.2337 127.107 cv
94.1454 127.466 93.3732 127.424 93.2306 127.859 cv
cp
94.5264 126.731 mo
94.9055 126.512 95.1238 126.979 95.4456 126.814 cv
95.6058 127.099 96.2095 127.163 95.9887 127.691 cv
96.0285 127.818 96.1572 127.857 96.1969 127.984 cv
96.0789 128.006 96.0196 128.085 95.9048 128.11 cv
95.9439 128.223 96.1319 128.188 96.0707 128.402 cv
95.9174 128.833 95.4702 128.971 95.3617 129.446 cv
94.9516 129.663 94.3346 129.991 93.7315 129.613 cv
92.9373 129.638 92.3537 129.101 92.2704 128.277 cv
92.5083 127.541 93.035 127.168 93.4798 126.563 cv
93.8224 126.562 93.929 126.547 94.2747 126.522 cv
94.445 126.505 94.4028 126.7 94.5264 126.731 cv
cp
ef
128.408 127.19 mo
128.722 127.534 128.858 127.798 129.411 127.901 cv
129.458 127.994 129.48 128.11 129.537 128.193 cv
130.255 128.479 131.161 128.204 131.627 128.527 cv
131.412 128.856 131.134 129.122 130.875 129.404 cv
130.873 129.628 131.128 129.596 131.083 129.864 cv
131 129.865 131.03 129.978 130.916 129.947 cv
130.754 129.887 130.723 129.693 130.54 129.655 cv
130.533 129.552 130.532 129.454 130.581 129.404 cv
130.449 129.365 130.334 129.395 130.122 129.363 cv
130.09 129.325 130.077 129.269 130.08 129.195 cv
129.399 129.138 129.077 128.723 128.493 128.569 cv
128.301 128.573 128.267 128.734 128.034 128.695 cv
128.034 128.625 128.034 128.555 128.034 128.486 cv
127.901 128.465 127.869 128.577 127.782 128.486 cv
127.923 128.124 128.401 128.102 128.45 127.65 cv
128.346 127.558 128.25 127.308 128.408 127.19 cv
cp
ef
98.7038 130.909 mo
98.7038 131.02 98.7038 131.131 98.7038 131.242 cv
98.9164 131.426 99.17 131.192 99.2464 130.992 cv
99.0546 130.923 98.9171 130.74 98.7038 130.909 cv
cp
98.5789 130.45 mo
98.6704 130.426 98.6376 130.529 98.7038 130.533 cv
99.2167 130.273 99.6261 130.747 99.6236 131.16 cv
99.276 131.133 99.3467 131.524 99.1637 131.661 cv
98.9038 131.557 98.6294 131.47 98.3278 131.41 cv
98.3878 131.178 98.4849 131.188 98.3695 130.95 cv
98.4988 130.795 98.6092 130.663 98.5789 130.45 cv
cp
ef
127.406 129.112 mo
127.609 129.605 128.412 129.499 128.534 130.072 cv
128.047 130.235 127.719 130.162 127.239 130.407 cv
127.214 130.585 127.27 130.684 127.281 130.825 cv
127.161 130.832 127.199 130.684 127.03 130.742 cv
126.947 130.825 li
126.952 130.959 127.088 130.963 127.114 131.076 cv
127.086 131.188 126.994 131.234 126.947 131.326 cv
127.273 131.589 127.771 131.803 128.116 131.41 cv
128.161 131.022 128.525 130.955 128.617 130.616 cv
128.886 130.633 129.125 130.622 129.161 130.407 cv
129.526 130.357 129.605 130.641 129.913 130.616 cv
129.955 130.809 130.125 130.878 130.289 130.95 cv
130.181 131.128 130.264 131.389 130.415 131.452 cv
130.273 131.617 130.311 131.961 130.122 132.078 cv
130.181 132.131 130.125 132.299 130.289 132.246 cv
130.208 132.481 129.824 132.507 129.913 132.789 cv
129.707 132.832 129.574 132.951 129.453 133.081 cv
129.453 133.235 129.6 133.241 129.663 133.331 cv
129.622 133.632 129.376 133.401 129.161 133.415 cv
129.055 133.09 128.592 133.121 128.45 132.83 cv
128.347 132.835 128.322 132.909 128.242 132.83 cv
128.488 132.234 129.462 132.815 129.788 132.329 cv
129.764 132.242 129.684 132.21 129.704 132.078 cv
129.889 132.055 130.007 131.964 130.08 131.828 cv
130.079 131.689 129.844 131.786 129.788 131.702 cv
129.841 131.603 129.94 131.548 129.913 131.368 cv
129.372 131.154 128.677 131.357 128.617 132.121 cv
128.35 132.089 128.346 132.323 128.242 132.454 cv
127.814 132.392 127.324 132.649 127.197 132.121 cv
127.062 132.145 127.002 132.092 126.905 132.078 cv
126.921 131.881 126.891 131.73 126.863 131.578 cv
126.623 131.608 126.58 131.443 126.487 131.326 cv
126.633 131.305 126.681 131.186 126.779 131.117 cv
126.634 130.87 126.852 130.756 126.863 130.366 cv
127.212 130.297 127.191 129.857 127.448 129.697 cv
127.332 129.576 127.24 129.431 127.071 129.363 cv
127.173 129.269 127.149 129.05 127.406 129.112 cv
cp
ef
96.8242 131.994 mo
96.9005 131.921 96.8128 131.865 96.7403 131.828 cv
96.674 131.89 96.6936 132.014 96.8242 131.994 cv
cp
96.6147 129.53 mo
96.6292 129.753 96.3895 129.722 96.3649 129.906 cv
96.6589 130.029 96.7813 130.324 97.0746 130.45 cv
96.9276 130.677 97.144 130.792 96.9081 130.95 cv
96.9182 131.036 97.062 130.99 97.0746 131.076 cv
97.0671 131.714 96.9819 132.08 96.5308 132.412 cv
96.6816 132.728 96.3573 132.75 96.322 132.998 cv
95.4363 132.969 95.1474 132.665 94.4427 132.746 cv
94.4376 132.643 94.3645 132.617 94.4427 132.538 cv
94.232 132.568 94.1367 132.481 93.9828 132.454 cv
93.9273 132.314 93.8806 132.167 93.774 132.078 cv
93.9815 131.851 93.6365 131.693 93.5235 131.535 cv
93.733 131.273 93.5481 131.104 93.2718 131.076 cv
93.2516 130.944 93.3475 130.928 93.3147 130.783 cv
93.5147 130.803 93.6592 130.767 93.6901 130.616 cv
94.1468 130.748 94.2086 130.324 94.567 130.491 cv
94.4017 130.74 94.1027 130.924 94.2749 131.285 cv
94.2812 131.416 94.167 131.429 94.0661 131.452 cv
94.0724 131.689 94.1998 131.733 94.0661 131.911 cv
94.2187 132.427 95.2874 132.337 95.57 131.994 cv
96.4249 131.999 96.6753 131.227 96.5308 130.45 cv
96.5245 130.372 96.3895 130.423 96.3649 130.366 cv
96.3687 130.263 96.37 130.164 96.322 130.115 cv
95.7454 130.007 95.5833 130.506 95.0698 130.323 cv
95.0269 130.104 95.1953 130.062 95.3619 129.99 cv
95.7076 129.838 96.1302 129.332 96.6147 129.53 cv
cp
ef
97.2413 133.039 mo
97.2483 133.117 97.3826 133.065 97.4085 133.122 cv
97.3315 133.213 97.3145 133.363 97.1997 133.415 cv
97.1997 133.598 97.3542 133.673 97.1997 133.791 cv
97.5151 134.026 97.2615 134.449 97.5744 134.752 cv
97.5353 134.896 97.4293 135.026 97.6179 135.086 cv
97.5303 135.223 97.4053 135.321 97.4501 135.588 cv
96.9095 136.028 96.1278 135.769 96.0294 135.212 cv
95.8635 135.189 95.9039 135.189 95.7373 135.212 cv
95.6484 134.72 95.4667 134.585 95.403 134.126 cv
95.1494 133.977 94.9772 133.928 94.6504 133.917 cv
94.8504 133.615 95.4087 133.671 95.5702 133.331 cv
95.7525 133.331 95.9575 133.307 96.0294 133.415 cv
95.9922 133.488 95.9518 133.56 95.8213 133.541 cv
95.8604 133.683 95.938 133.786 95.9052 134.001 cv
95.7992 134.09 95.6711 134.157 95.5702 134.251 cv
95.7929 134.163 95.719 134.632 95.9891 134.627 cv
95.9998 134.722 95.9777 134.784 95.9052 134.794 cv
95.9853 134.965 96.2748 134.924 96.2383 135.212 cv
96.5821 135.317 96.7486 135.074 96.8647 134.836 cv
96.847 134.659 96.6672 134.643 96.6149 134.502 cv
96.6041 134.379 96.7095 134.373 96.6981 134.251 cv
96.3335 133.892 96.5114 133.449 96.531 133.039 cv
96.8502 132.759 97.223 132.533 97.5744 132.287 cv
97.9094 132.468 98.2955 132.598 98.6614 132.747 cv
98.6948 132.838 98.6147 133.04 98.8292 133.039 cv
98.7585 133.44 99.0102 133.592 99.0386 134.042 cv
99.1553 134.092 99.2329 134.18 99.2885 134.293 cv
99.4033 134.119 99.6178 134.17 99.7484 134.293 cv
99.6764 134.638 99.2676 134.444 99.0796 134.71 cv
99.009 134.521 98.7825 134.844 98.6197 134.836 cv
98.5838 134.775 98.5869 134.674 98.4532 134.71 cv
98.4557 134.378 98.609 134.198 98.8292 134.084 cv
98.7194 134.037 98.5655 133.84 98.7453 133.75 cv
98.7529 133.618 98.5762 133.668 98.5365 133.582 cv
98.6305 133.402 98.585 133.334 98.5787 133.081 cv
98.3037 133.144 98.0122 133.094 97.8684 132.914 cv
97.6716 133.054 97.4268 133.092 97.2413 133.039 cv
cp
ef
99.1634 135.922 mo
99.2517 136.294 98.8499 136.559 99.0385 136.757 cv
98.7578 137.4 98.0279 136.94 97.5749 136.8 cv
97.556 136.669 97.6651 136.666 97.7843 136.675 cv
97.7276 136.484 97.662 136.238 97.7011 136.089 cv
97.8531 135.509 98.8 135.525 99.1634 135.922 cv
cp
ef
125.401 133.666 mo
125.52 133.687 125.461 133.885 125.65 133.833 cv
125.702 134.241 125.997 134.407 126.278 134.585 cv
126.312 134.703 126.22 134.693 126.237 134.794 cv
126.729 135.026 127.071 135.407 127.574 135.63 cv
127.763 135.524 128.009 135.233 128.284 135.462 cv
128.224 135.683 128.188 135.924 127.866 135.881 cv
127.722 136.799 126.46 136.341 125.818 136.758 cv
125.83 137.301 126.346 137.741 126.237 138.387 cv
126.108 138.357 126.085 138.429 125.985 138.429 cv
125.96 138.63 125.891 138.75 125.902 138.889 cv
125.613 138.77 125.362 138.404 125.318 138.178 cv
124.851 138.143 124.929 137.563 124.399 137.593 cv
124.399 137.468 li
124.123 137.57 123.874 137.45 123.855 137.176 cv
123.723 137.155 123.707 137.251 123.564 137.217 cv
123.605 137.021 123.367 137.106 123.396 136.925 cv
123.297 136.957 123.106 137.007 123.019 136.925 cv
123.003 136.505 123.46 136.557 123.52 136.215 cv
123.503 136.134 123.359 136.182 123.396 136.048 cv
123.395 135.838 123.758 135.993 123.688 135.713 cv
124.059 135.657 123.992 135.993 123.813 136.089 cv
123.87 136.262 124.047 136.095 124.147 136.173 cv
124.32 136.822 124.973 136.991 125.318 137.468 cv
125.442 137.468 125.567 137.468 125.694 137.468 cv
125.561 137.418 125.474 137.325 125.358 137.26 cv
125.339 137.128 125.449 137.125 125.567 137.133 cv
125.603 136.959 125.38 137.043 125.318 136.967 cv
125.411 136.8 125.442 136.494 125.234 136.424 cv
125.196 136.149 125.454 136.171 125.526 136.006 cv
125.744 136.18 126.107 136.006 126.194 135.797 cv
125.927 135.713 125.782 135.539 125.818 135.253 cv
125.494 135.553 125.353 135.201 125.107 135.002 cv
124.977 134.99 125.215 135.124 125.066 135.129 cv
124.866 135.161 124.893 134.968 124.815 134.878 cv
124.69 134.901 124.532 135.033 124.399 134.92 cv
124.607 134.478 125.303 134.479 125.15 133.791 cv
125.215 133.731 125.345 133.736 125.401 133.666 cv
cp
ef
104.47 138.763 mo
104.64 138.853 104.796 138.745 104.886 138.638 cv
104.82 138.308 104.426 138.362 104.47 138.763 cv
cp
105.138 138.178 mo
105.27 138.291 105.094 138.465 105.346 138.471 cv
105.309 138.698 105.108 138.76 105.18 139.098 cv
104.95 139.078 104.663 139.186 104.344 139.098 cv
104.27 138.977 104.215 138.836 104.093 138.763 cv
104.003 138.297 104.309 138.228 104.51 138.053 cv
104.808 137.879 104.834 138.229 105.138 138.178 cv
cp
ef
101.168 137.385 mo
101.219 137.516 101.311 137.605 101.335 137.76 cv
101.164 138.118 100.621 138.103 100.583 138.596 cv
100.38 138.56 100.306 138.653 100.166 138.68 cv
99.8168 138.296 99.4484 138.356 98.9128 138.262 cv
98.8706 138.346 li
98.9942 138.648 99.4882 138.681 99.3721 139.098 cv
99.3765 139.205 99.5273 139.164 99.5803 139.222 cv
99.4327 139.553 99.8011 139.576 99.832 139.849 cv
99.9809 139.829 100.074 139.782 100.207 139.849 cv
100.135 139.931 100.135 140.084 100.083 140.184 cv
99.4043 140.141 99.3368 139.742 98.7879 139.599 cv
98.7475 139.206 98.446 139.077 98.2858 138.805 cv
98.2794 138.701 98.3078 138.631 98.369 138.596 cv
98.2283 138.292 97.8359 138.238 97.7009 137.928 cv
97.4511 137.969 97.3439 137.867 97.3666 137.635 cv
97.4984 137.544 97.7117 137.535 97.9098 137.51 cv
97.9514 137.566 98.0233 137.591 98.0353 137.677 cv
98.3943 137.618 98.7879 137.878 99.2049 137.76 cv
99.2579 137.66 99.2895 137.538 99.3721 137.468 cv
99.4724 137.634 99.8023 137.568 99.873 137.76 cv
99.955 137.732 99.9853 137.649 99.9992 137.551 cv
100.224 137.785 100.381 137.43 100.583 137.385 cv
100.577 137.133 100.562 137.12 100.583 136.883 cv
100.189 136.653 99.9039 136.792 99.5399 136.883 cv
99.5399 136.73 99.5399 136.577 99.5399 136.424 cv
99.7721 136.457 99.9083 136.33 100.083 136.424 cv
100.353 135.918 101.503 136.763 101.168 137.385 cv
cp
ef
118.674 138.93 mo
118.729 139.037 118.883 139.193 118.758 139.348 cv
118.94 139.357 119.153 139.453 119.258 139.306 cv
119.158 139.139 119.294 139.135 119.302 138.972 cv
119.072 139.071 118.911 138.811 118.674 138.93 cv
cp
119.802 138.095 mo
119.746 138.208 119.815 138.554 120.053 138.513 cv
120.026 138.347 120.163 138.345 120.137 138.178 cv
120.049 138.125 119.904 138.005 119.802 138.095 cv
cp
120.221 137.593 mo
120.195 137.836 120.332 137.676 120.429 137.76 cv
120.65 138.025 120.434 138.349 120.554 138.596 cv
120.194 138.563 119.932 139.058 119.594 138.721 cv
119.469 138.781 119.501 138.993 119.635 139.014 cv
119.459 139.2 119.435 139.488 119.635 139.641 cv
119.166 139.822 118.779 139.806 118.381 139.557 cv
118.179 138.793 118.832 138.43 119.469 138.638 cv
119.486 138.408 119.352 138.224 119.551 138.137 cv
119.431 138.104 119.406 137.976 119.385 137.844 cv
119.734 137.776 119.724 137.493 120.221 137.593 cv
cp
ef
122.726 140.268 mo
122.943 140.215 123.039 140.484 123.228 140.434 cv
123.265 140.579 123.317 140.709 123.436 140.769 cv
123.692 140.799 124.007 140.759 124.147 140.477 cv
124.017 140.497 123.976 140.424 123.938 140.35 cv
123.977 140.305 124.092 140.338 124.064 140.225 cv
124.032 140.076 123.873 140.054 123.772 139.974 cv
123.741 139.847 123.844 139.852 123.813 139.724 cv
123.636 139.623 123.512 139.468 123.228 139.473 cv
123.11 139.786 122.809 139.918 122.726 140.268 cv
cp
122.851 136.925 mo
122.909 136.978 122.916 137.13 122.81 137.133 cv
122.817 137.211 122.951 137.159 122.977 137.217 cv
122.945 137.623 123.229 138.044 123.436 138.346 cv
123.414 138.408 123.375 138.451 123.353 138.513 cv
123.531 138.739 123.837 138.837 123.855 139.222 cv
123.976 139.31 124.186 139.311 124.189 139.515 cv
124.209 139.675 124.04 139.646 123.98 139.724 cv
124.309 140.029 124.725 139.696 125.234 139.849 cv
125.366 140.078 125.069 140.092 125.025 140.268 cv
124.28 140.345 124.145 141.032 123.646 141.353 cv
123.661 141.503 123.758 141.507 123.688 141.646 cv
123.419 141.669 123.432 141.976 123.145 141.98 cv
123.15 141.847 123.239 141.796 123.228 141.646 cv
123.205 141.554 122.968 141.465 122.936 141.521 cv
122.728 141.073 122.525 140.622 122.017 140.477 cv
121.757 139.774 120.874 139.697 120.429 139.181 cv
120.647 139.008 120.87 138.842 121.264 138.847 cv
121.296 138.754 121.246 138.548 121.348 138.429 cv
121.418 138.429 121.487 138.429 121.557 138.429 cv
121.591 138.547 121.498 138.537 121.515 138.638 cv
122.092 138.75 121.803 139.486 122.391 139.599 cv
122.517 139.571 122.352 139.509 122.391 139.431 cv
122.578 139.45 122.563 139.507 122.685 139.515 cv
122.734 139.23 122.913 139.075 123.061 138.889 cv
122.815 138.424 122.34 138.19 122.017 137.802 cv
122.102 137.649 122.234 137.8 122.435 137.76 cv
122.431 137.475 122.554 137.039 122.851 136.925 cv
cp
ef
103.174 139.39 mo
103.428 139.358 103.591 139.418 103.717 139.515 cv
103.584 139.744 103.753 139.888 103.884 139.974 cv
103.844 140.157 103.691 140.227 103.592 140.35 cv
103.676 140.433 li
103.831 140.48 103.741 140.277 103.884 140.309 cv
104.055 140.297 103.907 140.396 103.926 140.477 cv
104.118 140.605 104.481 140.562 104.554 140.81 cv
104.699 140.746 104.796 140.636 105.053 140.685 cv
105.103 140.875 105.291 140.905 105.18 141.061 cv
104.807 140.953 104.532 141.12 104.26 140.852 cv
104.089 140.875 104.04 141.021 103.926 141.103 cv
103.919 141.235 104.096 141.184 104.134 141.27 cv
103.915 141.478 104.105 141.623 104.177 141.854 cv
104.077 141.996 103.883 142.19 103.634 142.272 cv
103.558 142.296 103.406 142.246 103.341 142.272 cv
102.976 142.421 102.884 142.7 103.132 143.109 cv
103.602 143.116 103.888 143.163 104.134 143.317 cv
103.974 143.829 103.389 143.443 103.049 143.484 cv
102.783 143.179 102.328 143.062 102.213 142.607 cv
102.413 142.271 102.738 141.637 103.258 141.897 cv
103.383 141.797 103.491 141.685 103.508 141.479 cv
103.502 141.385 103.403 141.533 103.299 141.479 cv
103.31 141.214 103.203 141.057 103.383 140.936 cv
102.652 140.857 102.358 141.009 101.962 141.395 cv
102.015 141.611 101.925 141.709 102.046 141.854 cv
101.993 142.081 101.779 142.144 101.545 142.189 cv
101.444 142.114 101.616 141.83 101.295 141.813 cv
101.292 141.686 101.382 141.65 101.419 141.562 cv
101.078 141.365 100.662 141.409 100.584 141.019 cv
101.171 140.883 101.784 140.944 102.213 140.601 cv
102.755 140.655 103.108 140.522 103.383 140.309 cv
103.267 140.118 103.322 139.975 103.383 139.766 cv
103.401 139.553 103.139 139.621 103.174 139.39 cv
cp
ef
114.246 143.109 mo
114.305 142.958 114.536 142.98 114.579 142.816 cv
114.425 142.776 114.33 142.676 114.12 142.691 cv
114.009 142.845 114.016 143.09 114.246 143.109 cv
cp
114.036 142.189 mo
114.295 142.223 114.447 142.221 114.705 142.315 cv
114.673 142.541 114.849 142.56 114.915 142.691 cv
114.948 143.518 113.948 143.631 113.536 142.983 cv
113.536 142.857 113.536 142.732 113.536 142.607 cv
113.694 142.459 113.979 142.437 114.036 142.189 cv
cp
ef
121.64 141.854 mo
121.278 141.514 120.995 141.956 121.14 142.356 cv
120.865 142.507 120.817 143.035 120.388 142.899 cv
120.31 142.981 120.399 143.134 120.429 143.233 cv
120.785 143.199 121.072 143.174 121.432 143.233 cv
121.569 143.1 121.804 143.01 121.683 142.732 cv
121.811 142.764 121.762 142.617 121.891 142.648 cv
121.789 142.424 121.614 142.073 121.64 141.854 cv
cp
119.677 140.643 mo
119.448 141.062 119.3 141.581 119.635 141.98 cv
119.638 142.053 119.625 142.11 119.594 142.148 cv
119.713 142.292 120.002 142.267 120.053 142.481 cv
120.306 142.484 120.579 142.506 120.721 142.398 cv
120.646 142.084 120.892 142.094 120.972 141.938 cv
120.802 141.862 120.994 141.647 120.888 141.479 cv
120.701 141.245 120.393 141.22 120.221 141.061 cv
120.361 141.021 120.436 140.914 120.469 140.769 cv
120.323 140.673 120.224 140.522 120.177 140.434 cv
119.996 140.489 119.975 140.705 119.677 140.643 cv
cp
121.85 140.685 mo
121.837 140.77 121.737 140.767 121.724 140.852 cv
121.763 140.98 121.985 140.925 122.059 141.019 cv
122.054 141.169 121.993 141.261 121.975 141.395 cv
121.965 141.531 122.124 141.497 122.183 141.562 cv
122.157 142.458 122.137 143.525 121.18 143.693 cv
121.019 143.866 120.98 144.16 120.846 144.362 cv
120.549 144.061 120.456 143.554 120.01 143.4 cv
119.997 142.912 119.263 143.146 119.258 142.648 cv
119.196 142.587 119.074 142.582 118.966 142.565 cv
118.965 142.294 118.928 142.084 118.799 141.854 cv
118.859 141.343 119.052 140.966 119.218 140.559 cv
119.489 140.566 119.544 140.203 119.802 140.1 cv
119.969 140.184 li
120.16 140.165 120.408 140.014 120.68 140.058 cv
120.992 140.11 121.255 140.253 121.39 140.517 cv
121.665 140.452 121.694 140.631 121.85 140.685 cv
cp
ef
113.033 144.863 mo
113.113 144.942 113.109 144.838 113.242 144.863 cv
113.242 144.738 li
113.111 144.718 113.072 144.79 113.033 144.863 cv
cp
113.995 144.947 mo
113.991 145.133 114.031 145.273 114.246 145.239 cv
114.246 145.487 114.536 145.953 114.161 146.2 cv
114.177 146.588 114.015 147.095 113.744 147.328 cv
113.686 147.498 113.835 147.461 113.828 147.578 cv
113.783 147.882 113.293 147.741 113.284 148.079 cv
113.457 148.069 113.752 148.061 114.12 148.079 cv
114.291 147.931 114.386 147.706 114.705 147.704 cv
114.738 147.919 114.618 147.978 114.622 148.163 cv
114.413 148.178 114.304 148.291 114.329 148.539 cv
114.068 148.516 113.882 148.566 113.869 148.79 cv
113.594 148.866 113.451 148.815 113.284 148.999 cv
112.982 148.934 112.862 148.945 112.573 148.874 cv
112.534 148.552 112.189 148.534 111.947 148.414 cv
111.732 148.477 111.534 148.558 111.279 148.582 cv
111.242 148.493 111.153 148.457 111.154 148.331 cv
111.458 148.328 111.786 148.066 112.074 147.913 cv
112.686 148.045 113.474 147.878 113.201 147.119 cv
113.283 146.979 113.375 146.847 113.493 146.743 cv
113.248 146.309 113.122 145.95 113.242 145.365 cv
113.238 145.272 113.065 145.346 112.992 145.323 cv
112.963 145.218 112.95 145.15 113.033 145.072 cv
112.978 144.988 112.761 145.067 112.825 144.863 cv
112.402 144.839 112.136 144.809 111.906 145.031 cv
111.91 145.137 111.93 145.229 111.99 145.281 cv
111.91 145.369 111.876 145.501 111.696 145.49 cv
111.673 145.908 112.021 146.151 111.696 146.451 cv
111.739 146.519 111.875 146.497 111.947 146.534 cv
111.839 146.991 112.326 146.852 112.449 147.078 cv
112.013 147.521 111.296 147.101 111.111 146.701 cv
111.091 146.57 111.171 146.538 111.195 146.451 cv
110.872 146.204 110.954 145.461 111.279 145.281 cv
111.323 145.125 111.176 145.161 111.195 145.031 cv
111.426 144.899 111.756 144.867 111.822 144.571 cv
112.312 144.545 112.494 144.213 113.117 144.32 cv
113.492 144.447 113.638 144.803 113.995 144.947 cv
cp
ef
117.629 146.534 mo
117.436 147.375 116.606 147.131 116.042 147.411 cv
116.056 147.551 116.163 147.597 116.126 147.788 cv
116.003 147.897 115.886 147.75 115.708 147.788 cv
115.796 147.226 115.412 147.138 115.332 146.743 cv
115.421 146.651 115.595 146.645 115.749 146.618 cv
115.978 147.042 116.604 146.629 117.087 146.784 cv
117.169 146.614 117.409 146.18 117.629 146.534 cv
cp
ef
false sop
.208 .906 .647 .078 cmyk
true set_gvm
%ADOBeginSubsetFont: RRNBAA+CronosPro-Bold-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/RRNBAA+CronosPro-Bold 2 GetGlyphDirectory
41 <001C60D8A8C9B64C38BF93EFF5A403E2B30A26BE1E5750258A7EC08E72F1
59C97710264937D80A878A7E0704F88ADACFE184D3EB9B2F5EB665192C20FE1F
E300B706769F5779836883C9CE036D6BD26ED5EF181CAAF7223EBE647D00BEC1
91058E7E7ABCB7062ECAABCD8008488828EEAC5BF6CB21AA6DB522C3612F58C4
EFBE346ACA9F2346630001CADF4902ADCAF5B3FF5AF6DFE59ACC989C08B9351A
8D9A72EBD0F464AC> |
181 <001C60D8A8C9B7594606578507C0518A4ADA8C64CD55AB13042E31A41B4
71E53B0813C5C547256354E27B375DF410FA4889AA80F2615711D356915427D0
499B7B2315CFE332AE7611C386DD12680D556773E72FC95D197EC361D65FD577
0940794420E6E5CA06D967C2282003CB7408952B1529F090C298BC019588AA16
62B1164182633240733834A867B068DF18402102EF45DCFD3C288D7ADBEE8695
2A6C6F23D741418550A7C732F3830A7E8> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
VQWDIY+CronosPro-Bold [56.0001 0 0 -56.0001 0 0 ]msf
232.76 152.159 mo
(\0005\000\)\000\265\0004\000&)
[31.6402 37.2397 26.9917 25.7604 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: VYRAAA+CronosPro-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJB+CronosPro-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7791400A5D35C3C94736791D0797366D07908FA173389EEFE
260692C1420562CDD5E8376F49424B90AF4213129B0A5A4985C67B771942C24A
5046CBCF3F6B4ECA5DB5D8AE020F3A9B8D7797A3C24A53F74D73A1CCD8B65DB8
612D5CC3E7CC7E3DB26D2E6F2928BD16595C43592D65425015C821D0E28A079B
D6FD48A23B687E9920> |-
/l <1C60D8A8C9B869C10DA8F3F6940AAE852EE294A2BAA8938E93FAFC50029D
651523B2FD52F8EB157BECB94FCDD0DAE42642C21F33190ECFB800D109998E69
BFD782> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJB+CronosPro-Bold /Encoding get
dup 101 /e put
dup 108 /l put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJB+CronosPro-Bold*1 
[32{/.notdef}rp /space 68{/.notdef}rp /e 6{/.notdef}rp /l 147{/.notdef}rp]
VQWDJB+CronosPro-Bold nf
VQWDJB+CronosPro-Bold*1 [13.995 0 0 -13.995 0 0 ]msf
225.683 412.583 mo
(le)
[3.62474 0 ]xsh
gsave
65.842 315.938 mo
535.343 315.938 li
535.343 290.738 li
65.842 290.738 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJE+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eacute <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740469F09A8097BE188EC
897C537B5FE35D5F09E04B9A41AC86DE6465E309851FD72F3BD5F48787DB5542
9137811E30EE035C069CE5069B99D66AA8D549FB213A463A0FBA45D46C8DA140
3B3A9CECE5A76F299F6FE4663069A6D95055EB6318D52DEDB3FB5CF25D65E355
AD0AD> |-
/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF
0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12
CD842E> |-
/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF
91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE58
8EC87D3> |-
/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09
FB3F0AFA0642E6C0751425F2912B774695F4573A7ED10CC8657328CADE6CD5BA
97A6C5BF6C1485B23CC65AC596605B697818C329637772F63BFEC9BF78A14135
7498BBAC8062C44F8B28D5A5EFBE38074FF4A38C9291B6291D33E32B99042454
59FFD3AE6CFBA6472FEF21B7BFBB29FDDBA248755ED07D6E4AD20219> |-
/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED1
9B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30
A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43
C2B5E88E6AFB64C1CBC51F> |-
/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC9666D445523C20D6BC6D
45C854A0BE693CA04DDB35CE9C6FCC12699F3ECF3D1B67F9F5777A6EECDAF3C0
F3F32C0B6BC38F752623DB2A9617BDB514ED25F1A310A0C42BE659A27D8F2C06
C4BFA42A6084F73A353D30020A89B386DABBAAA17119B17F011D1BF8067CBFE1
7C2D6AE10C51C95BF00F09A50ED067AF> |-
/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB5
3E56E1831B0550D2FE4055F5> |-
/U <1C60D8A8C9B67A40D81BFBD664698F172962E5E1FA1185B63F3290B3666C
22108B29923B1DC2E04A6BB03297D059A20638E9439889AA598516C5989124B6
5198F3D60A7398> |-
/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A26
1528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4
E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF
06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D
7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D8839
3EC5B1BCAE7CEACDFA7D9A043D> |-
/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6
E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94
C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5
809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C
58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F8
8F3E7B91EC8C23BC> |-
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AED
C4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C049
2C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E
8106797186054DABC39E6B> |-
/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5
A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E
21C6C79BBDA40B7772F2DEC85ADAD3476B> |-
/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-
/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875
E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A366
46DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0
318D13C761F9DF> |-
/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4
E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81
C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-
/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB
1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0
AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-
/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5
A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F
24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0
AEBA9DE73147EEE82D829B87C7> |-
/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87
D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E64020888
37AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3
D16C57> |-
/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62D
D7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0
B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F8
9019F8CCCB6FE3AF5C57> |-
/v <1C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B78
CD729866CE567C88B5C4105F11006EA75E6774682E91A2E1F257423C8BD0B940
F1B9F1BCB8B413DFC78AF75D4027> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJE+MyriadPro-Regular /Encoding get
dup 32 /eacute put
dup 40 /parenleft put
dup 41 /parenright put
dup 51 /three put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJE+MyriadPro-Regular*1 
[32{/.notdef}rp /eacute 7{/.notdef}rp /parenleft /parenright 9{/.notdef}rp /three 28{/.notdef}rp 
/P 2{/.notdef}rp /S /T /U 11{/.notdef}rp /a /b 
2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /u /v 137{/.notdef}rp]
VQWDJE+MyriadPro-Regular nf
VQWDJE+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
164.401 306.338 mo
(Universit )
[7.76404 6.65991 2.80792 5.77203 6.01208 3.92395 4.75195 2.80792 3.97192 0 ]xsh
217.428 306.338 mo
(Toulouse)
[5.96393 6.58795 6.61194 2.83191 6.58795 6.61194 4.75195 0 ]xsh
265.931 306.338 mo
(3)sh
274.631 306.338 mo
(Paul)
[6.38397 5.78394 6.61194 0 ]xsh
298.787 306.338 mo
(Sabatier)
[5.91595 5.78394 6.828 5.78397 3.97192 2.80792 6.01208 0 ]xsh
342.358 306.338 mo
(\(UT3)
[3.40796 7.76404 5.96393 0 ]xsh
368.193 306.338 mo
(Paul)
[6.38397 5.78394 6.61194 0 ]xsh
392.349 306.338 mo
(Sabatier\))
[5.91595 5.78394 6.828 5.78394 3.97192 2.80792 6.01208 3.92395 0 ]xsh
grestore
gsave
68.255 403.518 mo
530.596 403.518 li
530.596 378.318 li
68.255 378.318 li
cp
clp
gsave
68.255 403.518 mo
530.596 403.518 li
530.596 378.318 li
68.255 378.318 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJF+MyriadPro-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6459DFE82B30F7F103A034F039703DE4824D6E77FE8D5893A
F538624839788DEF293D4EB82EFA7E67099A63F5B8FD17482B6D86934632DF2C
8AA9A2B522903662888BBE398B43EFC953F8D525109F90E8BA5FBF5C380107FF
77D6A57E0824D5570E59240A> |-
/E <1C60D8A8C9B785CBC7F16DAA23AFD2F01DD6D5C693CF9ED143B370BFFC69
E4802A87B899D9DFB8FC49A2D79293B4FC9DE6D759D386C60207BDE197A51931
484791BF> |-
/H <1C60D8A8C9B624F905A02204A12010C9CBA199E18A2ED71EA89563804FF5
6776D9F0BD91D8E2DA9004538CA809AEE6023017C3CEE2A1C3A73D575FFE60C7
2437B864C9AC> |-
/K <1C60D8A8C9B7D54520F41AFAF0B73EC6B52B086DFBB23A705134C40F6787
00F2610EE4CB7BCC026755D4841EF881366BEED17FDFAECD399BF31D9B8A665A
81DBD23115C0CA57498165> |-
/L <1C60D8A8C9B7BC12C78C6DF309E7286A6324B305383A5B3F03DD92D4DED4
BFCD765329BBC556D7> |-
/O <1C60D8A8C9B600E046551CB909A9832B49A369FF8ADCECDBABBA67B776D4
F394CE44CC21D593465D4ED0FD60C67C068933610D12E32C34E5EC7628BB341B
2630F73F61FE11005EC63FD6475D96C6AADB54592258F0ABF32639F7E16A2FAE
B2182ACB> |-
/R <1C60D8A8C9B7CA647DE1C48FBA151CF8C34FD0FDD9E43DB424AA12FFD9AC
D0D643AAE2304F02F5DE8CE845BDE1983DDA18E6FF843570A640F222B1DD6B57
9451F2FF3CBECD02F1308BB8E8CE5548774D5677B3CEDD29D0E6FA9BC7430F5D
4A61C0CF7DD15D6B8967A179EFE738DD83D6FCC2415B8CE2DDFD7213FB89FD61
1B> |-
/U <1C60D8A8C9B65F8A3A6A883EB44FDA73ECECC561675B4FA6FA6BEA29C7C2
37B81439BDCFE2709019B8371073BDA81AA6828120749D2D117021A7AACB2468
DB03C7CF9A21FB6D08DF> |-
/Y <1C60D8A8C9B7C0544EDD70934AE48DF21888EA62E60810017E4C10954FD5
CE4DB515E239BC66F4EBC1B8D83696A4A0A4D74E00ADA6074AEB6BA79B22B4B0
3B98923A8DB3BF2FE2> |-
/i <1C60D8A8C9B8581A0B08AEB90736162406B498E3C3936CFEBE27D7194429
0959CF2B030F317C20656798274A1B946F07AC2DFCFB171C30D399C5342B2AD7
6269395C2E52A288C2A7ECD3B5E802FF7BCE6F2276> |-
/n <1C60D8A8C9B7F1D1E7783E2C9D1FD6F7B6BC5A1F557D5B2CAE42AC1D291D
BB5D85AFC5A897D7FB1FD8167978818B2D03A998DA5986E84F964B10A7AC4A00
B2367991CCC27F283DD96AB9CDE7FCEE48F4DA920569CF4FDBC9EE1FA8E214F7
1E7DE8213D1356491F1F61BFBDE74B28BC34618B52396CBAEFE019CC03752C79
D6> |-
/o <1C60D8A8C9B7FA1300A59CB80CE3A4432C11B819FA7C7DE01042F56DDFA0
A8E8EA16C1B2AB4A8249248CA6142876977D9377FC524620B0FE5A67A0D9B8C0
9A59C3C6479F6932FE2A4094E32F309E2D5B6A629454D3F14947> |-
/t <1C60D8A8C9B72C0F871D3ECA6462DDA683B9A97C0F8B54CE7A9FCA44219D
F5344950BF9FF2E4347F23D9BAC51D7BECB6960C1B7EC705C58DC804AD6F8B12
C7599C0DF29F811756B3424058741C2E9952A53F8CDC59FD1EADAC265F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJF+MyriadPro-Bold /Encoding get
dup 65 /A put
dup 69 /E put
dup 72 /H put
dup 75 /K put
dup 76 /L put
dup 79 /O put
dup 82 /R put
dup 85 /U put
dup 89 /Y put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 116 /t put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJF+MyriadPro-Bold*1 
[65{/.notdef}rp /A 3{/.notdef}rp /E 2{/.notdef}rp /H 2{/.notdef}rp /K 
/L 2{/.notdef}rp /O 2{/.notdef}rp /R 2{/.notdef}rp /U 3{/.notdef}rp 
/Y 15{/.notdef}rp /i 4{/.notdef}rp /n /o 4{/.notdef}rp /t 
139{/.notdef}rp]
VQWDJF+MyriadPro-Bold nf
VQWDJF+MyriadPro-Bold*1 [14 0 0 -14 0 0 ]msf
236.636 394.418 mo
(Antonio)
[9.18408 8.20398 5.13805 8.07794 8.20398 3.83603 0 ]xsh
290.186 394.418 mo
(EL)
[7.47595 0 ]xsh
307.643 394.418 mo
(KHOURY)
[8.59598 9.64594 10.0379 9.5481 8.30203 0 ]xsh
grestore
grestore
gsave
239.63 416.35 mo
388.546 416.35 li
388.546 401.95 li
239.63 401.95 li
cp
clp
gsave
239.63 416.35 mo
388.546 416.35 li
388.546 401.95 li
239.63 401.95 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJE+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7BA8F6239473D6D0952B7B27F0FFDEC3D4AC868BB2F3F3
5FB5E9F1C0F84AF60C7D8EABDB59B8E1F960151F9511E55A6B26091EC60E1C90
C277465A6CD6BF415E99C1E3222E5D8229E07EB706E217942A6C6EE460AA0> |-
/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-
/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACAF941116
582617B9738BB5AF1D396C826652BF6DBB46CC2019C22EEDB26045C1BEFE4887
D256AE5DA3C25CAA99D62ED97486E7939D89DEC92F35F04285> |-
/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE1010
56958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C847
6BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D92067
68FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE
752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E604
3872EFC1C407DD53136E> |-
/j <1C60D8A8C9B879BE2B6D62B02C248C7AD617101B598D72A0ADE2AED2D777
F8A6CE105D9C8652691D59523C882D1DEF6602D4389A33BB81060F9BD8AF6D73
BA42E83F7E271645381327C882C7ADAA943858009BF9863E04A771625DD5ACBA
3A5A2618F38A4F897E1081C88D5DE158573C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJE+MyriadPro-Regular /Encoding get
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 100 /d put
dup 106 /j put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJE+MyriadPro-Regular*1 
[32{/.notdef}rp /eacute 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three 28{/.notdef}rp /P 2{/.notdef}rp /S /T /U 
11{/.notdef}rp /a /b /.notdef /d /e 3{/.notdef}rp /i 
/j /.notdef /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /u /v 137{/.notdef}rp]
VQWDJE+MyriadPro-Regular nf
VQWDJE+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
239.63 412.15 mo
(lundi)
[2.83191 6.61194 6.65991 6.76794 0 ]xsh
267.854 412.15 mo
(3)sh
276.553 412.15 mo
(juin)
[2.91595 6.61194 2.80792 0 ]xsh
298.093 412.15 mo
(2013)
[6.15601 6.15601 6.15601 0 ]xsh
grestore
grestore
gsave
69.176 528.056 mo
531.517 528.056 li
531.517 436.108 li
69.176 436.108 li
cp
clp
gsave
69.176 528.056 mo
531.517 528.056 li
531.517 436.108 li
69.176 436.108 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJE+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/egrave <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740469F09A8097BE188EC
897C537B5FE35D5F09E04B9A41AC86DE6465E309851FD72F3BD5F48787DB5542
9137811E30EE035C069CE5069B99D66AA8D549FB213A463A0FBA45D46C8DA140
3B3A9CECE5A76F299F6FE4663069A6D95059A3986D0C5A3A1992A943A6081D3B
02D8A74> |-
/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F1
5865B21E5E7BB034E6AEB00B8493B7416EA5F21E0E31EA4A4AA7B249DD04C202
0B54E2FE3571164F33157FAF89CB55ED12EC09CD04764D59017211B80D8BF81F
E221E84A40> |-
/M <1C60D8A8C9B6D9EA19A14B847D0E8EB8BF4B471CD6F46D062EB4BE987671
1DE846CB52CA29717591BA788944E909A85262E823C4FA12BA37712263FC72E9
89A6DED74E14903D34D6198FBDC555D5CFE2C4496EBCDE1C8C3752795BF188E4
FAAED3EDACC0501E6038041D4A8B4E60EE57E2BABA6257E8> |-
/O <1C60D8A8C9B624F9257693AA05F54B3F6F5707D5ED56A2F403B01AB2B44B
FA61536ECB93C3E443D431CDA75F7C80E1651DDF58D3BF4622794EC6262BD68B
AD06E68E1E6A6884DEBA5A70BE002DB0A3D53BEB04D3F8C5368D696AC6C0C562
F74CC4E6C46ADC> |-
/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A
114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624
097F1B5D47BF4F384727F53BA1763156DBDB0266> |-
/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71A
D800DE9767801FDF34CB86E1E21FD9D405698D46905E6F519DDB7CBC96570BA0
9B7E74CE45A9784C89ACE8876894AF309C859106C75B1212CD> |-
/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F43B727FC67DAAB0A1AC3463640
03E4FEF79FBAC399EF60BAB44182D20FA0C6402BF1E27F05398DCDDDA14D79F5
733F11E560A813FF9D16C42617DFDA23021803BAB86086244EE74B29A5E1F99E
79BC6C6C8880FE4C572C55E990D88B7521BD46854B97930948AAC94E7DFE2FF6
9F2221950186414A7427A5E80E1B04B219E3300404246D87351FD05C6F3EA0B9
5C636083B47E4D5C2DAA8BBB8D343439CEC8A6CCD7C3BA57C2332F2A02343DC5
6BF6AA691E1A081F9D254D> |-
/h <1C60D8A8C9B790A816BA887E1DA4852044FABD5C80CA3A9E2E9C1F200BD2
00369E1A531F52CE66B5B19C492F0751A1C2858510B2E2690FB789B214E0E0C6
537C1C71B0F5B79BE42FC591254AEEEA9BA5BA2F0A43A49AB11B4C> |-
/m <1C60D8A8C9B6B7700392E60257FC106462D2DFCBC2A10DB5A615FEAAB80A
D406B3832324841574E3D3133104747B3854CDADF52623F13A7F1244387949CA
519BF305061F6B288B581C60DA40B94376A357459EBA755901A927650F836941
E942CE400E1FF6115974FBE2B4AAC56A74FF06B173793CC52E5CDF6F129032B1
749CF571CC87D5D8236938E9D26865B5B2E013E76E7BD1DBAB8AA6F040AACF> |-
/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FDCA5DD8FB0C9C7D76709EB2E3CE
F7455DFF330D234D9132A6F52698D79064F174F1D99AEB0CF9139A6469F8D4BE
826FAC77DD18B951C7429F3A77A1434C1A624632AE9545E6FD8A1CFF86A978EB
2F9D9C8D213E3AEF1293A1DF353A70DA5E24E2AC4CE8D2656D24B8166AAA778D
66777269CA00CCD283376A690AE85A4058A8C9155FC3FA3A08F87D3A4F002FFB
BE8C69D79181> |-
/x <1C60D8A8C9B74CDDCE74E25740A68E8EC93756D85AEDEDDC715C2E343856
089CBF3B8126FA9B43C70F5E5E660A33AAD5AB29D3CF51EA27446736F5DCED8E
976C7B422ADF6C970DBFFC4BB6364510FCD37FB93596C6B594457047595B6C2E
545BFDEA968F36> |-
/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FE3B1D23AD
89884413882DCD456BA075554715051F4B509904A44C98E8994424C1B156D65D
BD9989905EF3DE501EC4A81DE7294F3DD868FBAE7BF61D1105CF8B349074D58A
EC16A3DDE7732615028813D74148E904C1C87C7D157893B843DFD35C187593AC
68163F56BACA6337> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJE+MyriadPro-Regular /Encoding get
dup 33 /egrave put
dup 65 /A put
dup 77 /M put
dup 79 /O put
dup 99 /c put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 109 /m put
dup 112 /p put
dup 120 /x put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJE+MyriadPro-Regular*1 
[32{/.notdef}rp /eacute /egrave 6{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero 
/one /two /three 13{/.notdef}rp /A 11{/.notdef}rp /M /.notdef 
/O /P 2{/.notdef}rp /S /T /U 11{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/j /.notdef /l /m /n /o /p /.notdef 
/r /s /t /u /v /.notdef /x /y 
134{/.notdef}rp]
VQWDJE+MyriadPro-Regular nf
VQWDJE+MyriadPro-Regular*1 [14 0 0 -14 0 0 ]msf
72.661 477.182 mo
(Planification)
[7.44797 3.30389 6.74793 7.7699 3.27591 4.0881 3.27591 6.27197 6.74792 4.63391 3.27591 7.68594 
0 ]xsh
147.923 477.182 mo
(de)
[7.89594 0 ]xsh
165.801 477.182 mo
(Mouvements)
[11.256 7.68594 7.71393 6.73404 7.0141 11.676 7.0141 7.7699 4.63391 0 ]xsh
245.81 477.182 mo
(Optimaux)
[9.64594 7.96599 4.63391 3.27591 11.676 6.74792 7.71393 0 ]xsh
306.919 477.182 mo
(pour)
[7.966 7.68594 7.71393 0 ]xsh
337.831 477.182 mo
(des)
[7.89594 7.0141 0 ]xsh
361.252 477.182 mo
(Syst!mes)
[6.90195 6.5939 5.54395 4.63391 7.0141 11.676 7.0141 0 ]xsh
419.142 477.182 mo
(Anthropomorphes)
[8.56799 7.7699 4.63391 7.7699 4.57794 7.68594 7.966 7.68594 11.676 7.68594 4.57794 7.966 
7.76987 7.0141 0 ]xsh
134.351 493.982 mo
(Planning)
[7.44797 3.30389 6.74792 7.7699 7.7699 3.27591 7.7699 0 ]xsh
189.23 493.982 mo
(Optimal)
[9.64594 7.966 4.63391 3.27591 11.676 6.74792 0 ]xsh
239.447 493.982 mo
(Motions)
[11.256 7.68594 4.63391 3.27591 7.68594 7.7699 0 ]xsh
290.266 493.982 mo
(for)
[4.0881 7.68594 0 ]xsh
309.586 493.982 mo
(Anthropomorphic)
[8.56799 7.7699 4.63391 7.7699 4.57794 7.68594 7.966 7.68594 11.676 7.68594 4.57794 7.966 
7.7699 3.27591 0 ]xsh
418.435 493.982 mo
(Systems)
[6.90195 6.5939 5.54395 4.63391 7.0141 11.676 0 ]xsh
grestore
grestore
gsave
69.106 575.201 mo
531.447 575.201 li
531.447 550.001 li
69.106 550.001 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJE+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7BA8F425ECEAC1D5FB15843FC3AEF325D7DA4AC5B49218
1366F1B4D605798E0A37299E20A2C781E96943F501C8D283CF9274FA8718C41B
B1F2F8D3022028ECD22D73F736D12B17047DF40EDD60B6519E74C55A33C> |-
/six <1C60D8A8C9B7BA8F6239473257A8A6F62043E414325CA26487C2B24B19
1B168E0DA687FF84130E464A581CEABD7A1831A83A01C968043ECE2E73D7C0CF
5C7A53E3098E1CA41D075CF1B0FAA4D3D63203DF5A7A1EBF70F4DE9A7FD3C13C
DDAF688040D9BEE80C42C7397D37BC0163DE0936D86331F997A056B7561C404E
F4CCB6BEFB2D969A52553626DC842C> |-
/colon <1C60D8A8C9B89DB76243278294073DF27AE5537531F4FA2681A370F5
FCCA7E6E1FA86AF450F5EF64102F632D9C8870983D71709A25CADA9622AD5CCA
20A33D7B0A8891ABF97827B8> |-
/D <1C60D8A8C9B64FADC8BE4593403BE5D574FAA91D24903C73A9847FBCFF2C
CAE7B82F347344B6D75D9DA8CFD564A5192C31CC0F81E85BFE65DA0E98609881
F08E27947C3AA06FD0D02C1BFBD8926D8C270B5E2950C4A34E562381A9DCE503
FFFA3F4060AB2DBCCA9D5531B6> |-
/E <1C60D8A8C9B7AFA9BC4F00998616708AD319D689B216B721CBB286284877
352BA785E1B053DF2EC2B77B2A321D6047CBD4FD467F6DD70A1B400CD3EB> |-
/R <1C60D8A8C9B7818197CA8C10BDEF0792283B4AD60A4778EF579EA03A9938
895E46A3DD671B55D56CE5AC1FF66AA5C5464B6272AB067D7AABFB9BA4824D96
D968B50E7E75C15CA7D5303E4D6EB750FDAD2DAE18E237F2D0B786B8A46E9DCB
053FB02CA78233BC22EC230776B8699564C207758BBC5B113141> |-
/Y <1C60D8A8C9B79EE31BCA65993FF5717FF3016C54D40CB82890A019046EE3
F9EE26EFAED38E9C1E40ABF57F64D5B388E5F55032D1FFBE776E1367B62F146A
9878C3F4A282> |-
/q <1C60D8A8C9B7E897EED043C74253B54ADD4A83B5A401EE275FD05305D443
701C0B5FB5FFB629FD564139466A0D21B941D95638CDD0441A0BA219E67025CA
58D717F5105065C6C534C87A1E9460A7EB934679C52896D0325C4745FC1FA2E1
9A833C7512C47FAFC1F455DA264B132201332D7965A6000B61991E83CF8296E6
5C72578347B3415411104B5B8018A71A688EDD6AFDB9028F3C25C58A0C2F46C8
DD14D67E4428A4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJE+MyriadPro-Regular /Encoding get
dup 52 /four put
dup 54 /six put
dup 58 /colon put
dup 68 /D put
dup 69 /E put
dup 82 /R put
dup 89 /Y put
dup 113 /q put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJE+MyriadPro-Regular*1 
[32{/.notdef}rp /eacute /egrave 6{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero 
/one /two /three /four /.notdef /six 3{/.notdef}rp /colon 
6{/.notdef}rp /A 2{/.notdef}rp /D /E 7{/.notdef}rp /M /.notdef 
/O /P /.notdef /R /S /T /U 3{/.notdef}rp 
/Y 7{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /.notdef /l /m /n 
/o /p /q /r /s /t /u /v 
/.notdef /x /y 134{/.notdef}rp]
VQWDJE+MyriadPro-Regular nf
VQWDJE+MyriadPro-Regular*1 [11 0 0 -11 0 0 ]msf
237.006 565.351 mo
(EDSYS)
[5.41205 7.326 5.42296 5.951 0 ]xsh
268.872 565.351 mo
(:)sh
273.481 565.351 mo
(Robotique)
[5.91794 6.03894 6.259 6.03897 3.64093 2.57391 6.19305 6.06094 0 ]xsh
324.047 565.351 mo
(4200046)
[5.64301 5.64301 5.64301 5.64301 5.64301 5.64301 0 ]xsh
grestore
gsave
68.213 612.556 mo
530.554 612.556 li
530.554 587.356 li
68.213 587.356 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJE+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B8391507657B8D1429650EAD682B1E1FA8FF445B393CF
432> |-
/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C0603B0F56
B2079EC8B4534AB9C74A497574D9EF71E8F51BC97EB8824D6E23EF8EFAA3DEBE
8D568C2956BA1E496299B0678E1779132A604465EA4ECC38726918FAF069884E
38826C83426FA3C94ADFC9002199C86D8D> |-
/L <1C60D8A8C9B74383E5F6C6CDF9C5C9B986319F48E0C8F60D9DD3B951CB8A
90C91D93DE> |-
/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD8
33E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F3487
A85D6C086A5A13FB7D7B66A3F61EF4969C1AE080F7AF6D145220EBF9A7BF4151
121C2FA015E52FB7E43B5305D938D71B0B61429953BBCCA81012B7A0E4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJE+MyriadPro-Regular /Encoding get
dup 45 /hyphen put
dup 67 /C put
dup 76 /L put
dup 78 /N put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJE+MyriadPro-Regular*1 
[32{/.notdef}rp /eacute /egrave 6{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 
2{/.notdef}rp /zero /one /two /three /four /.notdef /six 
3{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C /D /E 
6{/.notdef}rp /L /M /N /O /P /.notdef /R 
/S /T /U 3{/.notdef}rp /Y 7{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/.notdef /l /m /n /o /p /q /r 
/s /t /u /v /.notdef /x /y 134{/.notdef}rp]
VQWDJE+MyriadPro-Regular nf
VQWDJE+MyriadPro-Regular*1 [11 0 0 -11 0 0 ]msf
273.176 602.706 mo
(LAAS-CNRS)
[5.19199 6.73199 6.73199 5.42297 3.37708 6.38 7.23807 5.91794 0 ]xsh
grestore
gsave
68.213 807.987 mo
530.554 807.987 li
530.554 687.987 li
68.213 687.987 li
cp
clp
gsave
68.213 807.987 mo
530.554 807.987 li
530.554 687.987 li
68.213 687.987 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJE+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B89DB7C9B4756630BFB06276234AECCA3BC685A5120ED7
E73C100A605F362E52A669> |-
/B <1C60D8A8C9B79D2DDA73CBA562CCA616611FA2F6D9A4F73A34564160886E
9CF893B5F30C6CA3CC5C829E6C86CCD8B6039E0C7F2FD0FFEC5790BDC97E18D5
0224F8DBF29BE62BF93B9B46A0E426252323AF779BE129778FBC2237B0172C86
2C48766856E64A95D30B6FDF49C5041364379F758936E5F343D201DDC5AF9E1C
C2D12A5BB71D809FD0C76D483DCA8BBD4974D0EC93996621F2710B5158F15640
1628A148FF8FBE9DF1DF727E152C865F07> |-
/F <1C60D8A8C9B7544E530E823999841DA2F8EC66E9CFE2CD6B50437205F942
FF37E122B69D17C7AA691A603207160811AFB791> |-
/G <1C60D8A8C9B67B1690716FF04D0147EA5B51F2B65610FAF2358C724A65CE
4A5C15BD93B6E6EA59AFCC3415F16C5AEB5B662300673D7883DCA60663F28B13
74AECADD3956841307F73A4A3284F6D8D8ABF9017548C3B89BDD9012EBEC97E3
91C348B649F9A4B9E9FBB9333C1B69DB13F722AB4C9DC35502510C64773DA8C4
CCB3ABFBFDCCB6F676B3960993837C4B63CC7BA56876924A0E6E> |-
/H <1C60D8A8C9B6415B1C8023DCDB0FF1D084A484AF3579A723AF8D5247ABB5
D292AC378AF267DE95E8DC7174E8DD00326C723C8D6F70CCD88C857300A53452> |-
/I <1C60D8A8C9B87DE005AD6F3C5D74814B2BFE06F81F462471EDB11E0EC39F
39EA> |-
/J <1C60D8A8C9B7299ACC7A42E6AE29E0787D9DA7475BC8B52E05061F7086AA
FF48958D5796C25528B68A53A127F22B73E1B82D000FDDD8C93746C59D7317> |-
/K <1C60D8A8C9B79D2DFFE43841A70974C488289A3FDB0CBC62C7FBB8CDC8C3
0C59CB3585B4E609BAE0DA114BF5A7F3C4AE09FD4E66CCEB1583EF9D5A7360C1
994188D5C7242A> |-
/V <1C60D8A8C9B7EDAFD30F79AA728C73B6F9D7243B3F3111E28F2A88FF9E55
31C99B386BBCEA887616E38278755F3D624761739CBCFEBE737FE4F6B41F26A8
CE4C75B9203972AF1AD2A0D0E820> |-
/W <1C60D8A8C9B683825E2D044740A889FBE934ECCE78E1156C56B6149D738C
A6C7B4AECC7FA154428E6DD464F11C7D97D1FA9A6F6B9A75D5C94F0DB87ED3BD
E4384A0C5BEF384B64AB6AB82F0CAD9F523DB7B169A9EFE68886BAAEBDCCF81A
77828FB78CC41F51C2F02BE854F0FC98D5C093F2F1B7BFBBE0B76D7E8A41F57E
61D5D8AA27543AC483B2961CB710> |-
/Z <1C60D8A8C9B7924C306AE211DC62993632BBB0EB035946DEA580F9525E4D
E67D756B4FB8280DAE3F99D28FD65D9C7B7B15938F40BF5331> |-
/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327F
F61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1
E2F6A013F2F56A027205F5576546> |-
/quotesingle <1C60D8A8C9B8AE7DA6CE0948B7965010928D447AE0433488D2
B7725C620BAF4C2CC58D6F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJE+MyriadPro-Regular /Encoding get
dup 44 /comma put
dup 66 /B put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 86 /V put
dup 87 /W put
dup 90 /Z put
dup 107 /k put
dup 169 /quotesingle put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJE+MyriadPro-Regular*1 
[32{/.notdef}rp /eacute /egrave 6{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen 2{/.notdef}rp /zero /one /two /three /four /.notdef 
/six 3{/.notdef}rp /colon 6{/.notdef}rp /A /B /C /D 
/E /F /G /H /I /J /K /L 
/M /N /O /P /.notdef /R /S /T 
/U /V /W /.notdef /Y /Z 6{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/j /k /l /m /n /o /p /q 
/r /s /t /u /v /.notdef /x /y 
47{/.notdef}rp /quotesingle 86{/.notdef}rp]
VQWDJE+MyriadPro-Regular nf
VQWDJE+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
268.544 696.987 mo
(Rapporteurs)
[6.45593 5.78394 6.828 6.828 6.58795 3.92395 3.97192 6.01208 6.61194 3.92395 0 ]xsh
149.542 711.387 mo
(Maren)
[9.64801 5.78394 3.92395 6.01208 0 ]xsh
184.113 711.387 mo
(BENNEWITZ,)
[6.50409 5.90405 7.89606 7.89606 5.90405 10.1519 2.86798 5.96393 6.63593 0 ]xsh
248.864 711.387 mo
(Juniorprofessorin,)
[4.43994 6.61192 6.65991 2.80792 6.58795 3.92395 6.828 3.92395 6.58795 3.50409 6.01208 4.75195 
4.75195 6.58795 3.92395 2.80792 6.65991 0 ]xsh
341.263 711.387 mo
(University)
[7.76404 6.65991 2.80792 5.77203 6.01208 3.92395 4.75195 2.80792 3.97192 0 ]xsh
393.93 711.387 mo
(of)
[6.58795 0 ]xsh
406.566 711.387 mo
(Freiburg)
[5.84399 3.92395 6.01208 2.80792 6.828 6.61194 3.92395 0 ]xsh
133.3 725.787 mo
(Abderrahmane)
[7.34399 6.828 6.76794 6.01208 3.92395 3.92395 5.78394 6.65991 10.008 5.78394 6.65991 0 
]xsh
211.551 725.787 mo
(KHEDDAR,)
[6.50409 7.82391 5.90405 7.992 7.992 7.34399 6.45592 0 ]xsh
266.594 725.787 mo
(Directeur)
[7.992 2.80792 3.92395 6.01208 5.37598 3.97192 6.01208 6.61194 0 ]xsh
315.769 725.787 mo
(de)
[6.76794 0 ]xsh
331.093 725.787 mo
(Recherches,)
[6.45593 6.01208 5.37598 6.65991 6.01208 3.92395 5.37598 6.65991 6.01208 4.75195 0 ]xsh
393.36 725.787 mo
(CNRS-AIST)
[6.96002 7.89606 6.45593 5.91595 3.68408 7.34399 2.86798 5.91595 0 ]xsh
448.907 725.787 mo
(JRL)
[4.43994 6.45593 0 ]xsh
265.496 740.187 mo
(Examinateurs)
[5.90405 5.55597 5.78394 10.008 2.80792 6.65991 5.78394 3.97192 6.01208 6.61191 3.92395 0 
]xsh
162.808 754.587 mo
(Brigitte)
[6.50409 3.92395 2.80792 6.70807 2.80792 3.97192 3.97192 0 ]xsh
202.059 754.587 mo
(D\251ANDREA-NOVEL,)
[7.992 2.25604 7.34399 7.89606 7.992 6.45593 5.90405 7.34399 3.68407 7.89606 8.26794 6.69598 
5.90405 5.664 0 ]xsh
298.381 754.587 mo
(Professeur,)
[6.38397 3.92395 6.58795 3.50409 6.01208 4.75195 4.75195 6.01208 6.61194 3.92395 0 ]xsh
355.872 754.587 mo
(Mines)
[9.64801 2.80792 6.65991 6.01208 0 ]xsh
388.296 754.587 mo
(ParisTech)
[6.38397 5.78394 3.92395 2.80792 4.75195 5.96393 6.01208 5.37598 0 ]xsh
104.669 768.987 mo
(Timothy)
[5.96393 2.80792 10.008 6.58795 3.97192 6.65991 0 ]xsh
148.864 768.987 mo
(BRETL,)
[6.50409 6.45593 5.90405 5.96393 5.664 0 ]xsh
184.383 768.987 mo
(Assistant)
[7.34399 4.75195 4.75195 2.80792 4.75195 3.97192 5.78394 6.65991 0 ]xsh
231.723 768.987 mo
(Professor,)
[6.38397 3.92395 6.58795 3.50409 6.01208 4.75195 4.75195 6.58795 3.92395 0 ]xsh
283.178 768.987 mo
(University)
[7.76404 6.65991 2.80792 5.77203 6.01208 3.92395 4.75195 2.80792 3.97192 0 ]xsh
335.845 768.987 mo
(of)
[6.58795 0 ]xsh
348.481 768.987 mo
(Illinois)
[2.86798 2.83191 2.83191 2.80792 6.65991 6.58795 2.80792 0 ]xsh
383.172 768.987 mo
(at)
[5.78394 0 ]xsh
395.472 768.987 mo
(Urbana-Champaign)
[7.76404 3.92395 6.828 5.78394 6.65991 5.78394 3.68408 6.96002 6.65991 5.78394 10.008 6.828 
5.78394 2.80792 6.70807 0 ]xsh
173.284 783.387 mo
(Patrick)
[6.38397 5.78394 3.97192 3.92395 2.80792 5.37598 0 ]xsh
209.703 783.387 mo
(DANES,)
[7.992 7.34399 7.89606 5.90405 5.91595 0 ]xsh
249.782 783.387 mo
(Professeur,)
[6.38397 3.92395 6.58795 3.50409 6.01208 4.75195 4.75195 6.01208 6.61194 3.92395 0 ]xsh
307.273 783.387 mo
(Universit )
[7.76404 6.65991 2.80792 5.77203 6.01208 3.92395 4.75195 2.80792 3.97192 0 ]xsh
360.3 783.387 mo
(Paul)
[6.38397 5.78394 6.61194 0 ]xsh
384.456 783.387 mo
(Sabatier)
[5.91595 5.78394 6.828 5.78394 3.97192 2.80792 6.01208 0 ]xsh
112.139 797.787 mo
(Rodolphe)
[6.45593 6.58795 6.76794 6.58795 2.83191 6.828 6.65991 0 ]xsh
163.414 797.787 mo
(GELIN,)
[7.75195 5.90405 5.664 2.86798 7.89606 0 ]xsh
198.525 797.787 mo
(Responsable)
[6.45593 6.01208 4.75195 6.828 6.58795 6.65991 4.75195 5.78394 6.828 2.83191 0 ]xsh
264.572 797.787 mo
(des)
[6.76794 6.01208 0 ]xsh
284.648 797.787 mo
(projets)
[6.828 3.92395 6.58795 2.91595 6.01208 3.97192 0 ]xsh
322.183 797.787 mo
(collaboratifs,)
[5.37598 6.58795 2.83191 2.83191 5.78394 6.828 6.58795 3.92395 5.78394 3.97192 2.80792 3.50409 
4.75195 0 ]xsh
388.782 797.787 mo
(Aldebaran)
[7.34399 2.83191 6.76794 6.01208 6.828 5.78394 3.92395 5.78394 0 ]xsh
443.261 797.787 mo
(Robotics)
[6.45593 6.58795 6.828 6.58795 3.97192 2.80792 5.37598 0 ]xsh
grestore
grestore
gsave
68.213 673.425 mo
530.554 673.425 li
530.554 625.506 li
68.213 625.506 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
VQWDJE+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/icircumflex <1C60D8A8C9B88055FF27B3934D040E8DD576AF17FCA550557D
33F570F6A36E3E5CFD36CE8DC3E4C9917848D126A5731B9D4A912A4BDECEB04D
D9B32185> |-
/X <1C60D8A8C9B7E02AFD7F1EBE5CC834AB58337882CD546FA2822B617194C3
C3B0F00657930754EB597831AE300036B9ECAA70E9A5E27F1ADC357E3511839A
32420F7ECDC0EBCC00D8B40AC5E5D25931717059DB677A811B684E4FC739624A
1EDBE429> |-
systemdict /gcheck known {setglobal} if end {end} if
end
VQWDJE+MyriadPro-Regular /Encoding get
dup 34 /icircumflex put
dup 88 /X put
pop
%ADOEndSubsetFont
reset_gvm
/VQWDJE+MyriadPro-Regular*1 
[32{/.notdef}rp /eacute /egrave /icircumflex 5{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two /three /four 
/.notdef /six 3{/.notdef}rp /colon 6{/.notdef}rp /A /B /C 
/D /E /F /G /H /I /J /K 
/L /M /N /O /P /.notdef /R /S 
/T /U /V /W /X /Y /Z 6{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /j /k /l /m /n /o /p 
/q /r /s /t /u /v /.notdef /x 
/y 47{/.notdef}rp /quotesingle 86{/.notdef}rp]
VQWDJE+MyriadPro-Regular nf
VQWDJE+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
158.74 645.265 mo
(Florent)
[5.84399 2.83191 6.58795 3.92395 6.01208 6.65991 0 ]xsh
197.115 645.265 mo
(LAMIRAUX,)
[5.664 7.34399 9.64801 2.86798 6.45593 7.34399 7.76404 6.85199 0 ]xsh
256.082 645.265 mo
(Directeur)
[7.992 2.80792 3.92395 6.01208 5.37598 3.97192 6.01208 6.61194 0 ]xsh
305.257 645.265 mo
(de)
[6.76794 0 ]xsh
320.581 645.265 mo
(Recherches,)
[6.45593 6.01208 5.37598 6.65991 6.01208 3.92395 5.37598 6.65991 6.01208 4.75195 0 ]xsh
382.848 645.265 mo
(LAAS-CNRS)
[5.664 7.34399 7.34399 5.91595 3.68408 6.96002 7.89606 6.45593 0 ]xsh
149.56 659.665 mo
(Michel)
[9.64801 2.80792 5.37598 6.65991 6.01208 0 ]xsh
185.439 659.665 mo
(TAIX,)
[5.96393 7.34399 2.86798 6.85199 0 ]xsh
213.495 659.665 mo
(Ma"tre)
[9.64801 5.78394 2.80792 3.97192 3.92395 0 ]xsh
248.186 659.665 mo
(de)
[6.76794 0 ]xsh
263.51 659.665 mo
(Conf rences,)
[6.96002 6.58795 6.65991 3.50409 6.01208 3.92395 6.01208 6.65991 5.37598 6.01208 4.75195 0 
]xsh
330.997 659.665 mo
(Universit )
[7.76404 6.65991 2.80792 5.77203 6.01208 3.92395 4.75195 2.80792 3.97192 0 ]xsh
384.024 659.665 mo
(Paul)
[6.38397 5.78394 6.61194 0 ]xsh
408.18 659.665 mo
(Sabatier)
[5.91595 5.78394 6.828 5.78394 3.97192 2.80792 6.01208 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
true set_gvm
/VQWDIZ+CronosPro-Italic-Identity-H uf
/VQWDIZ+CronosPro-Italic /CIDFont ur
reset_gvm
true set_gvm
/VQWDJD+CronosPro-Bold*1 uf
/VQWDJD+CronosPro-Bold uf
/MGCBAA+CronosPro-Bold uf
reset_gvm
true set_gvm
/VQWDJC+CronosPro-Bold*1 uf
/VQWDJC+CronosPro-Bold uf
/JRNAAA+CronosPro-Bold uf
reset_gvm
true set_gvm
/VQWDJB+CronosPro-Bold*1 uf
/VQWDJB+CronosPro-Bold uf
/VYRAAA+CronosPro-Bold uf
reset_gvm
true set_gvm
/VQWDJA+CronosPro-Bold*1 uf
/VQWDJA+CronosPro-Bold uf
/FPNAAA+CronosPro-Bold uf
reset_gvm
true set_gvm
/VQWDIY+CronosPro-Bold-Identity-H uf
/VQWDIY+CronosPro-Bold /CIDFont ur
reset_gvm
true set_gvm
/VQWDJF+MyriadPro-Bold*1 uf
/VQWDJF+MyriadPro-Bold uf
/MyriadPro-Bold uf
reset_gvm
true set_gvm
/VQWDJE+MyriadPro-Regular*1 uf
/VQWDJE+MyriadPro-Regular uf
/MyriadPro-Regular uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: *PageSize Letter
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
